// created by jay 0.7 (c) 1998 Axel.Schreiner@informatik.uni-osnabrueck.de

					// line 2 "grammar.jay"
class CilParser {

					// line 7
// %token constants

  public static final int K_ERROR = 257;
  public static final int K_BAD_COMMENT = 258;
  public static final int K_BAD_LITERAL = 259;
  public static final int ID = 260;
  public static final int DOTTEDNAME = 261;
  public static final int QSTRING = 262;
  public static final int SQSTRING = 263;
  public static final int INT64 = 264;
  public static final int FLOAT64 = 265;
  public static final int HEXBYTE = 266;
  public static final int TYPEDEF_T = 267;
  public static final int TYPEDEF_M = 268;
  public static final int TYPEDEF_F = 269;
  public static final int TYPEDEF_TS = 270;
  public static final int TYPEDEF_MR = 271;
  public static final int TYPEDEF_CA = 272;
  public static final int K_VOID = 273;
  public static final int K_BOOL = 274;
  public static final int K_CHAR = 275;
  public static final int K_UNSIGNED = 276;
  public static final int K_INT = 277;
  public static final int K_INT8 = 278;
  public static final int K_INT16 = 279;
  public static final int K_INT32 = 280;
  public static final int K_INT64 = 281;
  public static final int K_FLOAT = 282;
  public static final int K_FLOAT32 = 283;
  public static final int K_FLOAT64 = 284;
  public static final int K_BYTEARRAY = 285;
  public static final int K_UINT = 286;
  public static final int K_UINT8 = 287;
  public static final int K_UINT16 = 288;
  public static final int K_UINT32 = 289;
  public static final int K_UINT64 = 290;
  public static final int K_FLAGS = 291;
  public static final int K_CALLCONV = 292;
  public static final int K_MDTOKEN = 293;
  public static final int K_OBJECT = 294;
  public static final int K_STRING = 295;
  public static final int K_NULLREF = 296;
  public static final int K_DEFAULT = 297;
  public static final int K_CDECL = 298;
  public static final int K_VARARG = 299;
  public static final int K_STDCALL = 300;
  public static final int K_THISCALL = 301;
  public static final int K_FASTCALL = 302;
  public static final int K_CLASS = 303;
  public static final int K_TYPEDREF = 304;
  public static final int K_UNMANAGED = 305;
  public static final int K_FINALLY = 306;
  public static final int K_HANDLER = 307;
  public static final int K_CATCH = 308;
  public static final int K_FILTER = 309;
  public static final int K_FAULT = 310;
  public static final int K_EXTENDS = 311;
  public static final int K_IMPLEMENTS = 312;
  public static final int K_TO = 313;
  public static final int K_AT = 314;
  public static final int K_TLS = 315;
  public static final int K_TRUE = 316;
  public static final int K_FALSE = 317;
  public static final int D_INTERFACEIMPL = 318;
  public static final int K_VALUE = 319;
  public static final int K_VALUETYPE = 320;
  public static final int K_NATIVE = 321;
  public static final int K_INSTANCE = 322;
  public static final int K_SPECIALNAME = 323;
  public static final int K_FORWARDER = 324;
  public static final int K_STATIC = 325;
  public static final int K_PUBLIC = 326;
  public static final int K_PRIVATE = 327;
  public static final int K_FAMILY = 328;
  public static final int K_FINAL = 329;
  public static final int K_SYNCHRONIZED = 330;
  public static final int K_INTERFACE = 331;
  public static final int K_SEALED = 332;
  public static final int K_NESTED = 333;
  public static final int K_ABSTRACT = 334;
  public static final int K_AUTO = 335;
  public static final int K_SEQUENTIAL = 336;
  public static final int K_EXPLICIT = 337;
  public static final int K_ANSI = 338;
  public static final int K_UNICODE = 339;
  public static final int K_AUTOCHAR = 340;
  public static final int K_IMPORT = 341;
  public static final int K_ENUM = 342;
  public static final int K_VIRTUAL = 343;
  public static final int K_NOINLINING = 344;
  public static final int K_AGGRESSIVEINLINING = 345;
  public static final int K_NOOPTIMIZATION = 346;
  public static final int K_AGGRESSIVEOPTIMIZATION = 347;
  public static final int K_UNMANAGEDEXP = 348;
  public static final int K_BEFOREFIELDINIT = 349;
  public static final int K_STRICT = 350;
  public static final int K_RETARGETABLE = 351;
  public static final int K_WINDOWSRUNTIME = 352;
  public static final int K_NOPLATFORM = 353;
  public static final int K_METHOD = 354;
  public static final int K_FIELD = 355;
  public static final int K_PINNED = 356;
  public static final int K_MODREQ = 357;
  public static final int K_MODOPT = 358;
  public static final int K_SERIALIZABLE = 359;
  public static final int K_PROPERTY = 360;
  public static final int K_TYPE = 361;
  public static final int K_ASSEMBLY = 362;
  public static final int K_FAMANDASSEM = 363;
  public static final int K_FAMORASSEM = 364;
  public static final int K_PRIVATESCOPE = 365;
  public static final int K_HIDEBYSIG = 366;
  public static final int K_NEWSLOT = 367;
  public static final int K_RTSPECIALNAME = 368;
  public static final int K_PINVOKEIMPL = 369;
  public static final int D_CTOR = 370;
  public static final int D_CCTOR = 371;
  public static final int K_LITERAL = 372;
  public static final int K_NOTSERIALIZED = 373;
  public static final int K_INITONLY = 374;
  public static final int K_REQSECOBJ = 375;
  public static final int K_CIL = 376;
  public static final int K_OPTIL = 377;
  public static final int K_MANAGED = 378;
  public static final int K_FORWARDREF = 379;
  public static final int K_PRESERVESIG = 380;
  public static final int K_RUNTIME = 381;
  public static final int K_INTERNALCALL = 382;
  public static final int D_IMPORT = 383;
  public static final int K_NOMANGLE = 384;
  public static final int K_LASTERR = 385;
  public static final int K_WINAPI = 386;
  public static final int K_AS = 387;
  public static final int K_BESTFIT = 388;
  public static final int K_ON = 389;
  public static final int K_OFF = 390;
  public static final int K_CHARMAPERROR = 391;
  public static final int INSTR_NONE = 392;
  public static final int INSTR_VAR = 393;
  public static final int INSTR_I = 394;
  public static final int INSTR_I8 = 395;
  public static final int INSTR_R = 396;
  public static final int INSTR_BRTARGET = 397;
  public static final int INSTR_METHOD = 398;
  public static final int INSTR_FIELD = 399;
  public static final int INSTR_TYPE = 400;
  public static final int INSTR_STRING = 401;
  public static final int INSTR_SIG = 402;
  public static final int INSTR_TOK = 403;
  public static final int INSTR_SWITCH = 404;
  public static final int D_CLASS = 405;
  public static final int D_NAMESPACE = 406;
  public static final int D_METHOD = 407;
  public static final int D_FIELD = 408;
  public static final int D_DATA = 409;
  public static final int D_THIS = 410;
  public static final int D_BASE = 411;
  public static final int D_NESTER = 412;
  public static final int D_EMITBYTE = 413;
  public static final int D_TRY = 414;
  public static final int D_MAXSTACK = 415;
  public static final int D_LOCALS = 416;
  public static final int D_ENTRYPOINT = 417;
  public static final int D_ZEROINIT = 418;
  public static final int D_EVENT = 419;
  public static final int D_ADDON = 420;
  public static final int D_REMOVEON = 421;
  public static final int D_FIRE = 422;
  public static final int D_OTHER = 423;
  public static final int D_PROPERTY = 424;
  public static final int D_SET = 425;
  public static final int D_GET = 426;
  public static final int D_PERMISSION = 427;
  public static final int D_PERMISSIONSET = 428;
  public static final int K_REQUEST = 429;
  public static final int K_DEMAND = 430;
  public static final int K_ASSERT = 431;
  public static final int K_DENY = 432;
  public static final int K_PERMITONLY = 433;
  public static final int K_LINKCHECK = 434;
  public static final int K_INHERITCHECK = 435;
  public static final int K_REQMIN = 436;
  public static final int K_REQOPT = 437;
  public static final int K_REQREFUSE = 438;
  public static final int K_PREJITGRANT = 439;
  public static final int K_PREJITDENY = 440;
  public static final int K_NONCASDEMAND = 441;
  public static final int K_NONCASLINKDEMAND = 442;
  public static final int K_NONCASINHERITANCE = 443;
  public static final int D_LINE = 444;
  public static final int P_LINE = 445;
  public static final int D_LANGUAGE = 446;
  public static final int D_CUSTOM = 447;
  public static final int K_INIT = 448;
  public static final int D_SIZE = 449;
  public static final int D_PACK = 450;
  public static final int D_VTABLE = 451;
  public static final int D_VTFIXUP = 452;
  public static final int K_FROMUNMANAGED = 453;
  public static final int K_CALLMOSTDERIVED = 454;
  public static final int D_VTENTRY = 455;
  public static final int K_RETAINAPPDOMAIN = 456;
  public static final int D_FILE = 457;
  public static final int K_NOMETADATA = 458;
  public static final int D_HASH = 459;
  public static final int D_ASSEMBLY = 460;
  public static final int D_PUBLICKEY = 461;
  public static final int D_PUBLICKEYTOKEN = 462;
  public static final int K_ALGORITHM = 463;
  public static final int D_VER = 464;
  public static final int D_LOCALE = 465;
  public static final int K_EXTERN = 466;
  public static final int D_MRESOURCE = 467;
  public static final int D_MODULE = 468;
  public static final int D_EXPORT = 469;
  public static final int K_LEGACY = 470;
  public static final int K_LIBRARY = 471;
  public static final int K_X86 = 472;
  public static final int K_AMD64 = 473;
  public static final int K_ARM = 474;
  public static final int K_ARM64 = 475;
  public static final int K_MARSHAL = 476;
  public static final int K_CUSTOM = 477;
  public static final int K_SYSSTRING = 478;
  public static final int K_FIXED = 479;
  public static final int K_VARIANT = 480;
  public static final int K_CURRENCY = 481;
  public static final int K_SYSCHAR = 482;
  public static final int K_DECIMAL = 483;
  public static final int K_DATE = 484;
  public static final int K_BSTR = 485;
  public static final int K_TBSTR = 486;
  public static final int K_LPSTR = 487;
  public static final int K_LPWSTR = 488;
  public static final int K_LPTSTR = 489;
  public static final int K_OBJECTREF = 490;
  public static final int K_IUNKNOWN = 491;
  public static final int K_IDISPATCH = 492;
  public static final int K_STRUCT = 493;
  public static final int K_SAFEARRAY = 494;
  public static final int K_BYVALSTR = 495;
  public static final int K_LPVOID = 496;
  public static final int K_ANY = 497;
  public static final int K_ARRAY = 498;
  public static final int K_LPSTRUCT = 499;
  public static final int K_IIDPARAM = 500;
  public static final int K_IN = 501;
  public static final int K_OUT = 502;
  public static final int K_OPT = 503;
  public static final int D_PARAM = 504;
  public static final int D_OVERRIDE = 505;
  public static final int K_WITH = 506;
  public static final int K_NULL = 507;
  public static final int K_HRESULT = 508;
  public static final int K_CARRAY = 509;
  public static final int K_USERDEFINED = 510;
  public static final int K_RECORD = 511;
  public static final int K_FILETIME = 512;
  public static final int K_BLOB = 513;
  public static final int K_STREAM = 514;
  public static final int K_STORAGE = 515;
  public static final int K_STREAMED_OBJECT = 516;
  public static final int K_STORED_OBJECT = 517;
  public static final int K_BLOB_OBJECT = 518;
  public static final int K_CF = 519;
  public static final int K_CLSID = 520;
  public static final int K_VECTOR = 521;
  public static final int D_SUBSYSTEM = 522;
  public static final int D_CORFLAGS = 523;
  public static final int K_ALIGNMENT = 524;
  public static final int D_IMAGEBASE = 525;
  public static final int D_STACKRESERVE = 526;
  public static final int D_TYPEDEF = 527;
  public static final int D_TEMPLATE = 528;
  public static final int D_TYPELIST = 529;
  public static final int D_MSCORLIB = 530;
  public static final int P_DEFINE = 531;
  public static final int P_UNDEF = 532;
  public static final int P_IFDEF = 533;
  public static final int P_IFNDEF = 534;
  public static final int P_ELSE = 535;
  public static final int P_ENDIF = 536;
  public static final int P_INCLUDE = 537;
  public static final int K_CONSTRAINT = 538;
  public static final int OPEN_BRACE = 539;
  public static final int CLOSE_BRACE = 540;
  public static final int OPEN_BRACKET = 541;
  public static final int CLOSE_BRACKET = 542;
  public static final int OPEN_PARENS = 543;
  public static final int CLOSE_PARENS = 544;
  public static final int COMMA = 545;
  public static final int COLON = 546;
  public static final int DCOLON = 547;
  public static final int SEMICOLON = 549;
  public static final int ASSIGN = 550;
  public static final int STAR = 551;
  public static final int AMPERSAND = 552;
  public static final int PLUS = 553;
  public static final int SLASH = 554;
  public static final int BANG = 555;
  public static final int ELIPSIS = 556;
  public static final int DASH = 558;
  public static final int OPEN_ANGLE_BRACKET = 559;
  public static final int CLOSE_ANGLE_BRACKET = 560;
  public static final int yyErrorCode = 256;

  /** thrown for irrecoverable syntax errors and stack overflow.
    */
  public static class yyException extends java.lang.Exception {
    public yyException (String message) {
      super(message);
    }
  }

  /** must be implemented by a scanner object to supply input to the parser.
    */
  public interface yyInput {
    /** move on to next token.
        @return false if positioned beyond tokens.
        @throws IOException on input error.
      */
    boolean advance () throws java.io.IOException;
    /** classifies current token.
        Should not be called if advance() returned false.
        @return current %token or single character.
      */
    int token ();
    /** associated with current token.
        Should not be called if advance() returned false.
        @return value for token().
      */
    Object value ();
  }

  /** simplified error message.
      @see <a href="#yyerror(java.lang.String, java.lang.String[])">yyerror</a>
    */
  public void yyerror (String message) {
    yyerror(message, null);
  }

  /** (syntax) error message.
      Can be overwritten to control message format.
      @param message text to be displayed.
      @param expected vector of acceptable tokens, if available.
    */
  public void yyerror (String message, String[] expected) {
    if (expected != null && expected.length > 0) {
      System.err.print(message+", expecting");
      for (int n = 0; n < expected.length; ++ n)
        System.err.print(" "+expected[n]);
      System.err.println();
    } else
      System.err.println(message);
  }

  /** debugging support, requires the package jay.yydebug.
      Set to null to suppress debugging messages.
    */
//t  protected jay.yydebug.yyDebug yydebug;

  protected static final int yyFinal = 1;
//t // Put this array into a separate class so it is only initialized if debugging is actually used
//t // Use MarshalByRefObject to disable inlining
//t class YYRules  {
//t  public static final string [] yyRule = {
//t    "$accept : decls",
//t    "decls :",
//t    "decls : decls decl",
//t    "decl : classHead OPEN_BRACE classDecls CLOSE_BRACE",
//t    "decl : nameSpaceHead OPEN_BRACE decls CLOSE_BRACE",
//t    "decl : methodHead methodDecls CLOSE_BRACE",
//t    "decl : fieldDecl",
//t    "decl : dataDecl",
//t    "decl : vtableDecl",
//t    "decl : vtfixupDecl",
//t    "decl : extSourceSpec",
//t    "decl : fileDecl",
//t    "decl : assemblyHead OPEN_BRACE assemblyDecls CLOSE_BRACE",
//t    "decl : assemblyRefHead OPEN_BRACE assemblyRefDecls CLOSE_BRACE",
//t    "decl : exptypeHead OPEN_BRACE exptypeDecls CLOSE_BRACE",
//t    "decl : manifestResHead OPEN_BRACE manifestResDecls CLOSE_BRACE",
//t    "decl : moduleHead",
//t    "decl : secDecl",
//t    "decl : customAttrDecl",
//t    "decl : D_SUBSYSTEM int32",
//t    "decl : D_CORFLAGS int32",
//t    "decl : D_FILE K_ALIGNMENT int32",
//t    "decl : D_IMAGEBASE int64",
//t    "decl : D_STACKRESERVE int64",
//t    "decl : languageDecl",
//t    "decl : typedefDecl",
//t    "decl : compControl",
//t    "decl : D_TYPELIST OPEN_BRACE classNameSeq CLOSE_BRACE",
//t    "decl : D_MSCORLIB",
//t    "classNameSeq :",
//t    "classNameSeq : className classNameSeq",
//t    "compQstring : QSTRING",
//t    "compQstring : compQstring PLUS QSTRING",
//t    "languageDecl : D_LANGUAGE SQSTRING",
//t    "languageDecl : D_LANGUAGE SQSTRING COMMA SQSTRING",
//t    "languageDecl : D_LANGUAGE SQSTRING COMMA SQSTRING COMMA SQSTRING",
//t    "id : ID",
//t    "id : SQSTRING",
//t    "dottedName : id",
//t    "dottedName : DOTTEDNAME",
//t    "int32 : INT64",
//t    "int64 : INT64",
//t    "float64 : FLOAT64",
//t    "float64 : K_FLOAT32 OPEN_PARENS int32 CLOSE_PARENS",
//t    "float64 : K_FLOAT64 OPEN_PARENS int64 CLOSE_PARENS",
//t    "typedefDecl : D_TYPEDEF type K_AS dottedName",
//t    "typedefDecl : D_TYPEDEF className K_AS dottedName",
//t    "typedefDecl : D_TYPEDEF memberRef K_AS dottedName",
//t    "typedefDecl : D_TYPEDEF customDescr K_AS dottedName",
//t    "typedefDecl : D_TYPEDEF customDescrWithOwner K_AS dottedName",
//t    "compControl : P_DEFINE dottedName",
//t    "compControl : P_DEFINE dottedName compQstring",
//t    "compControl : P_UNDEF dottedName",
//t    "compControl : P_IFDEF dottedName",
//t    "compControl : P_IFNDEF dottedName",
//t    "compControl : P_ELSE",
//t    "compControl : P_ENDIF",
//t    "compControl : P_INCLUDE QSTRING",
//t    "compControl : SEMICOLON",
//t    "customDescr : D_CUSTOM customType",
//t    "customDescr : D_CUSTOM customType ASSIGN compQstring",
//t    "customDescr : D_CUSTOM customType ASSIGN OPEN_BRACE customBlobDescr CLOSE_BRACE",
//t    "customDescr : customHead bytes CLOSE_PARENS",
//t    "customDescrWithOwner : D_CUSTOM OPEN_PARENS ownerType CLOSE_PARENS customType",
//t    "customDescrWithOwner : D_CUSTOM OPEN_PARENS ownerType CLOSE_PARENS customType ASSIGN compQstring",
//t    "customDescrWithOwner : D_CUSTOM OPEN_PARENS ownerType CLOSE_PARENS customType ASSIGN OPEN_BRACE customBlobDescr CLOSE_BRACE",
//t    "customDescrWithOwner : customHeadWithOwner bytes CLOSE_PARENS",
//t    "customHead : D_CUSTOM customType ASSIGN OPEN_PARENS",
//t    "customHeadWithOwner : D_CUSTOM OPEN_PARENS ownerType CLOSE_PARENS customType ASSIGN OPEN_PARENS",
//t    "customType : methodRef",
//t    "ownerType : typeSpec",
//t    "ownerType : memberRef",
//t    "customBlobDescr : customBlobArgs customBlobNVPairs",
//t    "customBlobArgs :",
//t    "customBlobArgs : customBlobArgs serInit",
//t    "customBlobArgs : customBlobArgs compControl",
//t    "customBlobNVPairs :",
//t    "customBlobNVPairs : customBlobNVPairs fieldOrProp serializType dottedName ASSIGN serInit",
//t    "customBlobNVPairs : customBlobNVPairs compControl",
//t    "fieldOrProp : K_FIELD",
//t    "fieldOrProp : K_PROPERTY",
//t    "customAttrDecl : customDescr",
//t    "customAttrDecl : customDescrWithOwner",
//t    "customAttrDecl : TYPEDEF_CA",
//t    "serializType : simpleType",
//t    "serializType : K_TYPE",
//t    "serializType : K_OBJECT",
//t    "serializType : K_ENUM K_CLASS SQSTRING",
//t    "serializType : K_ENUM className",
//t    "serializType : serializType OPEN_BRACKET CLOSE_BRACKET",
//t    "moduleHead : D_MODULE",
//t    "moduleHead : D_MODULE dottedName",
//t    "moduleHead : D_MODULE K_EXTERN dottedName",
//t    "vtfixupDecl : D_VTFIXUP OPEN_BRACKET int32 CLOSE_BRACKET vtfixupAttr K_AT id",
//t    "vtfixupAttr :",
//t    "vtfixupAttr : vtfixupAttr K_INT32",
//t    "vtfixupAttr : vtfixupAttr K_INT64",
//t    "vtfixupAttr : vtfixupAttr K_FROMUNMANAGED",
//t    "vtfixupAttr : vtfixupAttr K_CALLMOSTDERIVED",
//t    "vtfixupAttr : vtfixupAttr K_RETAINAPPDOMAIN",
//t    "vtableDecl : vtableHead bytes CLOSE_PARENS",
//t    "vtableHead : D_VTABLE ASSIGN OPEN_PARENS",
//t    "nameSpaceHead : D_NAMESPACE dottedName",
//t    "_class : D_CLASS",
//t    "classHeadBegin : _class classAttr dottedName typarsClause",
//t    "classHead : classHeadBegin extendsClause implClause",
//t    "classAttr :",
//t    "classAttr : classAttr K_PUBLIC",
//t    "classAttr : classAttr K_PRIVATE",
//t    "classAttr : classAttr K_VALUE",
//t    "classAttr : classAttr K_ENUM",
//t    "classAttr : classAttr K_INTERFACE",
//t    "classAttr : classAttr K_SEALED",
//t    "classAttr : classAttr K_ABSTRACT",
//t    "classAttr : classAttr K_AUTO",
//t    "classAttr : classAttr K_SEQUENTIAL",
//t    "classAttr : classAttr K_EXPLICIT",
//t    "classAttr : classAttr K_ANSI",
//t    "classAttr : classAttr K_UNICODE",
//t    "classAttr : classAttr K_AUTOCHAR",
//t    "classAttr : classAttr K_IMPORT",
//t    "classAttr : classAttr K_SERIALIZABLE",
//t    "classAttr : classAttr K_WINDOWSRUNTIME",
//t    "classAttr : classAttr K_NESTED K_PUBLIC",
//t    "classAttr : classAttr K_NESTED K_PRIVATE",
//t    "classAttr : classAttr K_NESTED K_FAMILY",
//t    "classAttr : classAttr K_NESTED K_ASSEMBLY",
//t    "classAttr : classAttr K_NESTED K_FAMANDASSEM",
//t    "classAttr : classAttr K_NESTED K_FAMORASSEM",
//t    "classAttr : classAttr K_BEFOREFIELDINIT",
//t    "classAttr : classAttr K_SPECIALNAME",
//t    "classAttr : classAttr K_RTSPECIALNAME",
//t    "classAttr : classAttr K_FLAGS OPEN_PARENS int32 CLOSE_PARENS",
//t    "extendsClause :",
//t    "extendsClause : K_EXTENDS typeSpec",
//t    "implClause :",
//t    "implClause : K_IMPLEMENTS implList",
//t    "classDecls :",
//t    "classDecls : classDecls classDecl",
//t    "implList : implList COMMA typeSpec",
//t    "implList : typeSpec",
//t    "typeList :",
//t    "typeList : typeListNotEmpty",
//t    "typeListNotEmpty : typeSpec",
//t    "typeListNotEmpty : typeListNotEmpty COMMA typeSpec",
//t    "typarsClause :",
//t    "typarsClause : OPEN_ANGLE_BRACKET typars CLOSE_ANGLE_BRACKET",
//t    "typarAttrib : PLUS",
//t    "typarAttrib : DASH",
//t    "typarAttrib : K_CLASS",
//t    "typarAttrib : K_VALUETYPE",
//t    "typarAttrib : D_CTOR",
//t    "typarAttribs :",
//t    "typarAttribs : typarAttrib typarAttribs",
//t    "typars : typarAttribs tyBound dottedName typarsRest",
//t    "typars : typarAttribs dottedName typarsRest",
//t    "typarsRest :",
//t    "typarsRest : COMMA typars",
//t    "tyBound : OPEN_PARENS typeList CLOSE_PARENS",
//t    "genArity :",
//t    "genArity : genArityNotEmpty",
//t    "genArityNotEmpty : OPEN_ANGLE_BRACKET OPEN_BRACKET int32 CLOSE_BRACKET CLOSE_ANGLE_BRACKET",
//t    "classDecl : methodHead methodDecls CLOSE_BRACE",
//t    "classDecl : classHead OPEN_BRACE classDecls CLOSE_BRACE",
//t    "classDecl : eventHead OPEN_BRACE eventDecls CLOSE_BRACE",
//t    "classDecl : propHead OPEN_BRACE propDecls CLOSE_BRACE",
//t    "classDecl : fieldDecl",
//t    "classDecl : dataDecl",
//t    "classDecl : secDecl",
//t    "classDecl : extSourceSpec",
//t    "classDecl : customAttrDecl",
//t    "classDecl : D_SIZE int32",
//t    "classDecl : D_PACK int32",
//t    "classDecl : exportHead OPEN_BRACE exptypeDecls CLOSE_BRACE",
//t    "classDecl : D_OVERRIDE typeSpec DCOLON methodName K_WITH callConv type typeSpec DCOLON methodName OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "classDecl : D_OVERRIDE K_METHOD callConv type typeSpec DCOLON methodName genArity OPEN_PARENS sigArgs0 CLOSE_PARENS K_WITH K_METHOD callConv type typeSpec DCOLON methodName genArity OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "classDecl : languageDecl",
//t    "classDecl : compControl",
//t    "classDecl : D_PARAM K_TYPE OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "classDecl : D_PARAM K_TYPE dottedName",
//t    "classDecl : D_PARAM K_CONSTRAINT OPEN_BRACKET int32 CLOSE_BRACKET COMMA typeSpec",
//t    "classDecl : D_PARAM K_CONSTRAINT dottedName COMMA typeSpec",
//t    "classDecl : D_INTERFACEIMPL K_TYPE typeSpec customDescr",
//t    "fieldDecl : D_FIELD repeatOpt fieldAttr type dottedName atOpt initOpt",
//t    "fieldAttr :",
//t    "fieldAttr : fieldAttr K_STATIC",
//t    "fieldAttr : fieldAttr K_PUBLIC",
//t    "fieldAttr : fieldAttr K_PRIVATE",
//t    "fieldAttr : fieldAttr K_FAMILY",
//t    "fieldAttr : fieldAttr K_INITONLY",
//t    "fieldAttr : fieldAttr K_RTSPECIALNAME",
//t    "fieldAttr : fieldAttr K_SPECIALNAME",
//t    "fieldAttr : fieldAttr K_MARSHAL OPEN_PARENS marshalBlob CLOSE_PARENS",
//t    "fieldAttr : fieldAttr K_ASSEMBLY",
//t    "fieldAttr : fieldAttr K_FAMANDASSEM",
//t    "fieldAttr : fieldAttr K_FAMORASSEM",
//t    "fieldAttr : fieldAttr K_PRIVATESCOPE",
//t    "fieldAttr : fieldAttr K_LITERAL",
//t    "fieldAttr : fieldAttr K_NOTSERIALIZED",
//t    "fieldAttr : fieldAttr K_FLAGS OPEN_PARENS int32 CLOSE_PARENS",
//t    "atOpt :",
//t    "atOpt : K_AT id",
//t    "initOpt :",
//t    "initOpt : ASSIGN fieldInit",
//t    "repeatOpt :",
//t    "repeatOpt : OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "methodRef : callConv type typeSpec DCOLON methodName tyArgs0 OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodRef : callConv type typeSpec DCOLON methodName genArityNotEmpty OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodRef : callConv type methodName tyArgs0 OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodRef : callConv type methodName genArityNotEmpty OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodRef : mdtoken",
//t    "methodRef : TYPEDEF_M",
//t    "methodRef : TYPEDEF_MR",
//t    "callConv : K_INSTANCE callConv",
//t    "callConv : K_EXPLICIT callConv",
//t    "callConv : callKind",
//t    "callConv : K_CALLCONV OPEN_PARENS int32 CLOSE_PARENS",
//t    "callKind :",
//t    "callKind : K_DEFAULT",
//t    "callKind : K_VARARG",
//t    "callKind : K_UNMANAGED K_CDECL",
//t    "callKind : K_UNMANAGED K_STDCALL",
//t    "callKind : K_UNMANAGED K_THISCALL",
//t    "callKind : K_UNMANAGED K_FASTCALL",
//t    "mdtoken : K_MDTOKEN OPEN_PARENS int32 CLOSE_PARENS",
//t    "memberRef : methodSpec methodRef",
//t    "memberRef : K_FIELD type typeSpec DCOLON dottedName",
//t    "memberRef : K_FIELD type dottedName",
//t    "memberRef : K_FIELD TYPEDEF_F",
//t    "memberRef : K_FIELD TYPEDEF_MR",
//t    "memberRef : mdtoken",
//t    "eventHead : D_EVENT eventAttr typeSpec dottedName",
//t    "eventHead : D_EVENT eventAttr dottedName",
//t    "eventAttr :",
//t    "eventAttr : eventAttr K_RTSPECIALNAME",
//t    "eventAttr : eventAttr K_SPECIALNAME",
//t    "eventDecls :",
//t    "eventDecls : eventDecls eventDecl",
//t    "eventDecl : D_ADDON methodRef",
//t    "eventDecl : D_REMOVEON methodRef",
//t    "eventDecl : D_FIRE methodRef",
//t    "eventDecl : D_OTHER methodRef",
//t    "eventDecl : extSourceSpec",
//t    "eventDecl : customAttrDecl",
//t    "eventDecl : languageDecl",
//t    "eventDecl : compControl",
//t    "propHead : D_PROPERTY propAttr callConv type dottedName OPEN_PARENS sigArgs0 CLOSE_PARENS initOpt",
//t    "propAttr :",
//t    "propAttr : propAttr K_RTSPECIALNAME",
//t    "propAttr : propAttr K_SPECIALNAME",
//t    "propDecls :",
//t    "propDecls : propDecls propDecl",
//t    "propDecl : D_SET methodRef",
//t    "propDecl : D_GET methodRef",
//t    "propDecl : D_OTHER methodRef",
//t    "propDecl : customAttrDecl",
//t    "propDecl : extSourceSpec",
//t    "propDecl : languageDecl",
//t    "propDecl : compControl",
//t    "methodHeadPart1 : D_METHOD",
//t    "marshalClause :",
//t    "marshalClause : K_MARSHAL OPEN_PARENS marshalBlob CLOSE_PARENS",
//t    "marshalBlob : nativeType",
//t    "marshalBlob : marshalBlobHead hexbytes CLOSE_BRACE",
//t    "marshalBlobHead : OPEN_BRACE",
//t    "methodHead : methodHeadPart1 methAttr callConv paramAttr type marshalClause methodName typarsClause OPEN_PARENS sigArgs0 CLOSE_PARENS implAttr OPEN_BRACE",
//t    "methAttr :",
//t    "methAttr : methAttr K_STATIC",
//t    "methAttr : methAttr K_PUBLIC",
//t    "methAttr : methAttr K_PRIVATE",
//t    "methAttr : methAttr K_FAMILY",
//t    "methAttr : methAttr K_FINAL",
//t    "methAttr : methAttr K_SPECIALNAME",
//t    "methAttr : methAttr K_VIRTUAL",
//t    "methAttr : methAttr K_STRICT",
//t    "methAttr : methAttr K_ABSTRACT",
//t    "methAttr : methAttr K_ASSEMBLY",
//t    "methAttr : methAttr K_FAMANDASSEM",
//t    "methAttr : methAttr K_FAMORASSEM",
//t    "methAttr : methAttr K_PRIVATESCOPE",
//t    "methAttr : methAttr K_HIDEBYSIG",
//t    "methAttr : methAttr K_NEWSLOT",
//t    "methAttr : methAttr K_RTSPECIALNAME",
//t    "methAttr : methAttr K_UNMANAGEDEXP",
//t    "methAttr : methAttr K_REQSECOBJ",
//t    "methAttr : methAttr K_FLAGS OPEN_PARENS int32 CLOSE_PARENS",
//t    "methAttr : methAttr K_PINVOKEIMPL OPEN_PARENS compQstring K_AS compQstring pinvAttr CLOSE_PARENS",
//t    "methAttr : methAttr K_PINVOKEIMPL OPEN_PARENS compQstring pinvAttr CLOSE_PARENS",
//t    "methAttr : methAttr K_PINVOKEIMPL OPEN_PARENS pinvAttr CLOSE_PARENS",
//t    "pinvAttr :",
//t    "pinvAttr : pinvAttr K_NOMANGLE",
//t    "pinvAttr : pinvAttr K_ANSI",
//t    "pinvAttr : pinvAttr K_UNICODE",
//t    "pinvAttr : pinvAttr K_AUTOCHAR",
//t    "pinvAttr : pinvAttr K_LASTERR",
//t    "pinvAttr : pinvAttr K_WINAPI",
//t    "pinvAttr : pinvAttr K_CDECL",
//t    "pinvAttr : pinvAttr K_STDCALL",
//t    "pinvAttr : pinvAttr K_THISCALL",
//t    "pinvAttr : pinvAttr K_FASTCALL",
//t    "pinvAttr : pinvAttr K_BESTFIT COLON K_ON",
//t    "pinvAttr : pinvAttr K_BESTFIT COLON K_OFF",
//t    "pinvAttr : pinvAttr K_CHARMAPERROR COLON K_ON",
//t    "pinvAttr : pinvAttr K_CHARMAPERROR COLON K_OFF",
//t    "pinvAttr : pinvAttr K_FLAGS OPEN_PARENS int32 CLOSE_PARENS",
//t    "methodName : D_CTOR",
//t    "methodName : D_CCTOR",
//t    "methodName : dottedName",
//t    "paramAttr :",
//t    "paramAttr : paramAttr OPEN_BRACKET K_IN CLOSE_BRACKET",
//t    "paramAttr : paramAttr OPEN_BRACKET K_OUT CLOSE_BRACKET",
//t    "paramAttr : paramAttr OPEN_BRACKET K_OPT CLOSE_BRACKET",
//t    "paramAttr : paramAttr OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "implAttr :",
//t    "implAttr : implAttr K_NATIVE",
//t    "implAttr : implAttr K_CIL",
//t    "implAttr : implAttr K_OPTIL",
//t    "implAttr : implAttr K_MANAGED",
//t    "implAttr : implAttr K_UNMANAGED",
//t    "implAttr : implAttr K_FORWARDREF",
//t    "implAttr : implAttr K_PRESERVESIG",
//t    "implAttr : implAttr K_RUNTIME",
//t    "implAttr : implAttr K_INTERNALCALL",
//t    "implAttr : implAttr K_SYNCHRONIZED",
//t    "implAttr : implAttr K_NOINLINING",
//t    "implAttr : implAttr K_AGGRESSIVEINLINING",
//t    "implAttr : implAttr K_NOOPTIMIZATION",
//t    "implAttr : implAttr K_AGGRESSIVEOPTIMIZATION",
//t    "implAttr : implAttr K_FLAGS OPEN_PARENS int32 CLOSE_PARENS",
//t    "localsHead : D_LOCALS",
//t    "methodDecls :",
//t    "methodDecls : methodDecls methodDecl",
//t    "methodDecl : D_EMITBYTE int32",
//t    "methodDecl : sehBlock",
//t    "methodDecl : D_MAXSTACK int32",
//t    "methodDecl : localsHead OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodDecl : localsHead K_INIT OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodDecl : D_ENTRYPOINT",
//t    "methodDecl : D_ZEROINIT",
//t    "methodDecl : dataDecl",
//t    "methodDecl : instr",
//t    "methodDecl : id COLON",
//t    "methodDecl : secDecl",
//t    "methodDecl : extSourceSpec",
//t    "methodDecl : languageDecl",
//t    "methodDecl : customAttrDecl",
//t    "methodDecl : compControl",
//t    "methodDecl : D_EXPORT OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "methodDecl : D_EXPORT OPEN_BRACKET int32 CLOSE_BRACKET K_AS id",
//t    "methodDecl : D_VTENTRY int32 COLON int32",
//t    "methodDecl : D_OVERRIDE typeSpec DCOLON methodName",
//t    "methodDecl : D_OVERRIDE K_METHOD callConv type typeSpec DCOLON methodName genArity OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "methodDecl : scopeBlock",
//t    "methodDecl : D_PARAM K_TYPE OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "methodDecl : D_PARAM K_TYPE dottedName",
//t    "methodDecl : D_PARAM K_CONSTRAINT OPEN_BRACKET int32 CLOSE_BRACKET COMMA typeSpec",
//t    "methodDecl : D_PARAM K_CONSTRAINT dottedName COMMA typeSpec",
//t    "methodDecl : D_PARAM OPEN_BRACKET int32 CLOSE_BRACKET initOpt",
//t    "scopeBlock : scopeOpen methodDecls CLOSE_BRACE",
//t    "scopeOpen : OPEN_BRACE",
//t    "sehBlock : tryBlock sehClauses",
//t    "sehClauses : sehClause sehClauses",
//t    "sehClauses : sehClause",
//t    "tryBlock : tryHead scopeBlock",
//t    "tryBlock : tryHead id K_TO id",
//t    "tryBlock : tryHead int32 K_TO int32",
//t    "tryHead : D_TRY",
//t    "sehClause : catchClause handlerBlock",
//t    "sehClause : filterClause handlerBlock",
//t    "sehClause : finallyClause handlerBlock",
//t    "sehClause : faultClause handlerBlock",
//t    "filterClause : filterHead scopeBlock",
//t    "filterClause : filterHead id",
//t    "filterClause : filterHead int32",
//t    "filterHead : K_FILTER",
//t    "catchClause : K_CATCH typeSpec",
//t    "finallyClause : K_FINALLY",
//t    "faultClause : K_FAULT",
//t    "handlerBlock : scopeBlock",
//t    "handlerBlock : K_HANDLER id K_TO id",
//t    "handlerBlock : K_HANDLER int32 K_TO int32",
//t    "dataDecl : ddHead ddBody",
//t    "ddHead : D_DATA tls id ASSIGN",
//t    "ddHead : D_DATA tls",
//t    "tls :",
//t    "tls : K_TLS",
//t    "tls : K_CIL",
//t    "ddBody : OPEN_BRACE ddItemList CLOSE_BRACE",
//t    "ddBody : ddItem",
//t    "ddItemList : ddItem COMMA ddItemList",
//t    "ddItemList : ddItem",
//t    "ddItemCount :",
//t    "ddItemCount : OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "ddItem : K_CHAR STAR OPEN_PARENS compQstring CLOSE_PARENS",
//t    "ddItem : AMPERSAND OPEN_PARENS id CLOSE_PARENS",
//t    "ddItem : bytearrayhead bytes CLOSE_PARENS",
//t    "ddItem : K_FLOAT32 OPEN_PARENS float64 CLOSE_PARENS ddItemCount",
//t    "ddItem : K_FLOAT64 OPEN_PARENS float64 CLOSE_PARENS ddItemCount",
//t    "ddItem : K_INT64 OPEN_PARENS int64 CLOSE_PARENS ddItemCount",
//t    "ddItem : K_INT32 OPEN_PARENS int32 CLOSE_PARENS ddItemCount",
//t    "ddItem : K_INT16 OPEN_PARENS int32 CLOSE_PARENS ddItemCount",
//t    "ddItem : K_INT8 OPEN_PARENS int32 CLOSE_PARENS ddItemCount",
//t    "ddItem : K_FLOAT32 ddItemCount",
//t    "ddItem : K_FLOAT64 ddItemCount",
//t    "ddItem : K_INT64 ddItemCount",
//t    "ddItem : K_INT32 ddItemCount",
//t    "ddItem : K_INT16 ddItemCount",
//t    "ddItem : K_INT8 ddItemCount",
//t    "fieldSerInit : K_FLOAT32 OPEN_PARENS float64 CLOSE_PARENS",
//t    "fieldSerInit : K_FLOAT64 OPEN_PARENS float64 CLOSE_PARENS",
//t    "fieldSerInit : K_FLOAT32 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_FLOAT64 OPEN_PARENS int64 CLOSE_PARENS",
//t    "fieldSerInit : K_INT64 OPEN_PARENS int64 CLOSE_PARENS",
//t    "fieldSerInit : K_INT32 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_INT16 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_INT8 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_UNSIGNED K_INT64 OPEN_PARENS int64 CLOSE_PARENS",
//t    "fieldSerInit : K_UNSIGNED K_INT32 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_UNSIGNED K_INT16 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_UNSIGNED K_INT8 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_UINT64 OPEN_PARENS int64 CLOSE_PARENS",
//t    "fieldSerInit : K_UINT32 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_UINT16 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_UINT8 OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_CHAR OPEN_PARENS int32 CLOSE_PARENS",
//t    "fieldSerInit : K_BOOL OPEN_PARENS truefalse CLOSE_PARENS",
//t    "fieldSerInit : bytearrayhead bytes CLOSE_PARENS",
//t    "bytearrayhead : K_BYTEARRAY OPEN_PARENS",
//t    "bytes :",
//t    "bytes : hexbytes",
//t    "hexbytes : HEXBYTE",
//t    "hexbytes : hexbytes HEXBYTE",
//t    "fieldInit : fieldSerInit",
//t    "fieldInit : compQstring",
//t    "fieldInit : K_NULLREF",
//t    "serInit : fieldSerInit",
//t    "serInit : K_STRING OPEN_PARENS K_NULLREF CLOSE_PARENS",
//t    "serInit : K_STRING OPEN_PARENS SQSTRING CLOSE_PARENS",
//t    "serInit : K_TYPE OPEN_PARENS K_CLASS SQSTRING CLOSE_PARENS",
//t    "serInit : K_TYPE OPEN_PARENS className CLOSE_PARENS",
//t    "serInit : K_TYPE OPEN_PARENS K_NULLREF CLOSE_PARENS",
//t    "serInit : K_OBJECT OPEN_PARENS serInit CLOSE_PARENS",
//t    "serInit : K_FLOAT32 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS f32seq CLOSE_PARENS",
//t    "serInit : K_FLOAT64 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS f64seq CLOSE_PARENS",
//t    "serInit : K_INT64 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i64seq CLOSE_PARENS",
//t    "serInit : K_INT32 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i32seq CLOSE_PARENS",
//t    "serInit : K_INT16 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i16seq CLOSE_PARENS",
//t    "serInit : K_INT8 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i8seq CLOSE_PARENS",
//t    "serInit : K_UINT64 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i64seq CLOSE_PARENS",
//t    "serInit : K_UINT32 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i32seq CLOSE_PARENS",
//t    "serInit : K_UINT16 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i16seq CLOSE_PARENS",
//t    "serInit : K_UINT8 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i8seq CLOSE_PARENS",
//t    "serInit : K_UNSIGNED K_INT64 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i64seq CLOSE_PARENS",
//t    "serInit : K_UNSIGNED K_INT32 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i32seq CLOSE_PARENS",
//t    "serInit : K_UNSIGNED K_INT16 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i16seq CLOSE_PARENS",
//t    "serInit : K_UNSIGNED K_INT8 OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i8seq CLOSE_PARENS",
//t    "serInit : K_CHAR OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS i16seq CLOSE_PARENS",
//t    "serInit : K_BOOL OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS boolSeq CLOSE_PARENS",
//t    "serInit : K_STRING OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS sqstringSeq CLOSE_PARENS",
//t    "serInit : K_TYPE OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS classSeq CLOSE_PARENS",
//t    "serInit : K_OBJECT OPEN_BRACKET int32 CLOSE_BRACKET OPEN_PARENS objSeq CLOSE_PARENS",
//t    "f32seq :",
//t    "f32seq : f32seq float64",
//t    "f32seq : f32seq int32",
//t    "f64seq :",
//t    "f64seq : f64seq float64",
//t    "f64seq : f64seq int64",
//t    "i64seq :",
//t    "i64seq : i64seq int64",
//t    "i32seq :",
//t    "i32seq : i32seq int32",
//t    "i16seq :",
//t    "i16seq : i16seq int32",
//t    "i8seq :",
//t    "i8seq : i8seq int32",
//t    "boolSeq :",
//t    "boolSeq : boolSeq truefalse",
//t    "sqstringSeq :",
//t    "sqstringSeq : sqstringSeq K_NULLREF",
//t    "sqstringSeq : sqstringSeq SQSTRING",
//t    "classSeq :",
//t    "classSeq : classSeq K_NULLREF",
//t    "classSeq : classSeq K_CLASS SQSTRING",
//t    "classSeq : classSeq className",
//t    "objSeq :",
//t    "objSeq : objSeq serInit",
//t    "methodSpec : K_METHOD",
//t    "instr_none : INSTR_NONE",
//t    "instr_var : INSTR_VAR",
//t    "instr_i : INSTR_I",
//t    "instr_i8 : INSTR_I8",
//t    "instr_r : INSTR_R",
//t    "instr_brtarget : INSTR_BRTARGET",
//t    "instr_method : INSTR_METHOD",
//t    "instr_field : INSTR_FIELD",
//t    "instr_type : INSTR_TYPE",
//t    "instr_string : INSTR_STRING",
//t    "instr_sig : INSTR_SIG",
//t    "instr_tok : INSTR_TOK",
//t    "instr_switch : INSTR_SWITCH",
//t    "instr_r_head : instr_r OPEN_PARENS",
//t    "instr : instr_none",
//t    "instr : instr_var int32",
//t    "instr : instr_var id",
//t    "instr : instr_i int32",
//t    "instr : instr_i8 int64",
//t    "instr : instr_r float64",
//t    "instr : instr_r int64",
//t    "instr : instr_r_head bytes CLOSE_PARENS",
//t    "instr : instr_brtarget int32",
//t    "instr : instr_brtarget id",
//t    "instr : instr_method methodRef",
//t    "instr : instr_field type typeSpec DCOLON dottedName",
//t    "instr : instr_field type dottedName",
//t    "instr : instr_field mdtoken",
//t    "instr : instr_field TYPEDEF_F",
//t    "instr : instr_field TYPEDEF_MR",
//t    "instr : instr_type typeSpec",
//t    "instr : instr_string compQstring",
//t    "instr : instr_string K_ANSI OPEN_PARENS compQstring CLOSE_PARENS",
//t    "instr : instr_string bytearrayhead bytes CLOSE_PARENS",
//t    "instr : instr_sig callConv type OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "instr : instr_tok ownerType",
//t    "instr : instr_switch OPEN_PARENS labels CLOSE_PARENS",
//t    "labels :",
//t    "labels : id COMMA labels",
//t    "labels : int32 COMMA labels",
//t    "labels : id",
//t    "labels : int32",
//t    "tyArgs0 :",
//t    "tyArgs0 : OPEN_ANGLE_BRACKET tyArgs1 CLOSE_ANGLE_BRACKET",
//t    "tyArgs1 :",
//t    "tyArgs1 : tyArgs2",
//t    "tyArgs2 : type",
//t    "tyArgs2 : tyArgs2 COMMA type",
//t    "sigArgs0 :",
//t    "sigArgs0 : sigArgs1",
//t    "sigArgs1 : sigArg",
//t    "sigArgs1 : sigArgs1 COMMA sigArg",
//t    "sigArg : ELIPSIS",
//t    "sigArg : paramAttr type marshalClause",
//t    "sigArg : paramAttr type marshalClause id",
//t    "className : OPEN_BRACKET dottedName CLOSE_BRACKET slashedName",
//t    "className : OPEN_BRACKET mdtoken CLOSE_BRACKET slashedName",
//t    "className : OPEN_BRACKET STAR CLOSE_BRACKET slashedName",
//t    "className : OPEN_BRACKET D_MODULE dottedName CLOSE_BRACKET slashedName",
//t    "className : slashedName",
//t    "className : mdtoken",
//t    "className : TYPEDEF_T",
//t    "className : D_THIS",
//t    "className : D_BASE",
//t    "className : D_NESTER",
//t    "slashedName : dottedName",
//t    "slashedName : slashedName SLASH dottedName",
//t    "typeSpec : className",
//t    "typeSpec : OPEN_BRACKET dottedName CLOSE_BRACKET",
//t    "typeSpec : OPEN_BRACKET D_MODULE dottedName CLOSE_BRACKET",
//t    "typeSpec : type",
//t    "nativeType :",
//t    "nativeType : K_CUSTOM OPEN_PARENS compQstring COMMA compQstring COMMA compQstring COMMA compQstring CLOSE_PARENS",
//t    "nativeType : K_CUSTOM OPEN_PARENS compQstring COMMA compQstring CLOSE_PARENS",
//t    "nativeType : K_FIXED K_SYSSTRING OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "nativeType : K_FIXED K_ARRAY OPEN_BRACKET int32 CLOSE_BRACKET nativeType",
//t    "nativeType : K_VARIANT",
//t    "nativeType : K_CURRENCY",
//t    "nativeType : K_SYSCHAR",
//t    "nativeType : K_VOID",
//t    "nativeType : K_BOOL",
//t    "nativeType : K_INT8",
//t    "nativeType : K_INT16",
//t    "nativeType : K_INT32",
//t    "nativeType : K_INT64",
//t    "nativeType : K_FLOAT32",
//t    "nativeType : K_FLOAT64",
//t    "nativeType : K_ERROR",
//t    "nativeType : K_UNSIGNED K_INT8",
//t    "nativeType : K_UNSIGNED K_INT16",
//t    "nativeType : K_UNSIGNED K_INT32",
//t    "nativeType : K_UNSIGNED K_INT64",
//t    "nativeType : K_UINT8",
//t    "nativeType : K_UINT16",
//t    "nativeType : K_UINT32",
//t    "nativeType : K_UINT64",
//t    "nativeType : nativeType STAR",
//t    "nativeType : nativeType OPEN_BRACKET CLOSE_BRACKET",
//t    "nativeType : nativeType OPEN_BRACKET int32 CLOSE_BRACKET",
//t    "nativeType : nativeType OPEN_BRACKET int32 PLUS int32 CLOSE_BRACKET",
//t    "nativeType : nativeType OPEN_BRACKET PLUS int32 CLOSE_BRACKET",
//t    "nativeType : K_DECIMAL",
//t    "nativeType : K_DATE",
//t    "nativeType : K_BSTR",
//t    "nativeType : K_LPSTR",
//t    "nativeType : K_LPWSTR",
//t    "nativeType : K_LPTSTR",
//t    "nativeType : K_OBJECTREF",
//t    "nativeType : K_IUNKNOWN iidParamIndex",
//t    "nativeType : K_IDISPATCH iidParamIndex",
//t    "nativeType : K_STRUCT",
//t    "nativeType : K_INTERFACE iidParamIndex",
//t    "nativeType : K_SAFEARRAY variantType",
//t    "nativeType : K_SAFEARRAY variantType COMMA compQstring",
//t    "nativeType : K_INT",
//t    "nativeType : K_UNSIGNED K_INT",
//t    "nativeType : K_UINT",
//t    "nativeType : K_NESTED K_STRUCT",
//t    "nativeType : K_BYVALSTR",
//t    "nativeType : K_ANSI K_BSTR",
//t    "nativeType : K_TBSTR",
//t    "nativeType : K_VARIANT K_BOOL",
//t    "nativeType : K_METHOD",
//t    "nativeType : K_AS K_ANY",
//t    "nativeType : K_LPSTRUCT",
//t    "nativeType : TYPEDEF_TS",
//t    "iidParamIndex :",
//t    "iidParamIndex : OPEN_PARENS K_IIDPARAM ASSIGN int32 CLOSE_PARENS",
//t    "variantType :",
//t    "variantType : K_NULL",
//t    "variantType : K_VARIANT",
//t    "variantType : K_CURRENCY",
//t    "variantType : K_VOID",
//t    "variantType : K_BOOL",
//t    "variantType : K_INT8",
//t    "variantType : K_INT16",
//t    "variantType : K_INT32",
//t    "variantType : K_INT64",
//t    "variantType : K_FLOAT32",
//t    "variantType : K_FLOAT64",
//t    "variantType : K_UNSIGNED K_INT8",
//t    "variantType : K_UNSIGNED K_INT16",
//t    "variantType : K_UNSIGNED K_INT32",
//t    "variantType : K_UNSIGNED K_INT64",
//t    "variantType : K_UINT8",
//t    "variantType : K_UINT16",
//t    "variantType : K_UINT32",
//t    "variantType : K_UINT64",
//t    "variantType : STAR",
//t    "variantType : variantType OPEN_BRACKET CLOSE_BRACKET",
//t    "variantType : variantType K_VECTOR",
//t    "variantType : variantType AMPERSAND",
//t    "variantType : K_DECIMAL",
//t    "variantType : K_DATE",
//t    "variantType : K_BSTR",
//t    "variantType : K_LPSTR",
//t    "variantType : K_LPWSTR",
//t    "variantType : K_IUNKNOWN",
//t    "variantType : K_IDISPATCH",
//t    "variantType : K_SAFEARRAY",
//t    "variantType : K_INT",
//t    "variantType : K_UNSIGNED K_INT",
//t    "variantType : K_UINT",
//t    "variantType : K_ERROR",
//t    "variantType : K_HRESULT",
//t    "variantType : K_CARRAY",
//t    "variantType : K_USERDEFINED",
//t    "variantType : K_RECORD",
//t    "variantType : K_FILETIME",
//t    "variantType : K_BLOB",
//t    "variantType : K_STREAM",
//t    "variantType : K_STORAGE",
//t    "variantType : K_STREAMED_OBJECT",
//t    "variantType : K_STORED_OBJECT",
//t    "variantType : K_BLOB_OBJECT",
//t    "variantType : K_CF",
//t    "variantType : K_CLSID",
//t    "type : K_CLASS className",
//t    "type : K_OBJECT",
//t    "type : K_VALUE K_CLASS className",
//t    "type : K_VALUETYPE className",
//t    "type : type OPEN_BRACKET CLOSE_BRACKET",
//t    "type : type OPEN_BRACKET bounds1 CLOSE_BRACKET",
//t    "type : type AMPERSAND",
//t    "type : type STAR",
//t    "type : type K_PINNED",
//t    "type : type K_MODREQ OPEN_PARENS typeSpec CLOSE_PARENS",
//t    "type : type K_MODOPT OPEN_PARENS typeSpec CLOSE_PARENS",
//t    "type : methodSpec callConv type STAR OPEN_PARENS sigArgs0 CLOSE_PARENS",
//t    "type : type OPEN_ANGLE_BRACKET tyArgs1 CLOSE_ANGLE_BRACKET",
//t    "type : BANG BANG int32",
//t    "type : BANG int32",
//t    "type : BANG BANG dottedName",
//t    "type : BANG dottedName",
//t    "type : K_TYPEDREF",
//t    "type : K_VOID",
//t    "type : K_NATIVE K_INT",
//t    "type : K_NATIVE K_UNSIGNED K_INT",
//t    "type : K_NATIVE K_UINT",
//t    "type : simpleType",
//t    "type : ELIPSIS type",
//t    "simpleType : K_CHAR",
//t    "simpleType : K_STRING",
//t    "simpleType : K_BOOL",
//t    "simpleType : K_INT8",
//t    "simpleType : K_INT16",
//t    "simpleType : K_INT32",
//t    "simpleType : K_INT64",
//t    "simpleType : K_FLOAT32",
//t    "simpleType : K_FLOAT64",
//t    "simpleType : K_UNSIGNED K_INT8",
//t    "simpleType : K_UNSIGNED K_INT16",
//t    "simpleType : K_UNSIGNED K_INT32",
//t    "simpleType : K_UNSIGNED K_INT64",
//t    "simpleType : K_UINT8",
//t    "simpleType : K_UINT16",
//t    "simpleType : K_UINT32",
//t    "simpleType : K_UINT64",
//t    "simpleType : TYPEDEF_TS",
//t    "bounds1 : bound",
//t    "bounds1 : bounds1 COMMA bound",
//t    "bound :",
//t    "bound : ELIPSIS",
//t    "bound : int32",
//t    "bound : int32 ELIPSIS int32",
//t    "bound : int32 ELIPSIS",
//t    "secDecl : D_PERMISSION secAction typeSpec OPEN_PARENS nameValPairs CLOSE_PARENS",
//t    "secDecl : D_PERMISSION secAction typeSpec ASSIGN OPEN_BRACE customBlobDescr CLOSE_BRACE",
//t    "secDecl : D_PERMISSION secAction typeSpec",
//t    "secDecl : psetHead bytes CLOSE_PARENS",
//t    "secDecl : D_PERMISSIONSET secAction compQstring",
//t    "secDecl : D_PERMISSIONSET secAction ASSIGN OPEN_BRACE secAttrSetBlob CLOSE_BRACE",
//t    "secAttrSetBlob :",
//t    "secAttrSetBlob : secAttrBlob",
//t    "secAttrSetBlob : secAttrBlob COMMA secAttrSetBlob",
//t    "secAttrBlob : typeSpec ASSIGN OPEN_BRACE customBlobNVPairs CLOSE_BRACE",
//t    "secAttrBlob : K_CLASS SQSTRING ASSIGN OPEN_BRACE customBlobNVPairs CLOSE_BRACE",
//t    "psetHead : D_PERMISSIONSET secAction ASSIGN OPEN_PARENS",
//t    "psetHead : D_PERMISSIONSET secAction K_BYTEARRAY OPEN_PARENS",
//t    "nameValPairs : nameValPair",
//t    "nameValPairs : nameValPair COMMA nameValPairs",
//t    "nameValPair : compQstring ASSIGN caValue",
//t    "truefalse : K_TRUE",
//t    "truefalse : K_FALSE",
//t    "caValue : truefalse",
//t    "caValue : int32",
//t    "caValue : K_INT32 OPEN_PARENS int32 CLOSE_PARENS",
//t    "caValue : compQstring",
//t    "caValue : className OPEN_PARENS K_INT8 COLON int32 CLOSE_PARENS",
//t    "caValue : className OPEN_PARENS K_INT16 COLON int32 CLOSE_PARENS",
//t    "caValue : className OPEN_PARENS K_INT32 COLON int32 CLOSE_PARENS",
//t    "caValue : className OPEN_PARENS int32 CLOSE_PARENS",
//t    "secAction : K_REQUEST",
//t    "secAction : K_DEMAND",
//t    "secAction : K_ASSERT",
//t    "secAction : K_DENY",
//t    "secAction : K_PERMITONLY",
//t    "secAction : K_LINKCHECK",
//t    "secAction : K_INHERITCHECK",
//t    "secAction : K_REQMIN",
//t    "secAction : K_REQOPT",
//t    "secAction : K_REQREFUSE",
//t    "secAction : K_PREJITGRANT",
//t    "secAction : K_PREJITDENY",
//t    "secAction : K_NONCASDEMAND",
//t    "secAction : K_NONCASLINKDEMAND",
//t    "secAction : K_NONCASINHERITANCE",
//t    "esHead : D_LINE",
//t    "esHead : P_LINE",
//t    "extSourceSpec : esHead int32 SQSTRING",
//t    "extSourceSpec : esHead int32",
//t    "extSourceSpec : esHead int32 COLON int32 SQSTRING",
//t    "extSourceSpec : esHead int32 COLON int32",
//t    "extSourceSpec : esHead int32 COLON int32 COMMA int32 SQSTRING",
//t    "extSourceSpec : esHead int32 COLON int32 COMMA int32",
//t    "extSourceSpec : esHead int32 COMMA int32 COLON int32 SQSTRING",
//t    "extSourceSpec : esHead int32 COMMA int32 COLON int32",
//t    "extSourceSpec : esHead int32 COMMA int32 COLON int32 COMMA int32 SQSTRING",
//t    "extSourceSpec : esHead int32 COMMA int32 COLON int32 COMMA int32",
//t    "extSourceSpec : esHead int32 QSTRING",
//t    "fileDecl : D_FILE fileAttr dottedName fileEntry hashHead bytes CLOSE_PARENS fileEntry",
//t    "fileDecl : D_FILE fileAttr dottedName fileEntry",
//t    "fileAttr :",
//t    "fileAttr : fileAttr K_NOMETADATA",
//t    "fileEntry :",
//t    "fileEntry : D_ENTRYPOINT",
//t    "hashHead : D_HASH ASSIGN OPEN_PARENS",
//t    "assemblyHead : D_ASSEMBLY asmAttr dottedName",
//t    "asmAttr :",
//t    "asmAttr : asmAttr K_RETARGETABLE",
//t    "asmAttr : asmAttr K_WINDOWSRUNTIME",
//t    "asmAttr : asmAttr K_NOPLATFORM",
//t    "asmAttr : asmAttr K_LEGACY K_LIBRARY",
//t    "asmAttr : asmAttr K_CIL",
//t    "asmAttr : asmAttr K_X86",
//t    "asmAttr : asmAttr K_AMD64",
//t    "asmAttr : asmAttr K_ARM",
//t    "asmAttr : asmAttr K_ARM64",
//t    "assemblyDecls :",
//t    "assemblyDecls : assemblyDecls assemblyDecl",
//t    "assemblyDecl : D_HASH K_ALGORITHM int32",
//t    "assemblyDecl : secDecl",
//t    "assemblyDecl : asmOrRefDecl",
//t    "intOrWildcard : int32",
//t    "intOrWildcard : STAR",
//t    "asmOrRefDecl : publicKeyHead bytes CLOSE_PARENS",
//t    "asmOrRefDecl : D_VER intOrWildcard COLON intOrWildcard COLON intOrWildcard COLON intOrWildcard",
//t    "asmOrRefDecl : D_LOCALE compQstring",
//t    "asmOrRefDecl : localeHead bytes CLOSE_PARENS",
//t    "asmOrRefDecl : customAttrDecl",
//t    "asmOrRefDecl : compControl",
//t    "publicKeyHead : D_PUBLICKEY ASSIGN OPEN_PARENS",
//t    "publicKeyTokenHead : D_PUBLICKEYTOKEN ASSIGN OPEN_PARENS",
//t    "localeHead : D_LOCALE ASSIGN OPEN_PARENS",
//t    "assemblyRefHead : D_ASSEMBLY K_EXTERN asmAttr dottedName",
//t    "assemblyRefHead : D_ASSEMBLY K_EXTERN asmAttr dottedName K_AS dottedName",
//t    "assemblyRefDecls :",
//t    "assemblyRefDecls : assemblyRefDecls assemblyRefDecl",
//t    "assemblyRefDecl : hashHead bytes CLOSE_PARENS",
//t    "assemblyRefDecl : asmOrRefDecl",
//t    "assemblyRefDecl : publicKeyTokenHead bytes CLOSE_PARENS",
//t    "assemblyRefDecl : K_AUTO",
//t    "exptypeHead : D_CLASS K_EXTERN exptAttr dottedName",
//t    "exportHead : D_EXPORT exptAttr dottedName",
//t    "exptAttr :",
//t    "exptAttr : exptAttr K_PRIVATE",
//t    "exptAttr : exptAttr K_PUBLIC",
//t    "exptAttr : exptAttr K_FORWARDER",
//t    "exptAttr : exptAttr K_NESTED K_PUBLIC",
//t    "exptAttr : exptAttr K_NESTED K_PRIVATE",
//t    "exptAttr : exptAttr K_NESTED K_FAMILY",
//t    "exptAttr : exptAttr K_NESTED K_ASSEMBLY",
//t    "exptAttr : exptAttr K_NESTED K_FAMANDASSEM",
//t    "exptAttr : exptAttr K_NESTED K_FAMORASSEM",
//t    "exptypeDecls :",
//t    "exptypeDecls : exptypeDecls exptypeDecl",
//t    "exptypeDecl : D_FILE dottedName",
//t    "exptypeDecl : D_CLASS K_EXTERN slashedName",
//t    "exptypeDecl : D_ASSEMBLY K_EXTERN dottedName",
//t    "exptypeDecl : K_MDTOKEN OPEN_PARENS int32 CLOSE_PARENS",
//t    "exptypeDecl : D_CLASS int32",
//t    "exptypeDecl : customAttrDecl",
//t    "exptypeDecl : compControl",
//t    "manifestResHead : D_MRESOURCE manresAttr dottedName",
//t    "manifestResHead : D_MRESOURCE manresAttr dottedName K_AS dottedName",
//t    "manresAttr :",
//t    "manresAttr : manresAttr K_PUBLIC",
//t    "manresAttr : manresAttr K_PRIVATE",
//t    "manifestResDecls :",
//t    "manifestResDecls : manifestResDecls manifestResDecl",
//t    "manifestResDecl : D_FILE dottedName K_AT int32",
//t    "manifestResDecl : D_ASSEMBLY K_EXTERN dottedName",
//t    "manifestResDecl : customAttrDecl",
//t    "manifestResDecl : compControl",
//t  };
//t public static string getRule (int index) {
//t    return yyRule [index];
//t }
//t}
  protected static final String[] getyyNames() {
    return new String[] {    
      "end-of-file",null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,"'!'",null,null,null,null,"'&'",
      null,"'('","')'","'*'","'+'","','","'-'",null,"'/'",null,null,null,
      null,null,null,null,null,null,null,"':'","';'","'<'","'='","'>'",null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,
      "'['",null,"']'",null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,"'{'",null,"'}'",null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      null,null,null,null,null,null,null,null,null,null,null,null,null,null,
      "K_ERROR","K_BAD_COMMENT","K_BAD_LITERAL","ID","DOTTEDNAME","QSTRING",
      "SQSTRING","INT64","FLOAT64","HEXBYTE","TYPEDEF_T","TYPEDEF_M",
      "TYPEDEF_F","TYPEDEF_TS","TYPEDEF_MR","TYPEDEF_CA","K_VOID","K_BOOL",
      "K_CHAR","K_UNSIGNED","K_INT","K_INT8","K_INT16","K_INT32","K_INT64",
      "K_FLOAT","K_FLOAT32","K_FLOAT64","K_BYTEARRAY","K_UINT","K_UINT8",
      "K_UINT16","K_UINT32","K_UINT64","K_FLAGS","K_CALLCONV","K_MDTOKEN",
      "K_OBJECT","K_STRING","K_NULLREF","K_DEFAULT","K_CDECL","K_VARARG",
      "K_STDCALL","K_THISCALL","K_FASTCALL","K_CLASS","K_TYPEDREF",
      "K_UNMANAGED","K_FINALLY","K_HANDLER","K_CATCH","K_FILTER","K_FAULT",
      "K_EXTENDS","K_IMPLEMENTS","K_TO","K_AT","K_TLS","K_TRUE","K_FALSE",
      "D_INTERFACEIMPL","K_VALUE","K_VALUETYPE","K_NATIVE","K_INSTANCE",
      "K_SPECIALNAME","K_FORWARDER","K_STATIC","K_PUBLIC","K_PRIVATE",
      "K_FAMILY","K_FINAL","K_SYNCHRONIZED","K_INTERFACE","K_SEALED",
      "K_NESTED","K_ABSTRACT","K_AUTO","K_SEQUENTIAL","K_EXPLICIT","K_ANSI",
      "K_UNICODE","K_AUTOCHAR","K_IMPORT","K_ENUM","K_VIRTUAL",
      "K_NOINLINING","K_AGGRESSIVEINLINING","K_NOOPTIMIZATION",
      "K_AGGRESSIVEOPTIMIZATION","K_UNMANAGEDEXP","K_BEFOREFIELDINIT",
      "K_STRICT","K_RETARGETABLE","K_WINDOWSRUNTIME","K_NOPLATFORM",
      "K_METHOD","K_FIELD","K_PINNED","K_MODREQ","K_MODOPT",
      "K_SERIALIZABLE","K_PROPERTY","K_TYPE","K_ASSEMBLY","K_FAMANDASSEM",
      "K_FAMORASSEM","K_PRIVATESCOPE","K_HIDEBYSIG","K_NEWSLOT",
      "K_RTSPECIALNAME","K_PINVOKEIMPL","D_CTOR","D_CCTOR","K_LITERAL",
      "K_NOTSERIALIZED","K_INITONLY","K_REQSECOBJ","K_CIL","K_OPTIL",
      "K_MANAGED","K_FORWARDREF","K_PRESERVESIG","K_RUNTIME",
      "K_INTERNALCALL","D_IMPORT","K_NOMANGLE","K_LASTERR","K_WINAPI",
      "K_AS","K_BESTFIT","K_ON","K_OFF","K_CHARMAPERROR","INSTR_NONE",
      "INSTR_VAR","INSTR_I","INSTR_I8","INSTR_R","INSTR_BRTARGET",
      "INSTR_METHOD","INSTR_FIELD","INSTR_TYPE","INSTR_STRING","INSTR_SIG",
      "INSTR_TOK","INSTR_SWITCH","D_CLASS","D_NAMESPACE","D_METHOD",
      "D_FIELD","D_DATA","D_THIS","D_BASE","D_NESTER","D_EMITBYTE","D_TRY",
      "D_MAXSTACK","D_LOCALS","D_ENTRYPOINT","D_ZEROINIT","D_EVENT",
      "D_ADDON","D_REMOVEON","D_FIRE","D_OTHER","D_PROPERTY","D_SET",
      "D_GET","D_PERMISSION","D_PERMISSIONSET","K_REQUEST","K_DEMAND",
      "K_ASSERT","K_DENY","K_PERMITONLY","K_LINKCHECK","K_INHERITCHECK",
      "K_REQMIN","K_REQOPT","K_REQREFUSE","K_PREJITGRANT","K_PREJITDENY",
      "K_NONCASDEMAND","K_NONCASLINKDEMAND","K_NONCASINHERITANCE","D_LINE",
      "P_LINE","D_LANGUAGE","D_CUSTOM","K_INIT","D_SIZE","D_PACK",
      "D_VTABLE","D_VTFIXUP","K_FROMUNMANAGED","K_CALLMOSTDERIVED",
      "D_VTENTRY","K_RETAINAPPDOMAIN","D_FILE","K_NOMETADATA","D_HASH",
      "D_ASSEMBLY","D_PUBLICKEY","D_PUBLICKEYTOKEN","K_ALGORITHM","D_VER",
      "D_LOCALE","K_EXTERN","D_MRESOURCE","D_MODULE","D_EXPORT","K_LEGACY",
      "K_LIBRARY","K_X86","K_AMD64","K_ARM","K_ARM64","K_MARSHAL",
      "K_CUSTOM","K_SYSSTRING","K_FIXED","K_VARIANT","K_CURRENCY",
      "K_SYSCHAR","K_DECIMAL","K_DATE","K_BSTR","K_TBSTR","K_LPSTR",
      "K_LPWSTR","K_LPTSTR","K_OBJECTREF","K_IUNKNOWN","K_IDISPATCH",
      "K_STRUCT","K_SAFEARRAY","K_BYVALSTR","K_LPVOID","K_ANY","K_ARRAY",
      "K_LPSTRUCT","K_IIDPARAM","K_IN","K_OUT","K_OPT","D_PARAM",
      "D_OVERRIDE","K_WITH","K_NULL","K_HRESULT","K_CARRAY","K_USERDEFINED",
      "K_RECORD","K_FILETIME","K_BLOB","K_STREAM","K_STORAGE",
      "K_STREAMED_OBJECT","K_STORED_OBJECT","K_BLOB_OBJECT","K_CF",
      "K_CLSID","K_VECTOR","D_SUBSYSTEM","D_CORFLAGS","K_ALIGNMENT",
      "D_IMAGEBASE","D_STACKRESERVE","D_TYPEDEF","D_TEMPLATE","D_TYPELIST",
      "D_MSCORLIB","P_DEFINE","P_UNDEF","P_IFDEF","P_IFNDEF","P_ELSE",
      "P_ENDIF","P_INCLUDE","K_CONSTRAINT","OPEN_BRACE","CLOSE_BRACE",
      "OPEN_BRACKET","CLOSE_BRACKET","OPEN_PARENS","CLOSE_PARENS","COMMA",
      "COLON","DCOLON","\"::\"","SEMICOLON","ASSIGN","STAR","AMPERSAND",
      "PLUS","SLASH","BANG","ELIPSIS","\"...\"","DASH","OPEN_ANGLE_BRACKET",
      "CLOSE_ANGLE_BRACKET",
    };
  }
  protected static final String[] yyNames = getyyNames();

  /** index-checked interface to yyNames[].
      @param token single character or %token value.
      @return token name or [illegal] or [unknown].
    */
//t  public static final String yyname (int token) {
//t    if (token < 0 || token > yyNames.length) return "[illegal]";
//t    String name;
//t    if ((name = yyNames[token]) != null) return name;
//t    return "[unknown]";
//t  }

  /** computes list of expected tokens on error by tracing the tables.
      @param state for which to compute the list.
      @return list of token names.
    */
  protected String[] yyExpecting (int state) {
    int token, n, len = 0;
    boolean[] ok = new boolean[yyNames.length];

    if ((n = yySindex[state]) != 0)
      for (token = n < 0 ? -n : 0;
           token < yyNames.length && n+token < yyTable.length; ++ token)
        if (yyCheck[n+token] == token && !ok[token] && yyNames[token] != null) {
          ++ len;
          ok[token] = true;
        }
    if ((n = yyRindex[state]) != 0)
      for (token = n < 0 ? -n : 0;
           token < yyNames.length && n+token < yyTable.length; ++ token)
        if (yyCheck[n+token] == token && !ok[token] && yyNames[token] != null) {
          ++ len;
          ok[token] = true;
        }

    String result[] = new String[len];
    for (n = token = 0; n < len;  ++ token)
      if (ok[token]) result[n++] = yyNames[token];
    return result;
  }

  /** the generated parser, with debugging messages.
      Maintains a state and a value stack, currently with fixed maximum size.
      @param yyLex scanner.
      @param yydebug debug message writer implementing yyDebug, or null.
      @return result of the last reduction, if any.
      @throws yyException on irrecoverable parse error.
    */
  public Object yyparse (yyInput yyLex, Object yydebug)
				throws java.io.IOException, yyException {
//t    this.yydebug = (jay.yydebug.yyDebug)yydebug;
    return yyparse(yyLex);
  }

  /** initial size and increment of the state/value stack [default 256].
      This is not final so that it can be overwritten outside of invocations
      of yyparse().
    */
  protected int yyMax;

  /** executed at the beginning of a reduce action.
      Used as $$ = yyDefault($1), prior to the user-specified action, if any.
      Can be overwritten to provide deep copy, etc.
      @param first value for $1, or null.
      @return first.
    */
  protected Object yyDefault (Object first) {
    return first;
  }

  /** the generated parser.
      Maintains a state and a value stack, currently with fixed maximum size.
      @param yyLex scanner.
      @return result of the last reduction, if any.
      @throws yyException on irrecoverable parse error.
    */
  public Object yyparse (yyInput yyLex)
				throws java.io.IOException, yyException {
    if (yyMax <= 0) yyMax = 256;			// initial size
    int yyState = 0, yyStates[] = new int[yyMax];	// state stack
    Object yyVal = null, yyVals[] = new Object[yyMax];	// value stack
    int yyToken = -1;					// current input
    int yyErrorFlag = 0;				// #tks to shift

    yyLoop: for (int yyTop = 0;; ++ yyTop) {
      if (yyTop >= yyStates.length) {			// dynamically increase
        int[] i = new int[yyStates.length+yyMax];
        System.arraycopy(yyStates, 0, i, 0, yyStates.length);
        yyStates = i;
        Object[] o = new Object[yyVals.length+yyMax];
        System.arraycopy(yyVals, 0, o, 0, yyVals.length);
        yyVals = o;
      }
      yyStates[yyTop] = yyState;
      yyVals[yyTop] = yyVal;
//t      if (yydebug != null) yydebug.push(yyState, yyVal);

      yyDiscarded: for (;;) {	// discarding a token does not change stack
        int yyN;
        if ((yyN = yyDefRed[yyState]) == 0) {	// else [default] reduce (yyN)
          if (yyToken < 0) {
            yyToken = yyLex.advance() ? yyLex.token() : 0;
//t            if (yydebug != null)
//t              yydebug.lex(yyState, yyToken, yyname(yyToken), yyLex.value());
          }
          if ((yyN = yySindex[yyState]) != 0 && (yyN += yyToken) >= 0
              && yyN < yyTable.length && yyCheck[yyN] == yyToken) {
//t            if (yydebug != null)
//t              yydebug.shift(yyState, yyTable[yyN], yyErrorFlag-1);
            yyState = yyTable[yyN];		// shift to yyN
            yyVal = yyLex.value();
            yyToken = -1;
            if (yyErrorFlag > 0) -- yyErrorFlag;
            continue yyLoop;
          }
          if ((yyN = yyRindex[yyState]) != 0 && (yyN += yyToken) >= 0
              && yyN < yyTable.length && yyCheck[yyN] == yyToken)
            yyN = yyTable[yyN];			// reduce (yyN)
          else
            switch (yyErrorFlag) {
  
            case 0:
              yyerror("syntax error", yyExpecting(yyState));
//t              if (yydebug != null) yydebug.error("syntax error");
  
            case 1: case 2:
              yyErrorFlag = 3;
              do {
                if ((yyN = yySindex[yyStates[yyTop]]) != 0
                    && (yyN += yyErrorCode) >= 0 && yyN < yyTable.length
                    && yyCheck[yyN] == yyErrorCode) {
//t                  if (yydebug != null)
//t                    yydebug.shift(yyStates[yyTop], yyTable[yyN], 3);
                  yyState = yyTable[yyN];
                  yyVal = yyLex.value();
                  continue yyLoop;
                }
//t                if (yydebug != null) yydebug.pop(yyStates[yyTop]);
              } while (-- yyTop >= 0);
//t              if (yydebug != null) yydebug.reject();
              throw new yyException("irrecoverable syntax error");
  
            case 3:
              if (yyToken == 0) {
//t                if (yydebug != null) yydebug.reject();
                throw new yyException("irrecoverable syntax error at end-of-file");
              }
//t              if (yydebug != null)
//t                yydebug.discard(yyState, yyToken, yyname(yyToken),
//t  							yyLex.value());
              yyToken = -1;
              continue yyDiscarded;		// leave stack alone
            }
        }
        int yyV = yyTop + 1-yyLen[yyN];
//t        if (yydebug != null)
//t          yydebug.reduce(yyState, yyStates[yyV-1], yyN, YYRules.getRule[yyN], yyLen[yyN]);
        yyVal = yyDefault(yyV > yyTop ? null : yyVals[yyV]);
        switch (yyN) {
        }
        yyTop -= yyLen[yyN];
        yyState = yyStates[yyTop];
        int yyM = yyLhs[yyN];
        if (yyState == 0 && yyM == 0) {
//t          if (yydebug != null) yydebug.shift(0, yyFinal);
          yyState = yyFinal;
          if (yyToken < 0) {
            yyToken = yyLex.advance() ? yyLex.token() : 0;
//t            if (yydebug != null)
//t               yydebug.lex(yyState, yyToken,yyname(yyToken), yyLex.value());
          }
          if (yyToken == 0) {
//t            if (yydebug != null) yydebug.accept(yyVal);
            return yyVal;
          }
          continue yyLoop;
        }
        if ((yyN = yyGindex[yyM]) != 0 && (yyN += yyState) >= 0
            && yyN < yyTable.length && yyCheck[yyN] == yyState)
          yyState = yyTable[yyN];
        else
          yyState = yyDgoto[yyM];
//t        if (yydebug != null) yydebug.shift(yyStates[yyTop], yyState);
	 continue yyLoop;
      }
    }
  }

/*
 All more than 3 lines long rules are wrapped into a method
*/
					// line 1480
   protected static final short [] yyLhs  = {              -1,
    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,   29,   29,
   31,   31,   26,   26,   26,   32,   32,   33,   33,   24,
   25,   34,   34,   34,   27,   27,   27,   27,   27,   28,
   28,   28,   28,   28,   28,   28,   28,   28,   37,   37,
   37,   37,   38,   38,   38,   38,   41,   44,   39,   43,
   43,   40,   47,   47,   47,   48,   48,   48,   50,   50,
   23,   23,   23,   51,   51,   51,   51,   51,   51,   21,
   21,   21,   10,   53,   53,   53,   53,   53,   53,    9,
   54,    4,   55,   56,    2,   57,   57,   57,   57,   57,
   57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
   57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
   57,   57,   59,   59,   60,   60,    3,    3,   61,   61,
   63,   63,   64,   64,   58,   58,   66,   66,   66,   66,
   66,   67,   67,   65,   65,   69,   69,   68,   70,   70,
   71,   62,   62,   62,   62,   62,   62,   62,   62,   62,
   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
   62,   62,    7,   81,   81,   81,   81,   81,   81,   81,
   81,   81,   81,   81,   81,   81,   81,   81,   81,   82,
   82,   83,   83,   80,   80,   45,   45,   45,   45,   45,
   45,   45,   78,   78,   78,   78,   88,   88,   88,   88,
   88,   88,   88,   87,   36,   36,   36,   36,   36,   36,
   72,   72,   90,   90,   90,   73,   73,   91,   91,   91,
   91,   91,   91,   91,   91,   74,   92,   92,   92,   75,
   75,   93,   93,   93,   93,   93,   93,   93,   94,   95,
   95,   84,   84,   97,    5,   99,   99,   99,   99,   99,
   99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
   99,   99,   99,   99,   99,   99,   99,   99,  102,  102,
  102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
  102,  102,  102,  102,   77,   77,   77,  100,  100,  100,
  100,  100,  101,  101,  101,  101,  101,  101,  101,  101,
  101,  101,  101,  101,  101,  101,  101,  101,  103,    6,
    6,  104,  104,  104,  104,  104,  104,  104,  104,  104,
  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
  104,  104,  104,  104,  104,  104,  104,  107,  108,  105,
  110,  110,  109,  109,  109,  112,  111,  111,  111,  111,
  115,  115,  115,  118,  113,  116,  117,  114,  114,  114,
    8,  119,  119,  121,  121,  121,  120,  120,  122,  122,
  124,  124,  123,  123,  123,  123,  123,  123,  123,  123,
  123,  123,  123,  123,  123,  123,  123,  126,  126,  126,
  126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
  126,  126,  126,  126,  126,  126,  125,   42,   42,   98,
   98,   85,   85,   85,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
  128,  128,  128,  129,  129,  129,  130,  130,  131,  131,
  132,  132,  133,  133,  134,  134,  135,  135,  135,  136,
  136,  136,  136,  137,  137,   89,  138,  139,  140,  141,
  142,  143,  144,  145,  146,  147,  148,  149,  150,  151,
  106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
  106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
  106,  106,  106,  152,  152,  152,  152,  152,   86,   86,
  153,  153,  154,  154,   79,   79,  155,  155,  156,  156,
  156,   30,   30,   30,   30,   30,   30,   30,   30,   30,
   30,  157,  157,   46,   46,   46,   46,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
   96,   96,  158,  158,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,   35,   35,   35,   35,   35,   35,   35,
   35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
   35,   35,   35,   35,   35,   35,   35,   52,   52,   52,
   52,   52,   52,   52,   52,   52,   52,   52,   52,   52,
   52,   52,   52,   52,   52,  160,  160,  161,  161,  161,
  161,  161,   22,   22,   22,   22,   22,   22,  165,  165,
  165,  166,  166,  164,  164,  163,  163,  167,  127,  127,
  168,  168,  168,  168,  168,  168,  168,  168,  162,  162,
  162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
  162,  162,  162,  169,  169,   11,   11,   11,   11,   11,
   11,   11,   11,   11,   11,   11,   12,   12,  170,  170,
  171,  171,  172,   13,  173,  173,  173,  173,  173,  173,
  173,  173,  173,  173,   14,   14,  174,  174,  174,  176,
  176,  175,  175,  175,  175,  175,  175,  177,  179,  178,
   15,   15,   16,   16,  180,  180,  180,  180,   17,   76,
  181,  181,  181,  181,  181,  181,  181,  181,  181,  181,
   18,   18,  182,  182,  182,  182,  182,  182,  182,   19,
   19,  183,  183,  183,   20,   20,  184,  184,  184,  184,
  };
  protected static final short [] yyLen = {           2,
    0,    2,    4,    4,    3,    1,    1,    1,    1,    1,
    1,    4,    4,    4,    4,    1,    1,    1,    2,    2,
    3,    2,    2,    1,    1,    1,    4,    1,    0,    2,
    1,    3,    2,    4,    6,    1,    1,    1,    1,    1,
    1,    1,    4,    4,    4,    4,    4,    4,    4,    2,
    3,    2,    2,    2,    1,    1,    2,    1,    2,    4,
    6,    3,    5,    7,    9,    3,    4,    7,    1,    1,
    1,    2,    0,    2,    2,    0,    6,    2,    1,    1,
    1,    1,    1,    1,    1,    1,    3,    2,    3,    1,
    2,    3,    7,    0,    2,    2,    2,    2,    2,    3,
    3,    2,    1,    4,    3,    0,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    3,    3,    3,    3,    3,    3,    2,    2,
    2,    5,    0,    2,    0,    2,    0,    2,    3,    1,
    0,    1,    1,    3,    0,    3,    1,    1,    1,    1,
    1,    0,    2,    4,    3,    0,    2,    3,    0,    1,
    5,    3,    4,    4,    4,    1,    1,    1,    1,    1,
    2,    2,    4,   13,   22,    1,    1,    5,    3,    7,
    5,    4,    7,    0,    2,    2,    2,    2,    2,    2,
    2,    5,    2,    2,    2,    2,    2,    2,    5,    0,
    2,    0,    2,    0,    3,    9,    9,    7,    7,    1,
    1,    1,    2,    2,    1,    4,    0,    1,    1,    2,
    2,    2,    2,    4,    2,    5,    3,    2,    2,    1,
    4,    3,    0,    2,    2,    0,    2,    2,    2,    2,
    2,    1,    1,    1,    1,    9,    0,    2,    2,    0,
    2,    2,    2,    2,    1,    1,    1,    1,    1,    0,
    4,    1,    3,    1,   13,    0,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    5,    8,    6,    5,    0,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    4,
    4,    4,    4,    5,    1,    1,    1,    0,    4,    4,
    4,    4,    0,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    5,    1,    0,
    2,    2,    1,    2,    4,    5,    1,    1,    1,    1,
    2,    1,    1,    1,    1,    1,    4,    6,    4,    4,
   11,    1,    5,    3,    7,    5,    5,    3,    1,    2,
    2,    1,    2,    4,    4,    1,    2,    2,    2,    2,
    2,    2,    2,    1,    2,    1,    1,    1,    4,    4,
    2,    4,    2,    0,    1,    1,    3,    1,    3,    1,
    0,    3,    5,    4,    3,    5,    5,    5,    5,    5,
    5,    2,    2,    2,    2,    2,    2,    4,    4,    4,
    4,    4,    4,    4,    4,    5,    5,    5,    5,    4,
    4,    4,    4,    4,    4,    3,    2,    0,    1,    1,
    2,    1,    1,    1,    1,    4,    4,    5,    4,    4,
    4,    7,    7,    7,    7,    7,    7,    7,    7,    7,
    7,    8,    8,    8,    8,    7,    7,    7,    7,    7,
    0,    2,    2,    0,    2,    2,    0,    2,    0,    2,
    0,    2,    0,    2,    0,    2,    0,    2,    2,    0,
    2,    3,    2,    0,    2,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
    1,    2,    2,    2,    2,    2,    2,    3,    2,    2,
    2,    5,    3,    2,    2,    2,    2,    2,    5,    4,
    6,    2,    4,    0,    3,    3,    1,    1,    0,    3,
    0,    1,    1,    3,    0,    1,    1,    3,    1,    3,
    4,    4,    4,    4,    5,    1,    1,    1,    1,    1,
    1,    1,    3,    1,    3,    4,    1,    0,   10,    6,
    5,    6,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    2,    2,    2,    2,    1,    1,
    1,    1,    2,    3,    4,    6,    5,    1,    1,    1,
    1,    1,    1,    1,    2,    2,    1,    2,    2,    4,
    1,    2,    1,    2,    1,    2,    1,    2,    1,    2,
    1,    1,    0,    5,    0,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,
    1,    1,    1,    1,    1,    3,    2,    2,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    2,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    2,    1,    3,    2,    3,    4,    2,
    2,    2,    5,    5,    7,    4,    3,    2,    3,    2,
    1,    1,    2,    3,    2,    1,    2,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,
    1,    1,    1,    1,    1,    1,    3,    0,    1,    1,
    3,    2,    6,    7,    3,    3,    3,    6,    0,    1,
    3,    5,    6,    4,    4,    1,    3,    3,    1,    1,
    1,    1,    4,    1,    6,    6,    6,    4,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    3,    2,    5,    4,    7,
    6,    7,    6,    9,    8,    3,    8,    4,    0,    2,
    0,    1,    3,    3,    0,    2,    2,    2,    3,    2,
    2,    2,    2,    2,    0,    2,    3,    1,    1,    1,
    1,    3,    8,    2,    3,    1,    1,    3,    3,    3,
    4,    6,    0,    2,    3,    1,    3,    1,    4,    3,
    0,    2,    2,    2,    3,    3,    3,    3,    3,    3,
    0,    2,    2,    3,    3,    4,    2,    1,    1,    3,
    5,    0,    2,    2,    0,    2,    4,    3,    1,    1,
  };
  protected static final short [] yyDefRed = {            1,
    0,   83,    0,    0,  259,    0,    0,    0,    0,  754,
  755,    0,    0,    0,    0,    0,    0,  832,    0,    0,
    0,    0,    0,    0,    0,   28,    0,    0,    0,    0,
   55,   56,    0,   58,    2,    0,    0,  330,    6,    7,
    8,    9,   10,   11,    0,    0,    0,    0,   16,   17,
   18,   24,   25,   26,   81,   82,    0,    0,    0,  106,
    0,  266,    0,    0,    0,  811,   36,   39,   37,   38,
  102,    0,  184,  385,  386,    0,  739,  740,  741,  742,
  743,  744,  745,  746,  747,  748,  749,  750,  751,  752,
  753,    0,    0,    0,  211,  212,    0,    0,  218,  219,
    0,    0,    0,    0,    0,   69,    0,  210,  215,    0,
    0,    0,    0,  775,    0,    0,    0,   91,   40,   19,
   20,   41,   22,   23,  548,  705,  682,  690,  688,    0,
  691,  692,  693,  694,  695,  696,  701,  702,  703,  704,
  665,  689,    0,  681,    0,    0,    0,  486,    0,  549,
  550,  551,    0,    0,    0,    0,  552,    0,    0,    0,
    0,  686,  230,    0,    0,    0,    0,   52,   53,   54,
   57,  137,    1,    0,  785,  803,  821,  835,  430,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  381,  388,    0,
    0,    0,    0,    0,    0,    0,    0,  554,    0,    0,
  547,    0,   31,    0,    0,    0,    0,    0,    0,  220,
  221,  222,  223,  213,  214,   71,    0,   70,    0,    0,
  101,    0,   21,  770,    0,    0,  776,  777,  778,  780,
    0,  781,  782,  783,  784,  774,  833,  834,    0,   92,
  697,  698,  699,  700,  664,    0,  667,    0,  683,  685,
  228,  229,    0,    0,    0,    0,    0,    0,  678,  680,
    0,    0,  672,    0,    0,    0,    0,  671,  670,    0,
    0,    0,    0,  225,    0,    0,    0,    0,    0,    0,
    0,  487,  488,  489,  490,  491,  492,  493,  494,  495,
  496,  497,  498,  499,    0,  366,    0,  329,  337,  338,
    0,    0,    0,    0,  359,    5,  339,  343,  342,  345,
  344,  346,    0,    0,  331,  333,  340,  352,  330,    0,
    0,  501,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   62,
  431,   66,  100,    0,  109,  130,  107,  108,  111,  112,
    0,  113,  114,  115,  116,  117,  118,  119,  120,  110,
  129,  122,  121,  131,    0,  134,    0,  105,    0,  272,
  267,  268,  269,  270,  271,  275,  273,  283,  274,  276,
  277,  278,  279,  280,  281,  282,    0,  284,  308,    0,
    0,    0,  407,    0,  406,    0,  405,    0,  404,    0,
  402,    0,  403,  427,    0,    0,    0,    0,  716,  766,
  756,    0,    0,  814,  813,  812,    0,  809,  205,    0,
  191,  185,  186,  187,  188,  193,  194,  195,  196,  190,
  197,  198,  189,    0,    0,  382,    0,    0,    0,    0,
    0,  725,    0,  724,    0,    0,    0,    0,    0,   73,
   67,    0,  305,  306,    0,    0,    0,    0,   94,  772,
    0,    0,  779,    0,  666,  684,    0,    0,    0,    0,
    0,    0,  677,  679,   46,    0,    0,   45,  668,  709,
    0,    0,  706,    0,    0,    0,   47,   48,   49,    0,
  553,   27,   30,    0,  103,  233,  247,    0,    0,  811,
    0,    0,    3,    0,  330,  166,  167,  169,  168,  170,
  176,  177,  138,    0,    0,    0,    4,  332,  334,    0,
    0,    0,    0,    0,    0,    0,  341,    0,    0,    0,
  376,    0,  374,  377,  360,    0,    0,    0,    0,    0,
    0,    0,    0,  363,  502,  503,  504,  505,   42,    0,
    0,  500,  507,  506,  509,  510,  511,  515,  516,    0,
  514,  517,    0,    0,    0,    0,  522,    0,    0,    0,
    0,    0,    0,   12,  788,  796,  797,  786,  789,    0,
    0,  808,    0,    0,   13,    0,  806,    0,  804,    0,
    0,    0,    0,   14,  828,  829,  822,    0,    0,   15,
  839,  840,  836,    0,  123,  124,  125,  126,  127,  128,
    0,  104,  140,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  387,    0,    0,  395,    0,
    0,  815,  816,  817,  818,  819,  820,    0,    0,    0,
    0,    0,    0,    0,    0,   73,    0,    0,    0,    0,
    0,   32,    0,  216,  224,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  831,    0,    0,    0,    0,
    0,    0,    0,    0,  669,    0,  676,    0,    0,    0,
    0,    0,  171,  172,    0,    0,    0,    0,    0,  137,
    0,  236,  250,  821,    0,    0,    0,  354,    0,    0,
    0,    0,    0,    0,  539,    0,    0,    0,  537,  358,
  375,  361,    0,  378,  367,  368,  369,  370,  373,  372,
  371,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  508,    0,    0,  791,  790,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  827,
  823,    0,    0,    0,    0,  149,  150,  151,  147,  148,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  392,    0,    0,    0,    0,    0,    0,  389,  394,    0,
  758,    0,    0,  574,  612,  566,  567,    0,  601,  568,
  569,  570,  571,  572,  573,  603,  579,  580,  581,  582,
    0,    0,    0,  609,    0,    0,    0,    0,  564,  565,
  588,  589,  590,  607,  591,  592,  593,  594,    0,    0,
  597,    0,  605,  611,  264,    0,    0,    0,    0,    0,
    0,    0,  713,    0,    0,    0,    0,  718,    0,   35,
    0,   61,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   75,    0,
   74,    0,  435,  307,    0,    0,    0,    0,    0,   95,
   96,    0,   97,   98,   99,    0,  802,  226,    0,  673,
  674,  711,  707,    0,    0,    0,  235,  234,    0,    0,
  249,  248,    0,  810,    0,  179,    0,    0,    0,    0,
    0,  162,    0,    0,    0,  349,    0,    0,    0,    0,
    0,    0,  350,    0,  335,    0,    0,    0,    0,  365,
  364,    0,    0,    0,    0,  520,    0,    0,    0,  523,
  787,  798,    0,  800,  792,  795,  773,  799,  805,  807,
    0,    0,  825,    0,  838,  132,  146,  153,    0,    0,
    0,  139,  285,    0,    0,    0,  296,  297,  298,  299,
  291,  292,  293,  290,  294,  295,    0,    0,  288,    0,
    0,    0,    0,    0,    0,  393,  401,  400,  399,  398,
  396,  397,    0,    0,  199,  602,  575,  576,  577,  578,
    0,  598,  604,  606,  610,    0,    0,    0,  608,  595,
  596,  650,  619,  620,    0,  647,  621,  622,  623,  624,
  625,  626,  649,  631,  632,  633,  634,  617,  618,  639,
  640,  641,  642,  643,  644,  645,  646,  616,  651,  652,
  653,  654,  655,  656,  657,  658,  659,  660,  661,  662,
  663,  635,    0,  192,    0,  583,    0,  201,    0,  183,
    0,  729,  730,  732,    0,    0,  731,  728,  727,  714,
    0,   76,  721,   73,   68,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   79,   80,   78,    0,    0,    0,    0,    0,  530,    0,
    0,   93,    0,    0,    0,  182,  231,    0,    0,    0,
    0,    0,    0,  163,    0,    0,    0,    0,  164,  242,
  243,  244,  245,  237,    0,    0,    0,  165,  256,  255,
  257,  258,  251,  173,    0,  353,    0,  356,  357,    0,
  336,    0,  538,    0,    0,   43,   44,  512,  519,    0,
  526,  525,    0,  826,  837,  143,    0,    0,    0,  155,
    0,    0,  287,    0,    0,    0,  309,  310,  311,  312,
    0,    0,  762,    0,  760,    0,    0,    0,    0,  648,
  627,  628,  629,  630,  637,    0,    0,  638,  584,    0,
    0,  263,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  434,    0,  203,  432,    0,
    0,   76,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   86,    0,   85,
    0,   84,  426,    0,    0,    0,  209,  208,  767,  675,
    0,  178,    0,  181,    0,    0,  238,  239,  240,  241,
  254,  252,  253,  348,    0,    0,  541,  380,  379,  521,
    0,  158,    0,  157,  154,    0,    0,  300,  301,  302,
  303,    0,    0,    0,    0,    0,    0,    0,  636,    0,
    0,  585,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  722,   65,    0,  425,    0,  424,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  415,    0,
  414,    0,  413,    0,  412,    0,  410,  408,    0,  411,
  409,    0,  423,    0,  422,    0,  421,    0,  420,    0,
  441,    0,  437,  436,    0,  440,    0,  439,    0,   88,
    0,    0,    0,    0,  161,    0,    0,    0,    0,  355,
    0,    0,  144,  286,  304,  261,    0,  764,    0,    0,
  561,    0,  587,    0,  733,    0,    0,    0,  738,  723,
  475,  471,    0,  419,    0,  418,    0,  417,    0,  416,
  473,  471,  469,  467,  461,  464,  473,  471,  469,  467,
  484,  477,  480,  438,   87,   89,    0,  207,  206,    0,
  180,    0,    0,    0,    0,  160,    0,    0,  614,  560,
    0,    0,  586,    0,    0,    0,    0,    0,  473,  471,
  469,  467,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   77,    0,    0,    0,    0,
  793,  313,    0,  735,  736,  737,  457,  476,  456,  472,
    0,    0,    0,    0,  447,  474,  446,  445,  470,  444,
  468,  442,  463,  462,  443,  466,  465,  451,  450,  449,
  448,  460,  485,  479,  478,  458,  481,    0,  459,  483,
  246,    0,    0,    0,    0,    0,  455,  454,  453,  452,
  482,    0,    0,  351,    0,  318,  314,  323,  324,  325,
  326,  327,  315,  316,  317,  319,  320,  321,  322,  265,
    0,    0,    0,    0,  559,    0,    0,    0,    0,  174,
  328,    0,    0,    0,    0,    0,    0,    0,    0,  175,
  };
  protected static final short [] yyDgoto  = {             1,
   35,   36,  290,   37,   38,  174,   39,  317,   41,   42,
  318,   44,   45,  346,   46,  347,   47,  348,   48,  349,
   49,  319,  320,  748, 1511,  321,   53,  322,  287,  208,
  653,   70,  157,  564,  209,  226,   55,   56,  105,  667,
   57,  180,  227,   58,  106,  228,  668,  870,  871, 1114,
 1281,  162,  673,   59,   60,   61,  184,  622,  186,  378,
  624,  523, 1177, 1178,  771,  772,  773,  961, 1180, 1455,
 1456,  524,  913,  525,  914,  526,  468,  107,  716,   73,
  205,  840, 1060,  836, 1228,  672,  211,  109,  212,  691,
 1144,  692, 1153,   62,  985,  837,  838,  181,  187,  717,
 1535,  777,  324,  325,  326,  327,  724,  329,  330,  545,
  546,  331,  547,  725,  548,  549,  550,  551,   63,  198,
   76,  415,  416,  403,  872,  873, 1067, 1477, 1478, 1476,
 1475, 1468, 1473, 1467, 1484, 1485, 1483,  332,  333,  334,
  335,  336,  337,  338,  339,  340,  341,  342,  343,  344,
  345,  743,  495,  496,  718,  719,  165, 1002, 1053,  492,
  493,   92,  654,   64,  660,  661,  655, 1068,   65,  113,
  471,  596,  115,  588,  589,  749,  590,  591,  598,  599,
  203,  607,  116,  613,
  };
  protected static final short [] yySindex = {            0,
 9550,    0, -416,  482,    0, -477, -261, 1187, 1187,    0,
    0, -138,  859, -450, -395, -359, -296,    0,  -36,  -72,
  -72,  -35,  -35, 7617, -285,    0,  482,  482,  482,  482,
    0,    0,   97,    0,    0, -199, -119,    0,    0,    0,
    0,    0,    0,    0, -113,   -9,   23,   58,    0,    0,
    0,    0,    0,    0,    0,    0,  165,  165,  165,    0,
   92,    0,  565,  165,  -72,    0,    0,    0,    0,    0,
    0,  -72,    0,    0,    0,  214,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 7916, -190,  -89,    0,    0,   -6,   91,    0,    0,
  -10,  246,  246, 7820,   95,    0, 4790,    0,    0,  109,
  -72,  -72,   42,    0,  968,  221,  482,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  404,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  515,    0,  164,  515,  136,    0, 4361,    0,
    0,    0, -153, -223, 4790,  281,    0,   34,  285,  289,
  316,    0,    0, 1877,  202,  515,  457,    0,    0,    0,
    0,    0,    0, 8360,    0,    0,    0,    0,    0,  204,
  514,  240,  244, 4951, 7916,  483, 9972,  253, -274, -166,
   74,   78,   85,  156,  299,  733,  336,    0,    0,  165,
  315, -164,  489,  330, 9055,  324,  -79,    0,  203,  -81,
    0,  246,    0,  337,  -32,  350,  644,  -72,  -72,    0,
    0,    0,    0,    0,    0,    0,  377,    0, -125, 7214,
    0,  387,    0,    0,  528,  968,    0,    0,    0,    0,
  479,    0,    0,    0,    0,    0,    0,    0,  568,    0,
    0,    0,    0,    0,    0,  515,    0,  683,    0,    0,
    0,    0, 7517,  482,  422,  425,  429,  309,    0,    0,
  203,  482,    0,  437,  447,  482, -207,    0,    0, 4790,
  482,  482,  482,    0, 4790,  482,  452,  515,  350,  888,
 9340,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  -72,    0,  -72,    0,    0,    0,
  -72,  458, -171, 7979,    0,    0,    0,    0,    0,    0,
    0,    0,  456, -195,    0,    0,    0,    0,    0,  424,
  -56,    0,  391,  -72,  -35,  -34,  391, 1877, 3901, 7916,
  -83,  246, 7820,  460,  165, 3288, 1219, 1821, 1041,    0,
    0,    0,    0,  463,    0,    0,    0,    0,    0,    0,
  926,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  450,    0, 7916,    0,  467,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  476,    0,    0,  491,
  -72,  -72,    0,  -72,    0,  -72,    0,  -35,    0,  233,
    0,  233,    0,    0,  495,  492,  214,  494,    0,    0,
    0,  -72,  -72,    0,    0,    0,  996,    0,    0,  493,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  503, -180,    0,  482,  505,  457,  510,
 4790,    0, 8075,    0,  788,  506,  509,  511, 1877,    0,
    0,  350,    0,    0,  -92,    0,  507,  499,    0,    0,
  593,  672,    0,  482,    0,    0,    0,  516,  523,  482,
  482,  482,    0,    0,    0, 7916, 7916,    0,    0,    0,
  518,   46,    0,  203,  517,  524,    0,    0,    0, 7313,
    0,    0,    0,  714,    0,    0,    0,  -72,  -72,    0,
 -273, 8143,    0,  532,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  537,  550,  562,    0,    0,    0,  539,
  -72, -167, -131,  -72,  246,  559,    0,  554,  552, 8443,
    0, 7916,    0,    0,    0,  424, -265, -265, -265, -265,
  -56,  796,  801,    0,    0,    0,    0,    0,    0,  575,
  576,    0,    0,    0,    0,    0,    0,    0,    0, 7517,
    0,    0,  578,  350,  165, 4790,    0,  391,  581,  657,
  572, -212, -219,    0,    0,    0,    0,    0,    0,  165,
  165,    0,  582,  587,    0,  165,    0,  165,    0,  583,
 -209,  482,  662,    0,    0,    0,    0,  482,  665,    0,
    0,    0,    0,  -72,    0,    0,    0,    0,    0,    0,
  170,    0,    0,  594,  -72,  457, 9223,  457,  596,  597,
  598,  602,  604,  609,  610,    0,  733,  615,    0,  603,
 -181,    0,    0,    0,    0,    0,    0,  -72, 9450,  841,
  619,  482,  114,  618,  621,    0,  710,  558,  617,  632,
  641,    0,  925,    0,    0,  643,  660, 1751,  272, 9275,
  652,  654,  125,  165,  482,    0,  482,  482,  202,  202,
  202,  658,  661,  -72,    0, -218,    0, 4790,  664, 7916,
 7720, 1563,    0,    0,  489, -118, -108,  246,  666,    0,
 8526,    0,    0,    0,  -72,  659,  -72,    0,  -72,  663,
  667, 4790,  272,  552,    0,  668, 9223,  674,    0,    0,
    0,    0,  391,    0,    0,    0,    0,    0,    0,    0,
    0,  -72,  214,  -72,  -35,    0,  670,  457,  681,  137,
  682,  685,  695,    0,  -72,  698,    0,    0,  680,  699,
  350,  702,  703,  700,  705,  706,  720,  -72,  482,    0,
    0,  482,  890,  482,  721,    0,    0,    0,    0,    0,
  707,  170, -143, 7916,  722, -331,  920, -216,  704, -282,
    0,  727,  727,  727,  727,  727,  727,    0,    0,  -72,
    0,  -72,  726,    0,    0,    0,    0,  605,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  735,  783,  794,    0,  784,  737, -232, 1009,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  735,  735,
    0,  513,    0,    0,    0,  742, -245,  165,  214,  741,
  482,  225,    0,  457,  747,  744,  759,    0, 8075,    0,
  -99,    0,  183,  194,  631,  218,  238,  271,  334,  354,
  361,  373,  396,  399,  405,  415,  418,  435,    0,  508,
    0,  165,    0,    0,  499,  -72,  739,  552,  552,    0,
    0,  214,    0,    0,    0,  756,    0,    0,  202,    0,
    0,    0,    0,  203,  552,  854,    0,    0,    0,  482,
    0,    0, 4790,    0,  -72,    0,  -72,  758, 4790,  272,
 9688,    0, 2514, 1444, 2122,    0,  923,  767,  772, 7916,
  741, 7517,    0,  773,    0,  704,  552, 1023, 1026,    0,
    0,  781,  798,  482, -269,    0,  552,  391,  391,    0,
    0,    0, -212,    0,    0,    0,    0,    0,    0,    0,
  799,  202,    0,  -72,    0,    0,    0,    0, 7916,  795,
  482,    0,    0,  457, 3421,  802,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  805,  806,    0,  811,
  812,  813,  814,  804,  272,    0,    0,    0,    0,    0,
    0,    0, -179, 1085,    0,    0,    0,    0,    0,    0,
  861,    0,    0,    0,    0,  457,  821,  829,    0,    0,
    0,    0,    0,    0,  611,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   35,    0, -185,    0, -231,    0, 2195,    0,
  832,    0,    0,    0,  835,  350,    0,    0,    0,    0,
  844,    0,    0,    0,    0,  350,  -72,  236,  -72,  -72,
  436,  444,  445,  448,  -72,  -72,  -72,  -72,  -72,  -72,
  -72,  -35,  -72,  239,  -72,  546,  -72,  -72,  -72,  -72,
  -72,  -72,  -72,  -35,  -72, 3127,  -72, -157,  -72,  353,
    0,    0,    0, 2351,  836,  842,  843,  845,    0,  840,
  851,    0,  528,  852, 1877,    0,    0, -180,  855,  856,
 7916, 7517,  893,    0, 1877, 1877, 1877, 1877,    0,    0,
    0,    0,    0,    0, 1877, 1877, 1877,    0,    0,    0,
    0,    0,    0,    0,  214,    0,  858,    0,    0,  853,
    0,  214,    0,  -72,  214,    0,    0,    0,    0,  857,
    0,    0,  860,    0,    0,    0,  863,  867,  170,    0,
  795,  350,    0,  -72,  378,  383,    0,    0,    0,    0,
 9450,  450,    0,  -72,    0,  864,  -39,  -72,  -72,    0,
    0,    0,    0,    0,    0,  862,  457,    0,    0,  -72,
 -228,    0,  865,  870,  655,  872,  873,  875,  886,  887,
  891,  892,  903,  917,  932,    0,  350,    0,    0,  -72,
  331,    0, 1198,  929,  889,  919,  934,  921,  -72,  -72,
  -72,  -72,  -72,  -72,  -72,  -35,  935,  937,  936,  946,
  951,  953,  957,  956,  960,  959,  962,  966,  965,  969,
  970,  971,  979,  982,  988,  991,  994,  997, 1000,  999,
 1002, 1005, 1011, 1004, 1015, 1142, 1016,    0,  454,    0,
 -103,    0,    0,  552,  552,  950,    0,    0,    0,    0,
 1018,    0, 1021,    0, 1020,  246,    0,    0,    0,    0,
    0,    0,    0,    0, 7916,  272,    0,    0,    0,    0,
 -212,    0, 7916,    0,    0, 3642, 1024,    0,    0,    0,
    0, 1025, 1027, 1170,  -72,  457, 1037, 1038,    0,  350,
 1040,    0,  -72, 1042, 1043, 1044, 1045, 1039,  933, 1046,
 1047, 1050, 1347,    0,    0, 1048,    0, 1052,    0, 1054,
 1053, 1057, 1059, 1062, 1061, 1064, 1063, 1065,    0, 1066,
    0, 1067,    0, 1068,    0, 1069,    0,    0, 1070,    0,
    0, 1089,    0, 1090,    0, 1091,    0, 1092,    0, 1121,
    0, 1122,    0,    0, 1124,    0, 1125,    0, 1321,    0,
 1128, 1123, 1130, 1131,    0,  552, 7916,  272, 4790,    0,
 1030, 1133,    0,    0,    0,    0,  552,    0, 1132,  -93,
    0, 9767,    0, 1135,    0,  -72,  -72,  -72,    0,    0,
    0,    0, 1139,    0, 1143,    0, 1144,    0, 1149,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 3127,    0,    0, 1141,
    0, 1030, 7517, 1156, 1155,    0, -212, 1162,    0,    0,
  457, -245,    0, 1166, 1171, 1173, -243, -161,    0,    0,
    0,    0, -136, -133, -120,  -98,  -68,  -47,  -97,  -91,
  -90,  -76, 2051, -107,  329,    0,  741, 1157, 1167,  552,
    0,    0,    5,    0,    0,    0,    0,    0,    0,    0,
  -73,  -69,  -66,  -64,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 1455,    0,    0,
    0,  552,  272, 1175, 4468,  457,    0,    0,    0,    0,
    0, 1177, 1179,    0, 1180,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    2, 1218,  552,  -72,    0, 1371, 1182, 1183,  246,    0,
    0, 4790, 7517, 1181,  272, 1030, 1193,  552, 1195,    0,
  };
  protected static final short [] yyRindex = {            0,
    0,    0, 7088,    0,    0, 9160,  -40,    0,    0,    0,
    0,    0, 9398,    0,    0,   50, 1012,    0, 6767,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 1196, 1196, 1196,    0,
 -250,    0,    0, 1196,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  577,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 4935,    0,    0,    0,    0,    0,    0,
    0, 9343, 9343,    0, 4077,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 9398, 1244, 1197, 3592,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 1199,    0,    0,    0,    0, 1202, 9343,    0, 6438, 6438,
 6438, 6438, 6438, 6438,    0,    0,    0,    0,    0, 1196,
    0, 5273,    0,    0,    0,    0,    0,    0, 2919, 6118,
    0, 9398,    0,    0,    0, 6278,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 6629,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 1203,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 2749,    0,    0,    0,    0,    0, 1200,    0,    0, 1184,
    0,    0,    0,    0,    0,    0,    0, 1197, 3874,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 9398,    0,    0,
    0, 9398,    0,    0, 1196,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, -177,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 1206,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 1217,    0,    0, 5104,    0,    0, 9398,    0,
    0, 4303,    0,    0, 1200,  -28,    0, 1215,    0,    0,
 6798, 1221,    0,    0,    0,    0, 8114,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  232,    0,    0, -339,    0, 1201,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 9398,    0,    0,    0,  895,    0,
    0,    0,    0,    0,    0, 8609,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 8692, 1196,    0,    0, 1220,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 1196,
 1196,    0,    0,    0,    0, 1196,    0, 1196,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 -139,    0,    0, 1223,    0, 4053,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 5442,    0,    0,    0,    0,    0,    0,    0,  -96, 3389,
    0, 3078,    0,    0, 1228,    0,    0,    0,    0,    0,
 1225,    0,    0,    0,    0, 4506,    0, -241,    0, 1184,
    0,    0,    0, 1196,    0,    0,    0,    0, 1545, 1846,
 2147,    0,    0,  264,    0,  275,    0,    0, 7418,    0,
    0, 9398,    0,    0,    0,    0,    0, 9398,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  895,    0,    0,    0, 1238,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 8277,    0,    0,    0,    0,
 1242, 1246,    0,    0,    0,    0,    0,    0,    0,    0,
 4126,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, -139,    0,    0,    0, 4053,    0,    0,  304,    0,
    0, 6438, 6438, 6438, 6438, 6438, 6438,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  -31,    0,    0,    0,    0,    0,    0,  106,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  -31,  -31,
    0,  160,    0,    0,    0,    0, 1248,    0,    0,  922,
 3241,    0,    0,    0,    0,  282,    0,    0, 1217,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 1257,
    0, 1196,    0,    0, 1215,    0,    0,  895,  895,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 2448,    0,
    0,    0,    0, -332,  895,    0,    0,    0, -174,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 8775,    0,    0,    0,
 8858,    0,    0,    0,    0, -200, 2818,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  895, 1220, 1220,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 2724,    0,    0,    0,    0,    0,    0, 1254, 1241,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 5611, 5780,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, -109,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  287,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 4732,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 6936,    0, 9398,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 9398, 9398, 9398, 9398,    0,    0,
    0,    0,    0,    0, 9398, 9398, 9398,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  294,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 1258, -139,    0,
 1241, 4053,    0,    0,    0,    0,    0,    0,    0,    0,
  -96, 1264,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 6598,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  895,  895,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 9398,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 5949,    0,    0,    0,    0,    0,  169,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  895,    0,    0,    0,    0,
 1266,    0,    0,    0,    0,    0,  895,    0,    0,    0,
    0,  -96,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 1266,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 1267,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 1224,    0,    0,  895,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  895,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  895,    0,    0,    0,    0,    0, 9398,    0,
    0,    0,    0,    0,    0, 1266,    0,  895,    0,    0,
  };
  protected static final short [] yyGindex = {         1637,
    0, -284, 1113,    0, -281, -239, -278,   43,    0,    0,
   30,    0,    0,    0,    0,    0,    0, 1110,    0,    0,
    0,   17,    4,   -7,   11,   52,    0,   38, 1528,   -5,
  -44,  -15,   -4, -365,  -22, 1798,  -20, 1803, 1372, -646,
    0,   33, 1487,    0, -163,  -21,    0,-1013,-1074,    0,
    0,  723,    0,    0,    0,    0,    0,  650,    0,    0,
    0,    0,    0,    0,  671,    0, 1071,    0,  673,-1218,
 -441,    0,    0,    0,    0,    0, -662,  -86, -685,    0,
    0,    0, -913,  645,    0,  972,   -2,    0,   12,    0,
    0,    0,    0,    0,  918,  433,    0, 1013,    0, 1454,
    0, -755,    0,    0,    0,    0, -144,    0,    0, 1310,
    0,    0,    0,   53,    0,    0,    0,    0,    0,    0,
    0, 1222, 1795, -124,  -60,  815,-1050,    0,    0,-1160,
-1070,-1284,-1044,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, -112, 1191,    0,    0,  944, -405,   24,    0,    0,
 1186, 1864, 1031,    0, 1028,    0,    0,    0,    0,    0,
  753, 1421, 1779,    0, 1547, -923,    0,    0,    0,    0,
 1385,    0,    0,    0,
  };
  protected static final short [] yyTable = {            71,
  284,  158,  200,  160,   51,  514,  875, 1159,  515,  845,
  108,  516,  120,  121,  118,  224,  225,   50,  156, 1173,
  965,  163,  167,  168,  169,  170,  671, 1236,  924,  328,
   43, 1270,  123,  124,  351,  164,   67,   68,   54,   69,
  119,  723,  213,   40,  634,  119,  635,  119,  216,   66,
  923,  119,   52,   74,  119,  964,  119,  202, 1233,  260,
  206,  133,  260,   72,  204,  405,  407,  409,  411,  413,
  210,  213, 1062, 1063,  679,  680,  681,  285,  119,   67,
   68,  791,   69, 1193,  230,  552,  552,  696,  552,  540,
  182,  183,   67,   68,  214,   69,  201,  420,  421,  110,
  399,  163,  119,  232,  233, 1272,   67,   68,  235,   69,
  246,  249,  250,   76,   75,  164,   67,   68,   76,   69,
  152,  152,  289,  152,   94,  451,  263,  119,   67,   68,
  119,   69,  271,  145,  145,  200,  213,  255, 1273,   98,
  257,   67,   68,  119,   69,  111,  269, 1474,  266,  270,
  267,   67,   68, 1480,   69, 1524,   67,   68,  323,   69,
  288,  108,  213,  376,  112,  122,  119,   67,   68,  114,
   69,  119,  119,  119,  567,  273,  274,  275,  213,  375,
   67,   68,  445,   69,  462, 1502,  554,  122, 1525,  532,
  119,  119, 1120, 1121,  119,  119,  559,  119,  428,  122,
   98,  195,  448,   67,  267,  533,   69,  119,  467, 1124,
  457,  458,  534,   98,  560,  561,  122,  559, 1343,  384,
  533,  455,  384,   67,   68,  466,   69,  534,  122,  122,
  559,  472,  418, 1488,  384,  560,  561,  384,  384,  384,
  384,  478,  384,  384,  384, 1007,  680, 1133,  560,  561,
  475, 1170,  538,  166,  573,  576,  759,  494,  477,  479,
  483,  986,  500,  484,  697, 1008,  401,  485,  402,  491,
  455,  488,  889,  315, 1169,  701,  497,  498,  499, 1482,
  575,  501,  288,  455,  980,  981,  982,  220,  133,  221,
  222,  223,  536,  520,   51, 1055,  574,  528,   76,  529,
 1497,   67,   68,  530,   69, 1056,  519,   50, 1212,  769,
  769, 1504,  769, 1332,  264,  553,  570,  556,  572,  518,
   43,  566, 1192,  552, 1333,  555,  557,  522,   54,  565,
  750,  268,  517,   40,  489,  108,  571,  490,  747,  172,
  163,  521,   52,  260,  260,  558,  563,  539,  490,  586,
  586,  605,  611,  952,  164,  623, 1209, 1577,  171,  215,
  277,  145,  585,  792,  232, 1194,  533, 1210, 1481,  534,
  278,  279, 1486,  707,  401,  447,  404,  579,  280,  552,
  422,  423, 1499,  587,  587,  606,  612, 1402,  447,  273,
  274,  275, 1479,  629,  630,  328,  631,  265,  632,  959,
 1503,  638,  185,  152,  880,  881,  731, 1505, 1523,  709,
 1507,  258,  259,  460,  640,  641, 1498,  461,  633,  173,
  276,  260,  905, 1508, 1501,  175, 1316, 1234,  657,  117,
  179,  659,  907, 1116,  599,  889, 1526, 1391,  882, 1074,
  650,  599,  651, 1075,  558, 1510, 1518,  558,  712,  489,
 1460, 1461, 1519, 1520,  558,  217,  108,  491,  265,  455,
  448,  449,  267,  490,  682,  683,  256, 1521,  450,  676,
 1537,  265,  766,   67, 1538, 1512,   69, 1539,  467, 1540,
   67,   68,  315,   69,   67,   68,  213,   69,  119,  767,
  699,  125,  273,  274,  275,  466, 1515,  559,  384,  234,
  693,  694,  119,  559, 1061, 1326,  453,  769,  562,  613,
  454,  384,  613,  455,  307,  560,  561,   98,  552,  613,
  721,  560,  561,  706,  323,  552,  711,  708,  710,  176,
  307,   67,   68, 1491,   69,  730,  218,   97,  751,  768,
 1062, 1063,   99,  729,  100, 1565,  247,  248,  737, 1536,
  101, 1062, 1063,  740,  455, 1205,  328,  455,  273,  274,
  275,  177,  742,  260,  260,  736,  260,  102,   67,   68,
  741,   69,  119, 1531,  277, 1206,  200,  883,  884, 1207,
  885,  776,  103,  780,  278,  279, 1208,  685,   67,   68,
  686,   69,  280,  760,  119,  125,  178,  761, 1393, 1394,
  726,  727,  728,  763,  779,  903,  765,  739, 1339, 1340,
 1341,  909,   67,   68,  401,   69,  406,  775,  401,  125,
  408,   98,  752,  753, 1527,  401,  514,  410,  756,  515,
  757, 1528,  516,  219,  150,  151,  152,   37,   37,   37,
  793,  463,  464, 1401,  229,   98,  563,  494, 1275,  563,
   67,  231,  255,   69,  119, 1276,  563,  987,  988,  989,
  990,  991,  992,  842,  874,  894,  455,  272,  896,  900,
  887,  281,  888,  260,  260,  282,  892,  277,  491,  937,
  615,  251,  252,  253,  254,  323,  899,  278,  279,  922,
  904,  906,  908,  935,  926,  280,  401,  916,  412,  918,
  615,  919,  283,  615,  615,  869,  886,  929,  874,  600,
 1450,  615,  600,   67,   68,  928,   69,  931,  213,  600,
  125, 1458,  769, 1077,  930, 1078,  932,  770, 1257,  541,
 1260,  542,  543,  544, 1079, 1452, 1080,  941,  150,  151,
  152,   67,   68,  277,   69,  933,   98,  350,   67,   68,
  951,   69,  962,  278,  279,  286, 1389,  953, 1085,  955,
 1086,  280,  150,  151,  152,  153, 1318, 1319,  960, 1012,
  983, 1320, 1321,  710,   67,   68,  710,   69, 1087,  351,
 1088,  125,  993,  352,  994, 1013, 1014,  353, 1015, 1016,
 1017, 1018, 1019, 1020,  377, 1021, 1022, 1066, 1023, 1024,
 1025, 1026, 1027,  400, 1534,  712, 1076,   98,  712,  122,
  559, 1089,  424, 1090,  425,  426,  708,   67,   68,  708,
  846,  427,   37, 1058,  125, 1171, 1172,  659,  560,  561,
  734,  734,   37,   37, 1064,   37, 1065,  540,  540,  188,
   37,  414,  189,  190,  191,  192, 1542,  193,  194,  195,
   98,  383, 1010, 1011,  383,  383,  383,  383,  419,  383,
  383,  383, 1111,  150,  151,  152, 1122, 1112, 1118,  153,
 1543,  429, 1529,  446, 1091, 1126, 1092, 1567,  417,  452,
 1128,  996,  997,  998,  999, 1000, 1132, 1200, 1201, 1202,
 1203, 1204, 1579,  153, 1093, 1127, 1094, 1129, 1158, 1130,
 1160, 1095,  455, 1096, 1115,  874,  456, 1113, 1081, 1082,
 1083, 1084, 1576, 1097,  520, 1098, 1141, 1150,  605, 1182,
  459,  202,  742,  742,  150,  151,  152,  519,  469, 1168,
  741,  741, 1334, 1335, 1336, 1337, 1099, 1176, 1100, 1101,
  518, 1102, 1140, 1149,  470, 1103, 1175, 1104,  522,  473,
 1143, 1152,  606,  517,  474, 1105, 1181, 1106, 1107,  476,
 1108, 1197,  521,  480, 1142, 1151,  481,  150,  151,  152,
  482, 1297, 1298, 1299, 1300, 1109, 1239, 1110, 1240,  486,
  874, 1301, 1302, 1303, 1241, 1243, 1242, 1244, 1245,  487,
 1246,  502, 1028, 1029,  153, 1030, 1031, 1032,  531, 1033,
 1034,  537,  578, 1035, 1036,  614, 1037,  188,  621,  625,
  189,  190,  191,  192, 1227,  193,  194,  195,  626, 1038,
 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
 1049, 1050, 1051,  628,  636,  648,  637,  639,   27,   28,
   29,   30,   31,   32,   33,  649,  652, 1211,  656,  662,
  663,  593,  664,  669,  665,  153,   34,  670,  675,  273,
  274,  275,  677, 1052,  678,  273,  274,  275,  688, 1235,
  700, 1237, 1238,  684,  690,  702,  687, 1247, 1248, 1249,
 1250, 1251, 1252, 1253,  705, 1255, 1256, 1258,  703, 1261,
 1262, 1263, 1264, 1265, 1266, 1267,  714, 1269,  153, 1271,
  704, 1274, 1254,  196, 1277,  713, 1259,  715,  732, 1294,
 1295, 1514, 1517,  733, 1268,  383,  197,  734,  735,  745,
  738,  746,  108, 1291,  744,  758,   95,  762,  383,   96,
  764,  754,  108,  108,  108,  108,  755,  781,  774, 1304,
  782,  783,  108,  108,  108,  784, 1307,  785,  790, 1309,
   97,   98,  786,  787,  839,   99, 1308,  100,  789,    2,
  841,  843, 1330,  101,  308,  844,  847,  308,  308,  308,
  308,  848,  308,  308,  308,  308, 1317,  308,  308,  984,
  102,  308,  308,  308,  308,  849, 1324,  850,  308,  308,
 1327, 1328,  851,  202,  878,  103,  879,  308,  308,  852,
  917,  890, 1331,  954,  891,  504,  895,  920,  921, 1399,
  966,  925,  910,  308,  308,  308,  934,  967,  927,  968,
  969,  970, 1338, 1342,  936,  943,  938,   67,   68,  939,
   69, 1350, 1351, 1352, 1353, 1354, 1355, 1356,  940,  202,
  942,  944,  947,  546,  277,  945,  946,  948,  308,  949,
  277,  615,  616,  617,  278,  279, 1357,  971,  972,  973,
  689,  279,  280,  950,  956,  963,  957,  401,  280,  995,
 1113,  775,  775, 1390,  775, 1003, 1392, 1001, 1004, 1006,
 1005, 1410, 1009, 1400,  197, 1054, 1070,  618,  619,  620,
 1059, 1403,  505, 1071,    5,    6,    7, 1072, 1119, 1123,
 1125,  874, 1131,  974,  975,  976,  506,  977, 1156, 1155,
  978,  507,    2, 1157,    8,    9, 1161, 1409,  237,  238,
  239,  642,  643,  644, 1166, 1414,  202,  202,  202,  202,
  202,   10,   11,   12,   13, 1164,  508,  509, 1165, 1179,
  202, 1167, 1174,  240, 1184,  202, 1191, 1195,  202,  202,
 1185, 1186, 1187, 1188, 1189, 1190,  510,  645,  646,  647,
 1196, 1198,  775,  775,  775,  202,  202,  202,  202, 1199,
  202,  202,  202,  202, 1230, 1451, 1453, 1231,  202, 1283,
 1113,  202, 1232, 1287, 1284, 1285, 1286,  775,  202,  202,
  202,  511,  512,  874, 1288, 1290, 1292, 1293, 1296, 1306,
 1310,  104, 1305, 1329, 1387, 1311, 1312, 1078, 1464, 1465,
 1466, 1313, 1080, 1325, 1086, 1088, 1493, 1090,   27,   28,
   29,   30,   31,   32,   33,  202,  202,  513, 1092, 1094,
 1346, 1489, 1408, 1096, 1098,  308,   34,  241,  535,  242,
  243,  244,  245,  202,  202, 1100,  202,  202,  202,  308,
  202,  202,  202,  202,  202,  202,  202,  202,  202, 1102,
 1500,  202, 1347,  979, 1349, 1506, 1500, 1509, 1345, 1513,
  202, 1506, 1500, 1509, 1104, 1348, 1358, 1360, 1416, 1530,
 1359,  775, 1572,  775,  775,  775,  775,   13, 1516, 1361,
    2, 1561, 1362, 1506, 1500, 1509, 1363,  608, 1364, 1365,
  609, 1366, 1367,  546,  546, 1368,  546, 1369, 1370, 1395,
  546, 1372, 1371,  546, 1373,  546,  546,  546,  546,  546,
 1374,  546,  546,  546,  546, 1375,  546,  546,  874, 1376,
  546,  546,  546,  546, 1377, 1378,  546,  546,  546,  546,
 1379, 1380, 1381, 1382,  544, 1385,  546,  546, 1383, 1573,
  546, 1574, 1111,  592, 1384,  546, 1568, 1112, 1386, 1388,
 1396,  546,  546,  546,  546, 1397, 1398, 1405, 1406, 1407,
  874,   27,   28,   29,   30,   31,   32,   33, 1411, 1412,
  610, 1413, 1415, 1445, 1240, 1242, 1244, 1246, 1454,   34,
 1421, 1417, 1418, 1419, 1422, 1423, 1424,  546, 1425,  546,
  546,  546, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
 1434, 1435, 1436,  546,  546,   77,   78,   79,   80,   81,
   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
  546, 1437, 1438, 1439, 1440,  546,  546,  546,  546,  546,
  546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
  546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
  546,  546,  546, 1441, 1442,   13, 1443,  546, 1444, 1446,
  546,  546, 1447, 1448, 1449, 1459, 1463,  593, 1457,  581,
  594, 1469,  582,  583, 1487, 1470, 1471,  546,  546,  546,
  546, 1472,  546,  546,  546,  546,  876, 1490,  546, 1532,
  546, 1111,  546,  546,  546, 1492, 1112,  546,  546, 1494,
  546,  546,  546, 1533, 1495,    2, 1496, 1541, 1544,  546,
 1562, 1563, 1564, 1566, 1569, 1570, 1571, 1575,   27,   28,
   29,   30,   31,   32,   33, 1578,   29, 1344, 1580,  428,
  135,  830,  429,  531,  708,  390,   34,  546,  546,   27,
   28,   29,   30,   31,   32,   33,  719,  529,  595,  801,
  532,  136,  202,  524,  720,  546,  546,   34,  546,  546,
  546,  726,  546,  546,  546,  546,  546,  546,  546,  546,
  546,  536,  546,  546,  546,  528,  546,  546,  546,  527,
  546,  262,  546,  546,  546,  546,   72,  141,  546,  546,
  156,  142,  546,  546,  544,  544,  145,  544,  159,  291,
  562,  544,  911,  915,  544,  503,  544,  544,  544,  544,
  544,  159,  544,  544,  544,  544,  161,  544,  544,  577,
  666,  544,  544,  544,  544, 1322, 1282,  544,  544,  544,
  544, 1323,  958, 1162, 1462,  542, 1117,  544,  544, 1314,
 1057,  544,  627, 1315,   97,  722,  544,  199,  788,   99,
  877,  100,  544,  544,  544,  544, 1145,  101, 1146, 1147,
 1163,  893,   93, 1229, 1069, 1289, 1073,   27,   28,   29,
   30,   31,   32,   33,  102,  901, 1420,   10,   11,   12,
   13,  674,  236,  597,  695,   34,    0,    0,  544,  103,
  544,  544,  544,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  544,  544,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  902,  544,    0,    0,    0,    0,  544,  544,  544,  544,
  544,  544,  544,  544,  544,  544,  544,  544,  544,  544,
  544,  544,  544,  544,  544,  544,  544,  544,  544,  544,
  544,  544,  544,  544,    0,    0,    0,    0,  544,    0,
    0,  544,  544,    0,   27,   28,   29,   30,   31,   32,
   33,    0,    0, 1148,    0,    0,    0,    0,  544,  544,
  544,  544,   34,  544,  544,  544,  544,    0,    0,  544,
    0,  544,    0,  544,  544,  544,    0,    0,  544,  544,
    0,  544,  544,  544,    0,    0,    0,    0,    0,    0,
  544,    0,    0,    0,  853,  854,  855,    0,  856,  857,
  858,  859,    0,  860,  861,  195,    0,  862,  863,  864,
  865,    0,    0,    0,  866,  867,    0,    0,  544,  544,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  544,  544,    0,  544,
  544,  544,    0,  544,  544,  544,  544,  544,  544,  544,
  544,  544,    0,  544,  544,  544,    0,  544,  544,  544,
    0,  544,    2,  544,  544,  544,  544,    0,    0,  544,
  544,    0,    0,  544,  544,  542,  542,    0,  542,    0,
    0,  868,  542,  600,    0,  542,    0,  542,  542,  542,
  542,  542,    0,  542,  542,  542,  542,    0,  542,  542,
    0,    0,  542,  542,  542,  542,    0,    0,  542,  542,
  542,  542,    0,    0,   95,    0,  543,   96,  542,  542,
    0,    0,  542,    0,    0,    0,    0,  542,    0,    0,
    0,    0,    0,  542,  542,  542,  542,    0,   97,   98,
    0,    0,    0,   99,    0,  100,    0,    0,    0,    0,
    0,  101,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  102,  542,
    0,  542,  542,  542,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  103,    0,  542,  542,    0,    0,    0,
    0,    0,    0,    0,    0,  601,    0,    0,    0,    0,
    0,    0,  542,    0,    0,    0,    0,  542,  542,  542,
  542,  542,  542,  542,  542,  542,  542,  542,  542,  542,
  542,  542,  542,  542,  542,  542,  542,  542,  542,  542,
  542,  542,  542,  542,  542,    0,    0,   13,    0,  542,
    0,    0,  542,  542,    0,    0,    0,  602,    0,    0,
  603,   27,   28,   29,   30,   31,   32,   33,    0,  542,
  542,  542,  542,    0,  542,  542,  542,  542,    0,   34,
  542,    0,  542,    0,  542,  542,  542,    0,    0,  542,
  542,    0,  542,  542,  542,    0,    0,    0,    0,    0,
    0,  542,    0,    0,  853,  854,  855,    0,  856,  857,
  858,  859,    0,  860,  861,  195,    0,  862,  863,  864,
  865,    0,    0,    0,  866,  867,    0,    0,    0,  542,
  542,   27,   28,   29,   30,   31,   32,   33,    0,    0,
  604,    0,    0,    0,    0,    0,    0,  542,  542,   34,
  542,  542,  542,    0,  542,  542,  542,  542,  542,  542,
  542,  542,  542,    0,  542,  542,  542,    0,  542,  542,
  542,    0,  542,    2,  542,  542,  542,  542,    0,    0,
  542,  542,    0,    0,  542,  542,  543,  543,    0,  543,
    0,  868,    0,  543,  600,    0,  543,    0,  543,  543,
  543,  543,  543,    0,  543,  543,  543,  543,    0,  543,
  543,    0,    0,  543,  543,  543,  543,    0,    0,  543,
  543,  543,  543,    0,    0,    0,    0,  545,    0,  543,
  543,    0,    0,  543,    0,    0,  213,    0,  543,    0,
    0,    0,    0,    0,  543,  543,  543,  543, 1213, 1214,
 1215,    0, 1216, 1217, 1218, 1219,    0, 1220, 1221,  195,
    0, 1222, 1223, 1224, 1225,    0,    0,    0,    0,    0,
 1226,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  543,    0,  543,  543,  543,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  543,  543,    0,    0,
    0,    0,    0,    0,    0,    0,  601,    0,    0,    0,
    0,    0,    0,  543,    0,    0,    0,    0,  543,  543,
  543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
  543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
  543,  543,  543,  543,  543,  543,    0,    0,   13,    0,
  543,    0,    0,  543,  543,    0,    0,    0,  602,    0,
    0,  603,    0,    0,    0,    0,    0,    0,    0,    0,
  543,  543,  543,  543, 1522,  543,  543,  543,  543,    0,
    0,  543,    0,  543,    0,  543,  543,  543,    0,    0,
  543,  543,    0,  543,  543,  543,    0,    0,    0,    0,
  126,    0,  543,    0,  128,  129,  130,    0,  131,  132,
  133,  134,    0,  135,  136,    0,    0,  137,  138,  139,
  140,    0,    0,    0, 1278,  142,    0,    0,    0,    0,
  543,  543,   27,   28,   29,   30,   31,   32,   33,    0,
    0, 1154,    0,    0,    0,    0,    0,    0,  543,  543,
   34,  543,  543,  543,    0,  543,  543,  543,  543,  543,
  543,  543,  543,  543,    0,  543,  543,  543,    0,  543,
  543,  543, 1279,  543,    0,  543,  543,  543,  543,    0,
    0,  543,  543,    0,    0,  543,  543,  545,  545,    0,
  545, 1280,    0,    0,  545,    0,    0,  545,    0,  545,
  545,  545,  545,  545,    0,  545,  545,  545,  545,    0,
  545,  545,    0,    0,  545,  545,  545,  545,    0,    0,
  545,  545,  545,  545,    0,    0,    0,    0,  687,    0,
  545,  545,    0,    0,  545,    0,    0,    0,    0,  545,
    0,    0,    0,    0,    0,  545,  545,  545,  545,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    2,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  545,    0,  545,  545,  545,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  545,  545,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  545,    0,    0,    0,    0,  545,
  545,  545,  545,  545,  545,  545,  545,  545,  545,  545,
  545,  545,  545,  545,  545,  545,  545,  545,  545,  545,
  545,  545,  545,  545,  545,  545,  545,    0,    0,    0,
    0,  545,    0,    0,  545,  545,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  545,  545,  545,  545,    0,  545,  545,  545,  545,
    0,    0,  545,    0,  545,    0,  545,  545,  545,    0,
    0,  545,  545,    0,  545,  545,  545,    0,  557,    0,
    0,    0,    0,  545,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 1135, 1136, 1137, 1138,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  545,  545,    0,    0,    0,    0,   10,   11,   12,
   13,    0,    0,    0,    0,    0,    0,    0,    0,  545,
  545,    0,  545,  545,  545,    0,  545,  545,  545,  545,
  545,  545,  545,  545,  545,    0,  545,  545,  545,    0,
  545,  545,  545,    0,  545,  824,  545,  545,  545,  545,
    0,    0,  545,  545,    0,    0,  545,  545,  687,  687,
    0,  687,    0,    0,    0,  687,  824,    0,  687,    0,
  687,  687,  687,  687,  687,    0,  687,  687,  687,  687,
    0,  687,  687,    0,    0,  687,  687,  687,  687,    0,
    0,  687,  687,  687,   27,   28,   29,   30,   31,   32,
   33,  687,  687, 1139,    0,  687,    0,    0,    0,    0,
  687,    0,   34,    0,    0,    0,  687,  687,  687,  687,
    0,    0,    0,    0,    0,    0,    0,  555,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  308,    0,    0,
  308,  308,  308,  308,    0,  308,  308,  308,  308,    0,
  308,  308,  687,    0,  308,  308,  308,  308,    0,    0,
    0,  308,  308,    0,    0,    0,    0,    0,  687,  687,
  308,  308,    0,    0,    0,    0,    0,    0,  824,    0,
    0,    0,    0,    0,    0,  687,  308,  308,  308,    0,
  687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
  687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
  687,  687,  687,  687,  687,  687,  687,  687,    0,    0,
  824,  308,  687,    0,    0,  687,  687,    0,  557,  557,
  824,  557,    0,  824,    0,    0,    0,    0,    0,    0,
  557,    0,  687,  687,  687,  687,    0,  687,  687,  687,
  687,    0,    0,  687,    0,  687,    0,  687,  687,  687,
    0,    0,  687,  687,    0,  687,  687,  687,    0,    0,
    0,    0,    0,    0,  687,  557,    0,    0,    0,    0,
  557,    0,    0,    0,    0,    0,  557,    0,    0,    0,
  556,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  687,  687,  824,  824,  824,  824,  824,  824,
  824,    0,    0,  824,    0,    0,    0,    0,    0,    0,
  687,  687,  824,  687,  687,  687,    0,  687,  687,  687,
  687,  687,  687,  687,  687,  687,    0,  687,  687,    0,
    0,  687,  687,  687,    0,  687,    0,  687,  687,    0,
    0,    0,    0,  687,  687,    0,    0,    0,  687,    0,
  557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
  557,  557,  557,  557,  557,  557,  557,  557,    0,    0,
    0,  557,  557,  557,  557,  557,  557,  557,    0,    0,
    0,    0,  557,    0,    0,  557,  557,    0,    0,  555,
    0,    0,    0,    0,    0,    0,    0,    0,  308,    0,
    0,    0,  557,  557,  557,  557,    0,  557,  557,  557,
  557,    0,  308,  557,    0,  557,    0,  557,  557,  557,
    0,    0,  557,  557,  555,  557,  557,  557,  200,  555,
    0,    0,    0,    0,    0,  555,    0,    0,    0,    0,
  853,  854,  855,    0,  856,  857,  858,  859,    0,  860,
  861,  195,    0,  862,  863,  864,  865,    0,    0,    0,
  866,  867,  557,  557,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  557,  557,    0,  557,  557,  557,    0,  557,  557,  557,
  557,  557,  557,  557,  557,  557,    0,  557,  557,    0,
    0,  557,  557,  557,    0,  557,    0,  557,  557,  555,
  555,  555,  555,  555,  555,  555,  555,  555,  555,  555,
  555,  555,  555,  555,  555,  555,  555,  868,    0,    0,
  555,  555,  555,  555,  555,  555,  555,    0,    0,    0,
    0,  555,    0,    0,  555,  555,    0,    0,    0,    0,
    0,    0,  556,    0,    0,    0,    0,    0,    0,    0,
    0,  555,  555,  555,  555,    0,  555,  555,  555,  555,
    0,    0,  555,    0,  555,    0,  555,  555,  555,    0,
    0,  555,  555,    0,  555,  555,  555,  556,    0,    0,
    0,    0,  556,    0,    0,    0,    0,    0,  556,    2,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  555,  555,    0,    0,    0,    0,    0,    0,    0,
    0,   50,    0,    0,    0,    0,    0,    0,    0,  555,
  555,    0,  555,  555,  555,    0,  555,  555,  555,  555,
  555,  555,  555,  555,  555,    0,  555,  555,    0,    0,
  555,  555,  555,    0,  555,    0,  555,  555,    0,    0,
    0,    0,  556,  556,  556,  556,  556,  556,  556,  556,
  556,  556,  556,  556,  556,  556,  556,  556,  556,  556,
    0,    0,    0,  556,  556,  556,  556,  556,  556,  556,
  200,    0,    0,    0,  556,    0,    0,  556,  556,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  556,  556,  556,  556,    0,  556,
  556,  556,  556,    0,    0,  556,    0,  556,    0,  556,
  556,  556,    0,    0,  556,  556,  200,  556,  556,  556,
    0,  966,    0,    0,    8,    9,    0,    0,  967,    0,
  968,  969,  970,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   13,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  556,  556,  580,    0,  581,    0,
    0,  582,  583,    0,    0,    0,    0,    0,  971,  972,
  973,    0,  556,  556,    0,  556,  556,  556,    0,  556,
  556,  556,  556,  556,  556,  556,  556,  556,    0,  556,
  556,    0,    0,  556,  556,  556,    0,  556,    0,  556,
  556,    0,    0,  200,  200,  200,  200,  200,    0,    0,
    0,    0,    0,    0,  974,  975,  976,  200,  977,    0,
    0,  978,  200,    0,    0,  200,  200,    0,   27,   28,
   29,   30,   31,   32,   33,    0,    0,  584,    0,    0,
    0,    0,  200,  200,  200,  200,   34,  200,  200,  200,
  200,    0,    0,    0,    0,  200,    0,    0,  200,    0,
    0,   50,    0,    0,   50,  200,  200,  200,    0,    0,
    0,    0,    0,   50,    0,   50,   50,   50,    0,   50,
   50,   50,   50,   51,   50,   50,   50,    0,   50,   50,
   50,   50,    0,    0,   50,   50,   50,    0,    0,    0,
    0,    0,  200,  200,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   50,
  200,  200,    0,  200,  200,  200,    0,  200,  200,  200,
  200,  200,  200,  200,  200,  200,   50,    0,  200,    0,
    0,    0,  966,    0,    0,    0,    0,  200,  200,  967,
    0,  968,  969,  970,    0,    0,   50,    0,    0,    0,
    0,   50,   50,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 1183,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  971,
  972,  973,    0,   50,   50,   50,   50,   50,   50,   50,
   50,   50,   50,   50,   50,   50,   50,   50,   50,   50,
   50,    0,    0,    0,   50,   50,   50,   50,   50,   50,
   50,   50,   50,   50,   50,   50,   50,   50,   50,   50,
    0,    0,    0,    0,    0,  974,  975,  976,    0,  977,
    0,    0,  978,    0,    0,   50,   50,   50,   50,    0,
   50,   50,   50,   50,    0,    0,   50,    0,   50,    0,
   50,   50,   50,   50,    0,   50,   50,    0,   50,   50,
   50,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   59,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   50,   50,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   50,   50,    0,   50,   50,   50,    0,
   50,   50,   50,   50,   50,   50,   50,   50,   50,    0,
   50,   50,    0,   51,    0,    0,   51,    0,    0,    0,
   50,    0,    0,    0,    0,   51,    0,   51,   51,   51,
    0,   51,   51,   51,   51,    0,   51,   51,   51,    0,
   51,   51,   51,   51,    0,    0,   51,   51,   51,  568,
  126,  569,    0,  127,  128,  129,  130,    0,  131,  132,
  133,  134,    0,  135,  136, 1404,    0,  137,  138,  139,
  140,   51,    0,   98,  141,  142,    0,    0,    0,    0,
    0,    0,    0,  143,  144,    0,    0,    0,   51,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  145,
  146,  147,    0,    0,    0,    0,    0,    0,   51,    0,
    0,    0,    0,   51,   51,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  148,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   51,   51,   51,   51,   51,
   51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
   51,   51,   51,    0,    0,    0,   51,   51,   51,   51,
   51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
   51,   51,   60,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   51,   51,   51,
   51,    0,   51,   51,   51,   51,    0,    0,   51,    0,
   51,    0,   51,   51,   51,   51,   59,   51,   51,   59,
   51,   51,   51,  289,    0,    0,    0,    0,   59,    0,
  289,    0,  289,  289,  289,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   59,
    0,    0,    0,    0,    0,    0,    0,   51,   51,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  289,  289,  289,    0,   59,   51,   51,  794,   51,   51,
   51,    0,   51,   51,   51,   51,   51,   51,   51,   51,
   51,   59,   51,   51,    0,    0,    0,    0,    0,    0,
    0,    0,   51,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  289,  289,  289,    0,
  289,    0,    0,  289,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  154,  155,    0,    0,    0,
  794,    0,    0,   59,    0,    0,    0,    0,   59,   59,
   59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
   59,   59,   59,   59,   59,   59,    0,    0,    0,   59,
   59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
   59,   59,   59,   59,   59,   63,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   59,   59,   59,   59,    0,   59,   59,   59,   59,    0,
    0,   59,    0,   59,    0,   59,   59,   59,   59,    0,
   59,   59,    0,   59,   59,   59,    0,    0,    0,    0,
    0,    0,  794,  794,    0,    0,    0,    0,    0,    0,
    0,    0,   60,    0,    0,   60,    0,    0,    0,    0,
    0,    0,  794,    0,   60,    0,    0,    0,    0,    0,
   59,   59,    0,    0,  794,    0,  794,  794,    0,  794,
  794,    0,    0,    0,    0,   60,  289,    0,   59,   59,
    0,   59,   59,   59,    0,   59,   59,   59,   59,   59,
   59,   59,   59,   59,    0,   59,   59,    0,    0,    0,
   60,    0,    0,    0,    0,   59,    0,    0,    0,  261,
  126,  262,    0,  127,  128,  129,  130,   60,  131,  132,
  133,  134,    0,  135,  136,    0,    0,  137,  138,  139,
  140,    0,    0,    0,  141,  142,  794,  794,  794,  794,
  794,  794,  794,  143,  144,  794,    0,    0,    0,    0,
    0,    0,    0,    0,  794,    0,    0,    0,    0,  145,
  146,  147,    0,    0,    0,    0,    0,    0,    0,   60,
    0,    0,    0,    0,   60,   60,   60,   60,   60,   60,
   60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
   60,   60,    0,    0,  148,   60,   60,   60,   60,   60,
   60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
   60,   64,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   60,   60,   60,   60,
    0,   60,   60,   60,   60,    0,    0,   60, 1545,   60,
    0,   60,   60,   60,   60,   63,   60,   60,   63,   60,
   60,   60, 1546,    0,    0,    0,    0,   63,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 1547,    0,
    0,    0,    0,    0,    0,    0,    0, 1548,   63,    0,
    0,    0,    0,    0,    0,    0,   60,   60,    0,    0,
    0, 1549, 1550, 1551, 1552,    0,    0,    0,    0,    0,
    0,    0,    0,   63,   60,   60,    0,   60,   60,   60,
    0,   60,   60,   60,   60,   60,   60,   60,   60,   60,
   63,   60,   60, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
    0,   60,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   63,    0,    0,    0,    0,   63,   63,   63,
   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
   63,   63,   63,   63,   63,  154,  155,    0,   63,   63,
   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
   63,   63,   63,   63,   33,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   63,
   63,   63,   63,    0,   63,   63,   63,   63,    0,    0,
   63,    0,   63,    0,   63,   63,   63,   63,    0,   63,
   63,    0,   63,   63,   63,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   64,    0,    0,   64,    0,    0,    0,    0,    0,
    0,    0,    0,   64,    0,    0, 1560,    0,    0,   63,
   63,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   64,    0,    0,   63,   63,    0,
   63,   63,   63,    0,   63,   63,   63,   63,   63,   63,
   63,   63,   63,    0,   63,   63,    0,    0,    0,   64,
    0,    0,    0,    0,   63,    0,    0,    0,    0,  126,
    0,    0,  127,  128,  129,  130,   64,  131,  132,  133,
  134,    0,  135,  136,    0,    0,  137,  138,  139,  140,
    0,    0,    0,  141,  142,    0,    0,    0,    0,    0,
    0,    0,  143,  144,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   34,    0,    0,    0,    0,  145,  146,
  147,    0,    0,    0,    0,    0,    0,    0,   64,    0,
    0,    0,    0,   64,   64,   64,   64,   64,   64,   64,
   64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
   64,    0,    0,  148,   64,   64,   64,   64,   64,   64,
   64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   64,   64,   64,   64,    0,
   64,   64,   64,   64,    0,    0,   64,    0,   64,    0,
   64,   64,   64,   64,   33,   64,   64,   33,   64,   64,
   64,    0,    0,    0,    0,    0,   33,    0,    0,    0,
   67,   68,    0,   69,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   64,   64,    0,    0,    0,
    0,  354,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   33,   64,   64,    0,   64,   64,   64,    0,
   64,   64,   64,   64,   64,   64,   64,   64,   64,  355,
   64,   64,  757,  356,    0,    0,  357,  358,    0,    0,
   64,  359,  360,  361,  362,  363,  364,  365,  366,  367,
  368,  369,  370,    0,    0,    0,    0,    0,    0,  371,
    0,    0,  372,    0,    0,    0,    0,    0,    0,  373,
    0,    0,    0,    0,    0,    0,    0,    0,  374,    0,
    0,    0,    0,    0,    0,    0,   33,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   33,   33,  154,  155,    0,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   33,   34,    0,    0,   34,    0,    0,    0,
    0,    0,    0,    0,    0,   34,    0,    0,   33,   33,
   33,   33,    0,   33,   33,   33,   33,    0,    0,   33,
    0,   33,    0,    0,   33,    0,    0,    0,    0,    0,
    0,   33,   33,   33,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   34,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   33,   33,
    0,  759,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   33,   33,    0,   33,
   33,   33,    0,   33,   33,   33,   33,   33,   33,   33,
   33,   33,    0,   33,   33,    0,    0,    0,    0,    0,
    0,    0,    0,   33,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   34,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   34,   34,   34,    0,    0,    0,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   34,   34,  757,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  757,    0,    0,   34,   34,   34,
   34,    0,   34,   34,   34,   34,    0,    0,   34,    0,
   34,    0,    0,   34,    0,    0,    0,    0,    0,    0,
   34,   34,   34,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  757,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   34,   34,    0,
  763,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   34,   34,    0,   34,   34,
   34,    0,   34,   34,   34,   34,   34,   34,   34,   34,
   34,    0,   34,   34,    0,    0,    0,    0,    0,    0,
    0,    0,   34,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  757,  757,  757,  757,  757,  757,
  757,  757,  757,  757,  757,  757,  757,  757,  757,  757,
  757,  757,    0,    0,    0,  757,  757,  757,  757,  757,
  757,  757,  757,  757,  757,  757,  757,  757,  757,  757,
  757,  759,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  759,    0,    0,  757,  757,  757,  757,
    0,  757,  757,  757,  757,    0,    0,  757,    0,  757,
    0,    0,  757,    0,    0,    0,    0,    0,    0,  757,
  757,  757,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  759,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  757,  757,    0,  761,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  757,  757,    0,  757,  757,  757,
    0,  757,  757,  757,  757,  757,  757,  757,  757,  757,
    0,  757,  757,    0,    0,    0,    0,    0,    0,    0,
    0,  757,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  759,  759,  759,  759,  759,  759,  759,
  759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
  759,    0,    0,    0,  759,  759,  759,  759,  759,  759,
  759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
  763,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  763,    0,    0,  759,  759,  759,  759,    0,
  759,  759,  759,  759,    0,    0,  759,    0,  759,    0,
    0,  759,    0,    0,    0,    0,    0,    0,  759,  759,
  759,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  763,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  759,  759,    0,  765,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  759,  759,    0,  759,  759,  759,    0,
  759,  759,  759,  759,  759,  759,  759,  759,  759,    0,
  759,  759,    0,    0,    0,    0,    0,    0,    0,    0,
  759,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  763,  763,  763,  763,  763,  763,  763,  763,
  763,  763,  763,  763,  763,  763,  763,  763,  763,  763,
    0,    0,    0,  763,  763,  763,  763,  763,  763,  763,
  763,  763,  763,  763,  763,  763,  763,  763,  763,  761,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  761,    0,    0,  763,  763,  763,  763,    0,  763,
  763,  763,  763,    0,    0,  763,    0,  763,    0,    0,
  763,    0,    0,    0,    0,    0,    0,  763,  763,  763,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  761,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  763,  763,    0,  715,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  763,  763,    0,  763,  763,  763,    0,  763,
  763,  763,  763,  763,  763,  763,  763,  763,    0,  763,
  763,    0,    0,    0,    0,    0,    0,    0,    0,  763,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  761,  761,  761,  761,  761,  761,  761,  761,  761,
  761,  761,  761,  761,  761,  761,  761,  761,  761,    0,
    0,    0,  761,  761,  761,  761,  761,  761,  761,  761,
  761,  761,  761,  761,  761,  761,  761,  761,  765,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  765,    0,    0,  761,  761,  761,  761,    0,  761,  761,
  761,  761,    0,    0,  761,    0,  761,    0,    0,  761,
    0,    0,    0,    0,    0,    0,  761,  761,  761,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  765,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  717,    0,    0,
    0,    0,    0,  761,  761,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  761,  761,    0,  761,  761,  761,    0,  761,  761,
  761,  761,  761,  761,  761,  761,  761,    0,  761,  761,
    0,    0,    0,    0,    0,    0,    0,    0,  761,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  765,  765,  765,  765,  765,  765,  765,  765,  765,  765,
  765,  765,  765,  765,  765,  765,  765,  765,    0,    0,
    0,  765,  765,  765,  765,  765,  765,  765,  765,  765,
  765,  765,  765,  765,  765,  765,  765,  715,    0,    0,
  715,    0,    0,    0,    0,    0,    0,    0,    0,  715,
    0,    0,  765,  765,  765,  765,    0,  765,  765,  765,
  765,    0,    0,  765,    0,  765,    0,    0,  765,    0,
    0,    0,    0,    0,    0,  765,  765,  765,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  715,    0,  391,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  765,  765,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  765,  765,    0,  765,  765,  765,    0,  765,  765,  765,
  765,  765,  765,  765,  765,  765,    0,  765,  765,    0,
    0,    0,    0,    0,    0,    0,    0,  765,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  715,
  715,  715,  715,  715,  715,  715,  715,  715,  715,  715,
  715,  715,  715,  715,  715,  715,  715,    0,    0,    0,
  715,  715,  715,  715,  715,  715,  715,  717,    0,    0,
  717,  715,    0,    0,  715,  715,    0,    0,    0,  717,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  715,  715,  715,  715,    0,  715,  715,  715,  715,
    0,    0,  715,    0,  715,    0,  715,  715,  715,    0,
    0,  715,  715,    0,  715,  715,  715,    0,    0,    0,
    0,    0,    0,    0,    0,  717,    0,  433,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  715,  715,    0,    0,    0,    0,    0,  771,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  715,
  715,    0,  715,  715,  715,    0,  715,  715,  715,  715,
  715,  715,  715,  715,  715,    0,  715,  715,    0,    0,
    0,    0,    0,    0,    0,    0,  715,    0,    0,  717,
  717,  717,  717,  717,  717,  717,  717,  717,  717,  717,
  717,  717,  717,  717,  717,  717,  717,    0,    0,    0,
  717,  717,  717,  717,  717,  717,  717,  391,    0,    0,
  391,  717,    0,    0,  717,  717,    0,    0,    0,  391,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  717,  717,  717,  717,    0,  717,  717,  717,  717,
    0,    0,  717,    0,  717,    0,  717,  717,  717,    0,
    0,  717,  717,    0,  717,  717,  717,    0,    0,    0,
    0,    0,    0,    0,    0,  391,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   90,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  717,  717,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  768,    0,  717,
  717,    0,  717,  717,  717,    0,  717,  717,  717,  717,
  717,  717,  717,  717,  717,    0,  717,  717,    0,    0,
    0,    0,    0,    0,    0,    0,  717,    0,    0,  391,
  391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
  391,  391,  391,  391,  391,  391,  391,    0,    0,    0,
  391,  391,  391,  391,  391,  391,  391,  433,    0,    0,
  433,  391,    0,    0,  391,  391,    0,    0,    0,  433,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  391,  391,  391,  391,    0,  391,  391,  391,  391,
    0,    0,  391,    0,  391,    0,    0,  391,    0,    0,
  771,    0,    0,    0,  391,  391,  391,    0,    0,    0,
    0,    0,    0,    0,    0,  433,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  771,    0,    0,    0,    0,
    0,  391,  391,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  391,
  391,    0,  391,  391,  391,    0,  391,  391,  391,  391,
  391,  391,  391,  391,  391,    0,  391,  391,    0,    0,
    0,    0,  391,    0,    0,    0,  391,    0,    0,  433,
  433,  433,  433,  433,  433,  433,  433,  433,  433,  433,
  433,  433,  433,  433,  433,  433,  433,    0,    0,    0,
  433,  433,  433,  433,  433,  433,  433,    0,    0,    0,
    0,  433,    0,    0,  433,  433,    0,    0,    0,    0,
    0,    0,    0,  771,  771,  771,  771,  771,   90,    0,
    0,  433,  433,  433,  433,    0,  433,  433,  433,  433,
    0,    0,  433,    0,  433,  771,  771,  433,    0,    0,
    0,    0,    0,    0,  433,  433,  433,    0,    0,  768,
    0,    0,  771,  771,  771,  771,    0,    0,    0,  771,
  771,    0,    0,    0,    0,  771,    0,  771,  771,    0,
    0,    0,    0,    0,    0,  771,  771,    0,    0,    0,
    0,  433,  433,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  433,
  433,    0,  433,  433,  433,    0,  433,  433,  433,  433,
  433,  433,  433,  433,  433,    0,  433,  433,    0,    0,
    0,    0,    0,    0,    0,    0,  433,    0,    0,    0,
  771,  771,    0,  771,  771,  771,    0,  771,  771,  771,
  771,  771,  771,  771,  771,  771,    0,    0,  771,    0,
    0,   90,   90,   90,   90,   90,    0,  771,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   90,   90,    0,    0,    0,    0,    0,
    0,    0,  768,  768,  768,  768,  768,  771,    0,    0,
   90,   90,   90,   90,    0,    0,    0,   90,   90,    0,
    0,    0,    0,   90,  768,  768,   90,    0,    0,    0,
    0,    0,    0,   90,   90,    0,    0,    0,    0,    0,
    0,  768,  768,  768,  768,    0,    0,    0,  768,  768,
    0,    0,    0,    0,  768,    0,    0,  768,    0,    0,
    0,    0,    0,    0,  768,  768,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   90,   90,
    0,   90,   90,   90,    0,   90,   90,   90,   90,   90,
   90,   90,   90,   90,    0,    0,   90,    0,    0,    0,
    0,    0,    0,    0,    0,   90,    0,    0,    0,  768,
  768,    0,  768,  768,  768,    0,  768,  768,  768,  768,
  768,  768,  768,  768,  768,    0,    0,  768,    0,    0,
  771,  771,  771,  771,  771,    0,  768,  103,  103,    0,
  103,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  771,  771,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  103,  771,
  771,  771,  771,    0,    0,    0,  771,  771,    0,    0,
    0,    0,  771,    0,    0,  771,    0,    0,    0,    0,
    0,    0,  771,  771,    0,    0,  103,    0,    0,    0,
  103,    0,    0,  103,  103,    0,    0,    0,  103,  103,
  103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
    0,    0,    0,    0,    0,    0,  103,    0,    0,  103,
    0,    0,    0,    0,    0,    0,  103,    0,    0,    0,
    0,    0,    0,    0,    0,  103,    0,  771,  771,    0,
  771,  771,  771,    0,  771,  771,  771,  771,  771,  771,
  771,  771,  771,   67,   68,  771,   69,    0,    0,    0,
  125,    0,    0,  126,  771,    0,  127,  128,  129,  130,
    0,  131,  132,  133,  134,    0,  135,  136,    0,    0,
  137,  138,  139,  140,    0,    0,   98,  141,  142,    0,
    0,    0,    0,    0,    0,    0,  143,  144,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  145,  146,  147,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  148,    0,  273,
  274,  275,   67,   68,    0,   69,    0,    0,    0,  125,
    0,    0,  126,  463,  464,  127,  128,  129,  130,    0,
  131,  132,  133,  134,    0,  135,  136,    0,    0,  137,
  138,  139,  140,    0,    0,   98,  141,  142,    0,    0,
    0,    0,    0,    0,    0,  143,  144,    0,    0,    0,
    0,    0,    0,  150,  151,  152,    0,    0,    0,    0,
    0,  145,  146,  147,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  148,    0,  273,  274,
  275,    0,    0,    0,    0,    0,    0,  671,  671,    0,
  671,    0,  463,  464,  671,    0,    0,  671,    0,    0,
  671,  671,  671,  671,    0,  671,  671,  671,  671,    0,
  671,  671,    0,    0,  671,  671,  671,  671,    0,    0,
  671,  671,  671,    0,    0,    0,    0,    0,    0,    0,
  671,  671,  150,  151,  152,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  671,  671,  671,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  465,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  278,  279,    0,    0,  154,  155,
    0,  671,  280,  671,  671,  671,   67,   68,    0,   69,
    0,    0,    0,  125,    0,    0,  126,  671,  671,  127,
  128,  129,  130,    0,  131,  132,  133,  134,    0,  135,
  136,    0,    0,  137,  138,  139,  140,    0,    0,   98,
  141,  142,    0,    0,    0,    0,    0,    0,    0,  143,
  144,    0,    0,    0,    0,    0,    0,  671,  671,  671,
    0,    0,    0,    0,    0,  145,  146,  147,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  465,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  689,  279,    0,    0,  154,  155,    0,
  148,  280,  273,  274,  275,    0,   67,   68,    0,   69,
    0,    0,    0,  125,    0,    0,  126,    0,    0,  127,
  128,  129,  130,    0,  131,  132,  133,  134,    0,  135,
  136,    0,    0,  137,  138,  139,  140,    0,    0,   98,
  141,  142,    0,    0,    0,    0,    0,    0,    0,  143,
  144,    0,    0,    0,    0,    0,  150,  151,  152,    0,
    0,    0,    0,    0,    0,  145,  146,  147,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  671,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  671,  671,
  148,  149,  671,  671,    0,    0,  671,    0,    0,   67,
   68,    0,   69,    0,    0,    0,  125,    0,    0,  126,
    0,    0,  127,  128,  129,  130,    0,  131,  132,  133,
  134,    0,  135,  136,    0,    0,  137,  138,  139,  140,
    0,    0,   98,  141,  142,    0,    0,    0,    0,    0,
    0,    0,  143,  144,    0,    0,  150,  151,  152,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  145,  146,
  147,    0,  897,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  465,    0,    0,
    0,    0,    0,   13,    0,    0,    0,  278,  279,    0,
    0,  154,  155,  148,    0,  280,    0,    0,    0,   67,
   68,    0,   69,    0,    0,    0,  125,  898,    0,  126,
    0,    0,  127,  128,  129,  130,    0,  131,  132,  133,
  134,    0,  135,  136,    0,    0,  137,  138,  139,  140,
    0,    0,   98,  141,  142,    0,    0,    0,    0,    0,
    0,    0,  143,  144,    0,    0,    0,    0,    0,  150,
  151,  152,    0,    0,    0,    0,    0,    0,  145,  146,
  147,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  153,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  154,  155,  148,  149,   67,   68,    0,   69,    0,
    0,    0,  125,    0,    0,  126,    0,    0,  127,  128,
  129,  130,    0,  131,  132,  133,  134,    0,  135,  136,
    0,    0,  137,  138,  139,  140,    0,    0,   98,  141,
  142,    0,    0,    0,    0,    0,    0,    0,  143,  144,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  150,
  151,  152,    0,    0,  145,  146,  147,    0,   67,   68,
    0,   69,    0,    0,    0,  125,    0,    0,  126,    0,
    0,  127,  128,  129,  130,    0,  131,  132,  133,  134,
  207,  135,  136,    0,    0,  137,  138,  139,  140,  148,
    0,   98,  141,  142,  154,  155,    0,    0,    0,    0,
    0,  143,  144,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  145,  146,  147,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  150,  151,  152,    0,    0,
    0,    0,  535,    0,   67,   68,    0,   69,    0,    0,
    0,  125,    0,    0,  126,    0,    0,  127,  128,  129,
  130,    0,  131,  132,  133,  134,    0,  135,  136,    0,
  207,  137,  138,  139,  140,    0,    0,   98,  141,  142,
    0,    0,    0,  227,  154,  155,  227,  658,  144,    0,
    0,    0,    0,    0,    0,  227,    0,    0,  150,  151,
  152,    0,    0,  145,  146,  147,    0,    0,    0,    0,
    0,    0,   67,   68,    0,   69,    0,    0,    0,  125,
    0,    0,  126,    0,    0,  127,  128,  129,  130,    0,
  131,  132,  133,  134,    0,  135,  136,    0,  148,  137,
  138,  139,  140,    0,    0,   98,  141,  142,    0,    0,
    0,    0,    0,    0,    0,  143,  144,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  207,    0,    0,    0,
    0,  145,  146,  147,    0,    0,    0,    0,    0,    0,
  154,  155,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  150,  151,  152,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  698,    0,    0,    0,
  227,    0,    0,    0,    0,  227,  227,  227,  227,  227,
  227,  227,  227,  227,  227,  227,  227,  227,    0,  207,
    0,    0,  227,    0,    0,    0,  227,  227,  227,  227,
  227,  227,    0,  154,  155,    0,  513,    0,    0,  513,
  227,  227,    0,    0,    0,    0,    0,    0,  513,    0,
    0,    0,  150,  151,  152,    0,    0,  227,  227,  227,
  227,    0,    0,    0,    0,    0,    0,    0,  227,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  227,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  207,    0,  227,  227,   67,
    0,    0,   69,    0,    0,    0,    0,    0,    0,  154,
  155,    2,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  227,  227,  227,  227,  227,  227,
  227,    0,  227,  227,    0,    0,    0,  227,    0,    0,
  552,    0,  227,    0,    0,    0,    0,  552,  513,  513,
  513,  513,  513,  513,  513,  513,  513,  513,  513,  513,
  513,    0,    0,  207,    0,  513,    0,    0,    0,  513,
  513,  513,  513,  513,  513,    0,    0,  154,  155,    0,
    0,    0,   67,  513,  513,   69,    0,    0,    0,    0,
    0,    0,    0,    0,    2,    0,    0,    0,    0,    0,
  513,  513,  513,  513,    0,    0,    0,    0,    0,    0,
    0,  513,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  513,    0,    0,    0,    0,
    0,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,  302,  303,  304,    0,    0,    0,    0,    7,    0,
    0,    0,  305,  306,  307,  308,  309,  310,    0,    0,
  513,  513,    0,    0,    0,   67,    8,    9,   69,    0,
    0,    0,    0,    0,    0,    0,    0,    2,    0,    0,
    0,    0,    0,   10,   11,   12,   13,  513,  513,  513,
  513,  513,  513,  513,  311,  513,  513,    0,    0,    0,
    0,    0,    0,  552,    0,  513,    0,    0,  312,    0,
  552,    0,    0,    0,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,  302,  303,  304,    0,    0,    0,
    0,    7,    0,    0,    0,  305,  306,  307,  308,  309,
  310,    0,    0,  313,  314,    0,    0,    0,  362,    8,
    9,  362,    0,    0,    0,    0,    0,    0,    0,    0,
  362,    0,    0,    0,    0,    0,   10,   11,   12,   13,
   27,   28,   29,   30,   31,   32,   33,  311,  315,  316,
    0,    0,    0,    0,    0,    0,    0,    0,   34,    0,
    0,  312,    0,    0,    0,    0,    0,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
    0,    0,    0,    0,    7,    0,    0,    0,  305,  306,
  307,  308,  309,  310,    0,    0,  313,  314,    0,    0,
    0,  518,    8,    9,  518,    0,    0,    0,    0,    0,
    0,    0,    0,  518,    0,    0,    0,    0,    0,   10,
   11,   12,   13,   27,   28,   29,   30,   31,   32,   33,
  311,  315,  720,    0,    0,    0,    0,    0,    0,    0,
    0,   34,    0,    0,  312,    0,    0,    0,    0,    0,
  362,  362,  362,  362,  362,  362,  362,  362,  362,  362,
  362,  362,  362,    0,    0,    0,    0,  362,    0,    0,
    0,  362,  362,  362,  362,  362,  362,    0,    0,  313,
  314,    0,    0,    0,  347,  362,  362,  347,    0,    0,
    0,    0,    0,    0,    0,    0,  347,    0,    0,    0,
    0,    0,  362,  362,  362,  362,   27,   28,   29,   30,
   31,   32,   33,  362,  315,  912,    0,    0,    0,    0,
    0,    0,    0,    0,   34,    0,    0,  362,    0,    0,
    0,    0,    0,  518,  518,  518,  518,  518,  518,  518,
  518,  518,  518,  518,  518,  518,    0,    0,    0,    0,
  518,    0,    0,    0,  518,  518,  518,  518,  518,  518,
    0,    0,  362,  362,    0,    0,    0,  202,  518,  518,
  202,    0,    0,    0,    0,    0,    0,    0,    0,  202,
    0,    0,    0,    0,    0,  518,  518,  518,  518,  362,
  362,  362,  362,  362,  362,  362,  518,  362,  362,    0,
    0,    0,    0,    0,    0,    0,    0,  362,    0,    0,
  518,    0,    0,    0,    0,    0,  347,  347,  347,  347,
  347,  347,  347,  347,  347,  347,  347,  347,  347,    0,
    0,    0,    0,  347,    0,    0,    0,  347,  347,  347,
  347,  347,  347,    0,    0,  518,  518,    0,    0,    0,
    0,  347,  347,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  347,  347,
  347,  347,  518,  518,  518,  518,  518,  518,  518,  347,
  518,  518,    0,    0,    0,    0,    0,    0,    0,    0,
  518,    0,    0,  347,    0,    0,    0,    0,    0,  202,
  202,  202,  202,  202,  202,  202,  202,  202,  202,  202,
  202,  202,    0,    0,    0,    0,  202,    0,    0,    0,
  202,  202,  202,  202,  202,  202,    0,    0,  347,  347,
    0,    0,    0,    0,  202,  202,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  202,  202,  202,  202,  347,  347,  347,  347,  347,
  347,  347,  202,  347,  347,    0,    0,    0,    0,    0,
    0,    0,    0,  347,  126,    0,  202,  127,  128,  129,
  130,    0,  131,  132,  133,  134,    0,  135,  136,    0,
    0,  137,  138,  139,  140,  430,    0,    0,  141,  142,
    0,    0,    0,    0,    0,    0,    0,  143,  144,    0,
    0,  202,  202,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  145,  146,  147,    0,  431,    0,  432,
  433,  434,  435,    0,    0,    0,    0,    0,  202,  202,
  202,  202,  202,  202,  202,    0,  202,  202,    0,    0,
    0,    0,    0,    0,    0,    0,  202,    0,  148,    0,
    0,    0,    0,    0,    0,    0,  436,  437,  438,  439,
    0,    0,  440,    0,    0,    0,  441,  442,  443,  204,
    0,    0,  204,  204,  204,  204,    0,  204,  204,  204,
  204,    0,  204,  204,    0,    0,  204,  204,  204,  204,
  204,    0,    0,  204,  204,    0,    0,    0,    0,    0,
    0,    0,  204,  204,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  204,  204,
  204,    0,  204,    0,  204,  204,  204,  204,    0,    0,
    0,    0,  126,    0,    0,  127,  128,  129,  130,    0,
  131,  132,  133,  134,    0,  135,  136,    0,    0,  137,
  138,  139,  140,  204,    0,    0,  141,  142,    0,    0,
    0,  204,  204,  204,  204,  143,  144,  204,    0,    0,
  444,  204,  204,  204,    0,    0,    0,    0,    0,    0,
    0,  145,  146,  147,  126,    0,    0,  127,  128,  129,
  130,    0,  131,  132,  133,  134,    0,  135,  136,    0,
    0,  137,  138,  139,  140,    0,    0,    0,  141,  142,
    0,    0,    0,    0,    0,    0,  148,  143,  144,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  145,  146,  147,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  154,
  155,    2,  217,    0,    0,  217,  217,  217,  217,    0,
  217,  217,  217,  217,    0,  217,  217,    0,  148,  217,
  217,  217,  217,    0,    0,  204,  217,  217,    0,    0,
    0,    0,    0,    0,    0,  217,  217,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  217,  217,  217,    0,    0,    0,  217,    0,    0,
  217,  217,  217,  217,    0,  217,  217,  217,  217,    0,
  217,  217,    0,    0,  217,  217,  217,  217,    0,    0,
    0,  217,  217,    0,    0,    0,  217,    0,    0,    0,
  217,  217,    0,    0,    0,    0,  794,    0,    0,    0,
    0,    0,    0,    0,  204,  204,  217,  217,  217,  795,
    0,    0,  796,  797,    0,  798,  799,  800,  801,  802,
  803,    0,  804,  805,    0,  806,  807,  808,  809,  810,
    0,    0,    0,    0,    3,    4,    5,    6,    7,    0,
    0,  217,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  778,    0,    0,    8,    9,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  154,  155,    0,
  811,    0,  812,   10,   11,   12,   13,  813,    0,    0,
   14,   15,    0,    0,    0,    0,   16,    0,    0,   17,
    0,    0,    0,  814,    0,    0,   18,   19,    0,    0,
    0,    0,    0,    0,    0,  876,    0,    0,    0,    0,
    0,    2,    0,    0,    0,    0,    0,    0,    0,  154,
  155,    0,    0,    0,    0,    0,  815,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   20,   21,    0,   22,   23,   24,    0,   25,   26,
   27,   28,   29,   30,   31,   32,   33,    0,    0,  527,
    0,    0,    0,  217,    0,    0,    0,    0,   34,    0,
    0,    0,    0,    0,    0,    0,    0,  217,  217,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  816,    0,  817,  818,
  819,  820,  821,  822,  823,  824,  825,  826,  827,  828,
  829,  830,  831,  832,  833,    0,    0,    0,  834,    0,
    0,    0,  217,  217,    3,    4,    5,    6,    7,    2,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    8,    9,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  835,    0,
    0,    0,    0,   10,   11,   12,   13,    0,    0,    0,
   14,   15,    0,    0,    0,  504,   16,    0,    0,   17,
    0,    0,    0,    0,    0,    0,   18,   19,    0,    0,
    0,    0,    0,  794,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  795,    0,    0,  796,
  797,    0,  798,  799,  800,  801,  802,  803,    0,  804,
  805,    0,  806,  807,  808,  809,  810,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   20,   21,    0,   22,   23,   24,    0,   25,   26,
   27,   28,   29,   30,   31,   32,   33,    0,    0,    0,
    0,    0,  505,    0,    5,    6,    7,  811,   34,  812,
    0,    0,    0,    0,  813,    0,  506,    0,    0,    0,
    0,  507,    0,    0,    8,    9,    0,    0,    0,    0,
  814,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   10,   11,   12,   13,    0,  508,  509,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  815,    0,    0,  510,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  511,  512,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   27,   28,
   29,   30,   31,   32,   33,    0,    0, 1134,    0,    0,
    0,    0,    0,    0,    0,    0,   34,    0,    0,    0,
    0,    0,    0,  816,    0,  817,  818,  819,  820,  821,
  822,  823,  824,  825,  826,  827,  828,  829,  830,  831,
  832,  833,  379,   97,    0,  834,    0,    0,   99,    0,
  100,    0,    0,    0,    0,    0,  101,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  102,  380,    0,  381,  382,  383,  384,
  385,    0,    0,    0,    0,  386,    0,    0,  103,    0,
    0,    0,    0,    0,  387,    0,    0,    0,    0,  388,
    0,  389,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  390,  391,  392,  393,  394,  395,  396,
  397,    0,    0,    0,    0,    0,  398,
  };
  protected static final short [] yyCheck = {             4,
  164,   24,   63,   24,    1,  290,  669,  921,  290,  656,
   13,  290,   20,   21,   19,  102,  103,    1,   24,  943,
  776,   24,   27,   28,   29,   30,  468, 1078,  714,  174,
    1, 1106,   22,   23,  266,   24,  260,  261,    1,  263,
  264,  307,  262,    1,  410,  264,  412,  264,   93,  466,
  713,  264,    1,  315,  264,  387,  264,   65, 1072,  260,
   76,  312,  263,  541,   72,  190,  191,  192,  193,  194,
   92,  262,  316,  317,  480,  481,  482,  164,  264,  260,
  261,  263,  263,  263,  107,  260,  261,  361,  263,  329,
   58,   59,  260,  261,  285,  263,   64,  262,  263,  550,
  187,  104,  264,  111,  112,  263,  260,  261,  113,  263,
  115,  116,  117,  355,  376,  104,  260,  261,  360,  263,
  260,  261,  167,  263,  263,  212,  149,  264,  260,  261,
  264,  263,  155,  311,  312,  196,  262,  143,  296,  293,
  146,  260,  261,  264,  263,  541,  154, 1432,  153,  154,
  153,  260,  261, 1438,  263,  263,  260,  261,  174,  263,
  166,  164,  262,  185,  524,  264,  264,  260,  261,  466,
  263,  264,  264,  264,  338,  356,  357,  358,  262,  184,
  260,  261,  205,  263,  229, 1470,  331,  264,  296,  361,
  264,  264,  878,  879,  264,  264,  265,  264,  203,  264,
  293,  285,  207,  260,  207,  545,  263,  264,  230,  895,
  218,  219,  545,  293,  283,  284,  264,  265, 1232,  260,
  560,  553,  263,  260,  261,  230,  263,  560,  264,  264,
  265,  236,  200, 1452,  275,  283,  284,  278,  279,  280,
  281,  263,  283,  284,  285,  478,  652,  910,  283,  284,
  256,  937,  448,  539,  338,  342,  466,  280,  263,  264,
  268,  544,  285,  268,  538,  498,  541,  272,  543,  277,
  553,  276,  678,  539,  544,  515,  281,  282,  283, 1440,
  341,  286,  288,  553,  501,  502,  503,  298,  539,  300,
  301,  302,  314,  290,  291,  541,  341,  305,  540,  307,
  544,  260,  261,  311,  263,  551,  290,  291,  540,  260,
  261, 1472,  263,  542,  468,  331,  339,  333,  340,  290,
  291,  337,  985,  331,  553,  333,  334,  290,  291,  337,
  550,  555,  290,  291,  542,  338,  339,  556,  551,  539,
  343,  290,  291,  544,  545,  335,  336,  543,  556,  346,
  347,  348,  349,  759,  343,  377,  542, 1576,  262,  550,
  541,  539,  346,  545,  539,  545,  538,  553, 1439,  541,
  551,  552, 1447,  541,  541,  468,  543,  345,  559,  554,
  545,  546,  544,  346,  347,  348,  349, 1311,  468,  356,
  357,  358, 1437,  401,  402,  540,  404,  551,  406,  543,
 1471,  417,  311,  543,  280,  281,  551,  544, 1483,  541,
  544,  276,  277,  539,  422,  423, 1467,  543,  408,  539,
  387,  286,  541,  544, 1469,  539, 1182, 1074,  451,  466,
  266,  453,  541,  875,  544,  841,  544,  541,  314,  539,
  445,  551,  447,  543,  541,  544,  544,  544,  535,  542,
  544,  545,  544,  544,  551,  545,  459,  465,  551,  553,
  465,  543,  465,  556,  486,  487,  303,  544,  550,  474,
  544,  551,  303,  260,  544,  544,  263,  544,  500,  544,
  260,  261,  539,  263,  260,  261,  262,  263,  264,  320,
  512,  267,  356,  357,  358,  500,  544,  265,  539,  458,
  508,  509,  264,  265,  280,  545,  539,  458,  543,  541,
  543,  552,  544,  553,  543,  283,  284,  293,  547,  551,
  542,  283,  284,  531,  540,  554,  534,  532,  533,  539,
  559,  260,  261, 1457,  263,  551,  543,  292,  583,  370,
  316,  317,  297,  551,  299,  544,  326,  327,  570,  545,
  305,  316,  317,  576,  553,  521,  701,  553,  356,  357,
  358,  539,  578,  260,  261,  570,  263,  322,  260,  261,
  578,  263,  264, 1487,  541,  541,  637,  453,  454,  545,
  456,  626,  337,  628,  551,  552,  552,  542,  260,  261,
  545,  263,  559,  601,  264,  267,  539,  602, 1284, 1285,
  548,  549,  550,  608,  627,  692,  614,  575,  278,  279,
  280,  698,  260,  261,  541,  263,  543,  625,  541,  267,
  543,  293,  590,  591,  296,  541,  911,  543,  596,  911,
  598,  303,  911,  543,  410,  411,  412,  356,  357,  358,
  648,  370,  371, 1306,  550,  293,  541,  670,  296,  544,
  260,  543,  658,  263,  264,  303,  551,  782,  783,  784,
  785,  786,  787,  550,  669,  688,  553,  387,  690,  691,
  675,  387,  677,  370,  371,  387,  684,  541,  686,  543,
  521,  278,  279,  280,  281,  701,  691,  551,  552,  712,
  695,  696,  697,  738,  717,  559,  541,  705,  543,  707,
  541,  709,  387,  544,  545,  668,  674,  723,  713,  541,
 1396,  552,  544,  260,  261,  723,  263,  733,  262,  551,
  267, 1407,  553,  541,  732,  543,  734,  558, 1094,  306,
 1096,  308,  309,  310,  541, 1398,  543,  745,  410,  411,
  412,  260,  261,  541,  263,  735,  293,  544,  260,  261,
  758,  263,  774,  551,  552,  554,  303,  762,  541,  764,
  543,  559,  410,  411,  412,  541,  389,  390,  773,  257,
  778,  389,  390,  542,  260,  261,  545,  263,  541,  266,
  543,  267,  790,  544,  792,  273,  274,  544,  276,  277,
  278,  279,  280,  281,  312,  283,  284,  842,  286,  287,
  288,  289,  290,  551, 1490,  542,  851,  293,  545,  264,
  265,  541,  324,  543,  326,  327,  542,  260,  261,  545,
  263,  333,  541,  839,  267,  938,  939,  849,  283,  284,
  544,  545,  551,  552,  842,  554,  842,  544,  545,  275,
  559,  543,  278,  279,  280,  281, 1532,  283,  284,  285,
  293,  275,  829,  830,  278,  279,  280,  281,  544,  283,
  284,  285,  355,  410,  411,  412,  882,  360,  876,  541,
 1533,  542,  544,  550,  541,  896,  543, 1563,  543,  543,
  903,  277,  278,  279,  280,  281,  909,  277,  278,  279,
  280,  281, 1578,  541,  541,  900,  543,  905,  920,  907,
  922,  541,  553,  543,  872,  910,  263,  870,  278,  279,
  280,  281, 1575,  541,  911,  543,  913,  914,  915,  964,
  544,    0,  938,  939,  410,  411,  412,  911,  542,  934,
  938,  939,  278,  279,  280,  281,  541,  959,  543,  541,
  911,  543,  913,  914,  417,  541,  954,  543,  911,  471,
  913,  914,  915,  911,  387,  541,  961,  543,  541,  277,
  543, 1006,  911,  542,  913,  914,  542,  410,  411,  412,
  542, 1135, 1136, 1137, 1138,  541,  541,  543,  543,  543,
  985, 1145, 1146, 1147,  541,  541,  543,  543,  541,  543,
  543,  540,  480,  481,  541,  483,  484,  485,  541,  487,
  488,  546,  543,  491,  492,  543,  494,  275,  559,  543,
  278,  279,  280,  281, 1059,  283,  284,  285,  543,  507,
  508,  509,  510,  511,  512,  513,  514,  515,  516,  517,
  518,  519,  520,  543,  540,  543,  545,  544,  531,  532,
  533,  534,  535,  536,  537,  543,  542, 1055,  539,  262,
  545,  459,  544,  547,  544,  541,  549,  559,  387,  356,
  357,  358,  547,  551,  542,  356,  357,  358,  545, 1077,
  539, 1079, 1080,  556,  361,  539,  560, 1085, 1086, 1087,
 1088, 1089, 1090, 1091,  546, 1093, 1094, 1095,  539, 1097,
 1098, 1099, 1100, 1101, 1102, 1103,  543, 1105,  541, 1107,
  539, 1109, 1092,  539, 1110,  547, 1096,  556,  313, 1131,
 1132, 1477, 1478,  313, 1104,  539,  552,  543,  543,  463,
  543,  550, 1125, 1128,  544,  543,  268,  466,  552,  271,
  466,  550, 1135, 1136, 1137, 1138,  550,  542,  545, 1155,
  544,  544, 1145, 1146, 1147,  544, 1162,  544,  546, 1165,
  292,  293,  544,  544,  314,  297, 1164,  299,  544,  272,
  542,  544, 1207,  305,  270,  545,  550,  273,  274,  275,
  276,  540,  278,  279,  280,  281, 1184,  283,  284,  476,
  322,  287,  288,  289,  290,  545, 1194,  263,  294,  295,
 1198, 1199,  550,  272,  543,  337,  543,  303,  304,  540,
  542,  544, 1210,  314,  544,  318,  543,  545,  542, 1296,
  291,  544,  547,  319,  320,  321,  547,  298,  545,  300,
  301,  302, 1230, 1231,  544,  546,  545,  260,  261,  545,
  263, 1239, 1240, 1241, 1242, 1243, 1244, 1245,  544,  318,
  543,  543,  543,    0,  541,  544,  544,  543,  354,  544,
  541,  326,  327,  328,  551,  552, 1246,  338,  339,  340,
  551,  552,  559,  544,  544,  544,  560,  541,  559,  544,
 1233,  260,  261, 1279,  263,  493, 1281,  543,  485,  543,
  497, 1326,  274, 1305,  552,  544,  540,  362,  363,  364,
  550, 1313,  405,  550,  407,  408,  409,  539,  560,  544,
  447, 1306,  545,  384,  385,  386,  419,  388,  542,  387,
  391,  424,  272,  542,  427,  428,  544, 1325,  351,  352,
  353,  326,  327,  328,  544, 1333,  405,  406,  407,  408,
  409,  444,  445,  446,  447,  313,  449,  450,  313,  545,
  419,  544,  544,  376,  543,  424,  543,  263,  427,  428,
  546,  546,  542,  542,  542,  542,  469,  362,  363,  364,
  500,  541,  351,  352,  353,  444,  445,  446,  447,  541,
  449,  450,  451,  452,  543, 1397, 1399,  543,  457,  544,
 1343,  460,  539,  544,  543,  543,  542,  376,  467,  468,
  469,  504,  505, 1398,  544,  544,  542,  542,  506,  547,
  544,  543,  545,  542,  263,  546,  544,  543, 1416, 1417,
 1418,  545,  543,  550,  543,  543, 1461,  543,  531,  532,
  533,  534,  535,  536,  537,  504,  505,  540,  543,  543,
  542, 1453,  263,  543,  543,  541,  549,  470,  544,  472,
  473,  474,  475,  522,  523,  543,  525,  526,  527,  555,
  529,  530,  531,  532,  533,  534,  535,  536,  537,  543,
 1468,  540,  544,  544,  544, 1473, 1474, 1475,  540, 1477,
  549, 1479, 1480, 1481,  543,  542,  542,  542,  546, 1485,
  544,  470, 1569,  472,  473,  474,  475,  447, 1478,  544,
  272, 1536,  542, 1501, 1502, 1503,  544,  457,  542,  544,
  460,  542,  544,  260,  261,  544,  263,  542,  544,  560,
  267,  542,  544,  270,  544,  272,  273,  274,  275,  276,
  542,  278,  279,  280,  281,  544,  283,  284, 1533,  542,
  287,  288,  289,  290,  544,  542,  293,  294,  295,  296,
  544,  542,  544,  542,    0,  542,  303,  304,  544, 1572,
  307, 1573,  355,  335,  544,  312, 1564,  360,  544,  544,
  543,  318,  319,  320,  321,  545,  547,  544,  544,  543,
 1575,  531,  532,  533,  534,  535,  536,  537,  542,  542,
  540,  542,  544,  263,  543,  543,  543,  543,  559,  549,
  543,  546,  546,  544,  543,  542,  544,  354,  542,  356,
  357,  358,  544,  542,  544,  542,  544,  543,  543,  543,
  543,  543,  543,  370,  371,  429,  430,  431,  432,  433,
  434,  435,  436,  437,  438,  439,  440,  441,  442,  443,
  387,  543,  543,  543,  543,  392,  393,  394,  395,  396,
  397,  398,  399,  400,  401,  402,  403,  404,  405,  406,
  407,  408,  409,  410,  411,  412,  413,  414,  415,  416,
  417,  418,  419,  543,  543,  447,  543,  424,  544,  542,
  427,  428,  550,  544,  544,  544,  542,  459,  546,  461,
  462,  543,  464,  465,  544,  543,  543,  444,  445,  446,
  447,  543,  449,  450,  451,  452,  541,  543,  455,  543,
  457,  355,  459,  460,  461,  544,  360,  464,  465,  544,
  467,  468,  469,  547,  544,  272,  544,  263,  544,  476,
  544,  543,  543,  506,  354,  544,  544,  547,  531,  532,
  533,  534,  535,  536,  537,  543,  540,  540,  544,  544,
  539,  539,  544,  560,  545,  540,  549,  504,  505,  531,
  532,  533,  534,  535,  536,  537,  540,  543,  540,  539,
  560,  539,  539,  544,  540,  522,  523,  549,  525,  526,
  527,  544,  529,  530,  531,  532,  533,  534,  535,  536,
  537,  544,  539,  540,  541,  544,  543,  544,  545,  544,
  547,  544,  549,  550,  551,  552,  540,  544,  555,  556,
  560,  544,  559,  560,  260,  261,  543,  263,  543,  173,
  544,  267,  700,  704,  270,  288,  272,  273,  274,  275,
  276,   24,  278,  279,  280,  281,   24,  283,  284,  343,
  459,  287,  288,  289,  290, 1191, 1114,  293,  294,  295,
  296, 1192,  772,  926, 1412,    0,  875,  303,  304, 1179,
  838,  307,  399, 1181,  292,  546,  312,   63,  637,  297,
  670,  299,  318,  319,  320,  321,  423,  305,  425,  426,
  927,  686,    9, 1059,  844, 1123,  849,  531,  532,  533,
  534,  535,  536,  537,  322,  323,  540,  444,  445,  446,
  447,  471,  114,  347,  510,  549,   -1,   -1,  354,  337,
  356,  357,  358,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  370,  371,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  368,  387,   -1,   -1,   -1,   -1,  392,  393,  394,  395,
  396,  397,  398,  399,  400,  401,  402,  403,  404,  405,
  406,  407,  408,  409,  410,  411,  412,  413,  414,  415,
  416,  417,  418,  419,   -1,   -1,   -1,   -1,  424,   -1,
   -1,  427,  428,   -1,  531,  532,  533,  534,  535,  536,
  537,   -1,   -1,  540,   -1,   -1,   -1,   -1,  444,  445,
  446,  447,  549,  449,  450,  451,  452,   -1,   -1,  455,
   -1,  457,   -1,  459,  460,  461,   -1,   -1,  464,  465,
   -1,  467,  468,  469,   -1,   -1,   -1,   -1,   -1,   -1,
  476,   -1,   -1,   -1,  274,  275,  276,   -1,  278,  279,
  280,  281,   -1,  283,  284,  285,   -1,  287,  288,  289,
  290,   -1,   -1,   -1,  294,  295,   -1,   -1,  504,  505,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  522,  523,   -1,  525,
  526,  527,   -1,  529,  530,  531,  532,  533,  534,  535,
  536,  537,   -1,  539,  540,  541,   -1,  543,  544,  545,
   -1,  547,  272,  549,  550,  551,  552,   -1,   -1,  555,
  556,   -1,   -1,  559,  560,  260,  261,   -1,  263,   -1,
   -1,  361,  267,  293,   -1,  270,   -1,  272,  273,  274,
  275,  276,   -1,  278,  279,  280,  281,   -1,  283,  284,
   -1,   -1,  287,  288,  289,  290,   -1,   -1,  293,  294,
  295,  296,   -1,   -1,  268,   -1,    0,  271,  303,  304,
   -1,   -1,  307,   -1,   -1,   -1,   -1,  312,   -1,   -1,
   -1,   -1,   -1,  318,  319,  320,  321,   -1,  292,  293,
   -1,   -1,   -1,  297,   -1,  299,   -1,   -1,   -1,   -1,
   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,  354,
   -1,  356,  357,  358,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  337,   -1,  370,  371,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  405,   -1,   -1,   -1,   -1,
   -1,   -1,  387,   -1,   -1,   -1,   -1,  392,  393,  394,
  395,  396,  397,  398,  399,  400,  401,  402,  403,  404,
  405,  406,  407,  408,  409,  410,  411,  412,  413,  414,
  415,  416,  417,  418,  419,   -1,   -1,  447,   -1,  424,
   -1,   -1,  427,  428,   -1,   -1,   -1,  457,   -1,   -1,
  460,  531,  532,  533,  534,  535,  536,  537,   -1,  444,
  445,  446,  447,   -1,  449,  450,  451,  452,   -1,  549,
  455,   -1,  457,   -1,  459,  460,  461,   -1,   -1,  464,
  465,   -1,  467,  468,  469,   -1,   -1,   -1,   -1,   -1,
   -1,  476,   -1,   -1,  274,  275,  276,   -1,  278,  279,
  280,  281,   -1,  283,  284,  285,   -1,  287,  288,  289,
  290,   -1,   -1,   -1,  294,  295,   -1,   -1,   -1,  504,
  505,  531,  532,  533,  534,  535,  536,  537,   -1,   -1,
  540,   -1,   -1,   -1,   -1,   -1,   -1,  522,  523,  549,
  525,  526,  527,   -1,  529,  530,  531,  532,  533,  534,
  535,  536,  537,   -1,  539,  540,  541,   -1,  543,  544,
  545,   -1,  547,  272,  549,  550,  551,  552,   -1,   -1,
  555,  556,   -1,   -1,  559,  560,  260,  261,   -1,  263,
   -1,  361,   -1,  267,  293,   -1,  270,   -1,  272,  273,
  274,  275,  276,   -1,  278,  279,  280,  281,   -1,  283,
  284,   -1,   -1,  287,  288,  289,  290,   -1,   -1,  293,
  294,  295,  296,   -1,   -1,   -1,   -1,    0,   -1,  303,
  304,   -1,   -1,  307,   -1,   -1,  262,   -1,  312,   -1,
   -1,   -1,   -1,   -1,  318,  319,  320,  321,  274,  275,
  276,   -1,  278,  279,  280,  281,   -1,  283,  284,  285,
   -1,  287,  288,  289,  290,   -1,   -1,   -1,   -1,   -1,
  296,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  354,   -1,  356,  357,  358,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  370,  371,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  405,   -1,   -1,   -1,
   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,  392,  393,
  394,  395,  396,  397,  398,  399,  400,  401,  402,  403,
  404,  405,  406,  407,  408,  409,  410,  411,  412,  413,
  414,  415,  416,  417,  418,  419,   -1,   -1,  447,   -1,
  424,   -1,   -1,  427,  428,   -1,   -1,   -1,  457,   -1,
   -1,  460,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  444,  445,  446,  447,  544,  449,  450,  451,  452,   -1,
   -1,  455,   -1,  457,   -1,  459,  460,  461,   -1,   -1,
  464,  465,   -1,  467,  468,  469,   -1,   -1,   -1,   -1,
  270,   -1,  476,   -1,  274,  275,  276,   -1,  278,  279,
  280,  281,   -1,  283,  284,   -1,   -1,  287,  288,  289,
  290,   -1,   -1,   -1,  294,  295,   -1,   -1,   -1,   -1,
  504,  505,  531,  532,  533,  534,  535,  536,  537,   -1,
   -1,  540,   -1,   -1,   -1,   -1,   -1,   -1,  522,  523,
  549,  525,  526,  527,   -1,  529,  530,  531,  532,  533,
  534,  535,  536,  537,   -1,  539,  540,  541,   -1,  543,
  544,  545,  342,  547,   -1,  549,  550,  551,  552,   -1,
   -1,  555,  556,   -1,   -1,  559,  560,  260,  261,   -1,
  263,  361,   -1,   -1,  267,   -1,   -1,  270,   -1,  272,
  273,  274,  275,  276,   -1,  278,  279,  280,  281,   -1,
  283,  284,   -1,   -1,  287,  288,  289,  290,   -1,   -1,
  293,  294,  295,  296,   -1,   -1,   -1,   -1,    0,   -1,
  303,  304,   -1,   -1,  307,   -1,   -1,   -1,   -1,  312,
   -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  272,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  354,   -1,  356,  357,  358,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  370,  371,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,  405,  406,  407,  408,  409,  410,  411,  412,
  413,  414,  415,  416,  417,  418,  419,   -1,   -1,   -1,
   -1,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,  451,  452,
   -1,   -1,  455,   -1,  457,   -1,  459,  460,  461,   -1,
   -1,  464,  465,   -1,  467,  468,  469,   -1,    0,   -1,
   -1,   -1,   -1,  476,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  420,  421,  422,  423,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,  444,  445,  446,
  447,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,  541,   -1,
  543,  544,  545,   -1,  547,  272,  549,  550,  551,  552,
   -1,   -1,  555,  556,   -1,   -1,  559,  560,  260,  261,
   -1,  263,   -1,   -1,   -1,  267,  293,   -1,  270,   -1,
  272,  273,  274,  275,  276,   -1,  278,  279,  280,  281,
   -1,  283,  284,   -1,   -1,  287,  288,  289,  290,   -1,
   -1,  293,  294,  295,  531,  532,  533,  534,  535,  536,
  537,  303,  304,  540,   -1,  307,   -1,   -1,   -1,   -1,
  312,   -1,  549,   -1,   -1,   -1,  318,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  270,   -1,   -1,
  273,  274,  275,  276,   -1,  278,  279,  280,  281,   -1,
  283,  284,  354,   -1,  287,  288,  289,  290,   -1,   -1,
   -1,  294,  295,   -1,   -1,   -1,   -1,   -1,  370,  371,
  303,  304,   -1,   -1,   -1,   -1,   -1,   -1,  405,   -1,
   -1,   -1,   -1,   -1,   -1,  387,  319,  320,  321,   -1,
  392,  393,  394,  395,  396,  397,  398,  399,  400,  401,
  402,  403,  404,  405,  406,  407,  408,  409,  410,  411,
  412,  413,  414,  415,  416,  417,  418,  419,   -1,   -1,
  447,  354,  424,   -1,   -1,  427,  428,   -1,  260,  261,
  457,  263,   -1,  460,   -1,   -1,   -1,   -1,   -1,   -1,
  272,   -1,  444,  445,  446,  447,   -1,  449,  450,  451,
  452,   -1,   -1,  455,   -1,  457,   -1,  459,  460,  461,
   -1,   -1,  464,  465,   -1,  467,  468,  469,   -1,   -1,
   -1,   -1,   -1,   -1,  476,  307,   -1,   -1,   -1,   -1,
  312,   -1,   -1,   -1,   -1,   -1,  318,   -1,   -1,   -1,
    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  504,  505,  531,  532,  533,  534,  535,  536,
  537,   -1,   -1,  540,   -1,   -1,   -1,   -1,   -1,   -1,
  522,  523,  549,  525,  526,  527,   -1,  529,  530,  531,
  532,  533,  534,  535,  536,  537,   -1,  539,  540,   -1,
   -1,  543,  544,  545,   -1,  547,   -1,  549,  550,   -1,
   -1,   -1,   -1,  555,  556,   -1,   -1,   -1,  560,   -1,
  392,  393,  394,  395,  396,  397,  398,  399,  400,  401,
  402,  403,  404,  405,  406,  407,  408,  409,   -1,   -1,
   -1,  413,  414,  415,  416,  417,  418,  419,   -1,   -1,
   -1,   -1,  424,   -1,   -1,  427,  428,   -1,   -1,  272,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  541,   -1,
   -1,   -1,  444,  445,  446,  447,   -1,  449,  450,  451,
  452,   -1,  555,  455,   -1,  457,   -1,  459,  460,  461,
   -1,   -1,  464,  465,  307,  467,  468,  469,    0,  312,
   -1,   -1,   -1,   -1,   -1,  318,   -1,   -1,   -1,   -1,
  274,  275,  276,   -1,  278,  279,  280,  281,   -1,  283,
  284,  285,   -1,  287,  288,  289,  290,   -1,   -1,   -1,
  294,  295,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  522,  523,   -1,  525,  526,  527,   -1,  529,  530,  531,
  532,  533,  534,  535,  536,  537,   -1,  539,  540,   -1,
   -1,  543,  544,  545,   -1,  547,   -1,  549,  550,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,  405,  406,  407,  408,  409,  361,   -1,   -1,
  413,  414,  415,  416,  417,  418,  419,   -1,   -1,   -1,
   -1,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,
   -1,   -1,  272,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,  451,  452,
   -1,   -1,  455,   -1,  457,   -1,  459,  460,  461,   -1,
   -1,  464,  465,   -1,  467,  468,  469,  307,   -1,   -1,
   -1,   -1,  312,   -1,   -1,   -1,   -1,   -1,  318,  272,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,
  543,  544,  545,   -1,  547,   -1,  549,  550,   -1,   -1,
   -1,   -1,  392,  393,  394,  395,  396,  397,  398,  399,
  400,  401,  402,  403,  404,  405,  406,  407,  408,  409,
   -1,   -1,   -1,  413,  414,  415,  416,  417,  418,  419,
  272,   -1,   -1,   -1,  424,   -1,   -1,  427,  428,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  444,  445,  446,  447,   -1,  449,
  450,  451,  452,   -1,   -1,  455,   -1,  457,   -1,  459,
  460,  461,   -1,   -1,  464,  465,  318,  467,  468,  469,
   -1,  291,   -1,   -1,  427,  428,   -1,   -1,  298,   -1,
  300,  301,  302,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  447,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  504,  505,  459,   -1,  461,   -1,
   -1,  464,  465,   -1,   -1,   -1,   -1,   -1,  338,  339,
  340,   -1,  522,  523,   -1,  525,  526,  527,   -1,  529,
  530,  531,  532,  533,  534,  535,  536,  537,   -1,  539,
  540,   -1,   -1,  543,  544,  545,   -1,  547,   -1,  549,
  550,   -1,   -1,  405,  406,  407,  408,  409,   -1,   -1,
   -1,   -1,   -1,   -1,  384,  385,  386,  419,  388,   -1,
   -1,  391,  424,   -1,   -1,  427,  428,   -1,  531,  532,
  533,  534,  535,  536,  537,   -1,   -1,  540,   -1,   -1,
   -1,   -1,  444,  445,  446,  447,  549,  449,  450,  451,
  452,   -1,   -1,   -1,   -1,  457,   -1,   -1,  460,   -1,
   -1,  260,   -1,   -1,  263,  467,  468,  469,   -1,   -1,
   -1,   -1,   -1,  272,   -1,  274,  275,  276,   -1,  278,
  279,  280,  281,    0,  283,  284,  285,   -1,  287,  288,
  289,  290,   -1,   -1,  293,  294,  295,   -1,   -1,   -1,
   -1,   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,
  522,  523,   -1,  525,  526,  527,   -1,  529,  530,  531,
  532,  533,  534,  535,  536,  537,  335,   -1,  540,   -1,
   -1,   -1,  291,   -1,   -1,   -1,   -1,  549,  550,  298,
   -1,  300,  301,  302,   -1,   -1,  355,   -1,   -1,   -1,
   -1,  360,  361,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  544,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  338,
  339,  340,   -1,  392,  393,  394,  395,  396,  397,  398,
  399,  400,  401,  402,  403,  404,  405,  406,  407,  408,
  409,   -1,   -1,   -1,  413,  414,  415,  416,  417,  418,
  419,  420,  421,  422,  423,  424,  425,  426,  427,  428,
   -1,   -1,   -1,   -1,   -1,  384,  385,  386,   -1,  388,
   -1,   -1,  391,   -1,   -1,  444,  445,  446,  447,   -1,
  449,  450,  451,  452,   -1,   -1,  455,   -1,  457,   -1,
  459,  460,  461,  462,   -1,  464,  465,   -1,  467,  468,
  469,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  522,  523,   -1,  525,  526,  527,   -1,
  529,  530,  531,  532,  533,  534,  535,  536,  537,   -1,
  539,  540,   -1,  260,   -1,   -1,  263,   -1,   -1,   -1,
  549,   -1,   -1,   -1,   -1,  272,   -1,  274,  275,  276,
   -1,  278,  279,  280,  281,   -1,  283,  284,  285,   -1,
  287,  288,  289,  290,   -1,   -1,  293,  294,  295,  269,
  270,  271,   -1,  273,  274,  275,  276,   -1,  278,  279,
  280,  281,   -1,  283,  284,  544,   -1,  287,  288,  289,
  290,  318,   -1,  293,  294,  295,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  303,  304,   -1,   -1,   -1,  335,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  319,
  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,  355,   -1,
   -1,   -1,   -1,  360,  361,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395,  396,
  397,  398,  399,  400,  401,  402,  403,  404,  405,  406,
  407,  408,  409,   -1,   -1,   -1,  413,  414,  415,  416,
  417,  418,  419,  420,  421,  422,  423,  424,  425,  426,
  427,  428,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  444,  445,  446,
  447,   -1,  449,  450,  451,  452,   -1,   -1,  455,   -1,
  457,   -1,  459,  460,  461,  462,  260,  464,  465,  263,
  467,  468,  469,  291,   -1,   -1,   -1,   -1,  272,   -1,
  298,   -1,  300,  301,  302,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  293,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  338,  339,  340,   -1,  318,  522,  523,  272,  525,  526,
  527,   -1,  529,  530,  531,  532,  533,  534,  535,  536,
  537,  335,  539,  540,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  549,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  384,  385,  386,   -1,
  388,   -1,   -1,  391,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  555,  556,   -1,   -1,   -1,
  335,   -1,   -1,  387,   -1,   -1,   -1,   -1,  392,  393,
  394,  395,  396,  397,  398,  399,  400,  401,  402,  403,
  404,  405,  406,  407,  408,  409,   -1,   -1,   -1,  413,
  414,  415,  416,  417,  418,  419,  420,  421,  422,  423,
  424,  425,  426,  427,  428,    0,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  444,  445,  446,  447,   -1,  449,  450,  451,  452,   -1,
   -1,  455,   -1,  457,   -1,  459,  460,  461,  462,   -1,
  464,  465,   -1,  467,  468,  469,   -1,   -1,   -1,   -1,
   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  260,   -1,   -1,  263,   -1,   -1,   -1,   -1,
   -1,   -1,  447,   -1,  272,   -1,   -1,   -1,   -1,   -1,
  504,  505,   -1,   -1,  459,   -1,  461,  462,   -1,  464,
  465,   -1,   -1,   -1,   -1,  293,  544,   -1,  522,  523,
   -1,  525,  526,  527,   -1,  529,  530,  531,  532,  533,
  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,   -1,
  318,   -1,   -1,   -1,   -1,  549,   -1,   -1,   -1,  269,
  270,  271,   -1,  273,  274,  275,  276,  335,  278,  279,
  280,  281,   -1,  283,  284,   -1,   -1,  287,  288,  289,
  290,   -1,   -1,   -1,  294,  295,  531,  532,  533,  534,
  535,  536,  537,  303,  304,  540,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  549,   -1,   -1,   -1,   -1,  319,
  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,
   -1,   -1,   -1,   -1,  392,  393,  394,  395,  396,  397,
  398,  399,  400,  401,  402,  403,  404,  405,  406,  407,
  408,  409,   -1,   -1,  354,  413,  414,  415,  416,  417,
  418,  419,  420,  421,  422,  423,  424,  425,  426,  427,
  428,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  444,  445,  446,  447,
   -1,  449,  450,  451,  452,   -1,   -1,  455,  291,  457,
   -1,  459,  460,  461,  462,  260,  464,  465,  263,  467,
  468,  469,  305,   -1,   -1,   -1,   -1,  272,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  321,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  293,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,   -1,
   -1,  344,  345,  346,  347,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  318,  522,  523,   -1,  525,  526,  527,
   -1,  529,  530,  531,  532,  533,  534,  535,  536,  537,
  335,  539,  540,  376,  377,  378,  379,  380,  381,  382,
   -1,  549,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  387,   -1,   -1,   -1,   -1,  392,  393,  394,
  395,  396,  397,  398,  399,  400,  401,  402,  403,  404,
  405,  406,  407,  408,  409,  555,  556,   -1,  413,  414,
  415,  416,  417,  418,  419,  420,  421,  422,  423,  424,
  425,  426,  427,  428,    0,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  444,
  445,  446,  447,   -1,  449,  450,  451,  452,   -1,   -1,
  455,   -1,  457,   -1,  459,  460,  461,  462,   -1,  464,
  465,   -1,  467,  468,  469,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  260,   -1,   -1,  263,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  272,   -1,   -1,  539,   -1,   -1,  504,
  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  293,   -1,   -1,  522,  523,   -1,
  525,  526,  527,   -1,  529,  530,  531,  532,  533,  534,
  535,  536,  537,   -1,  539,  540,   -1,   -1,   -1,  318,
   -1,   -1,   -1,   -1,  549,   -1,   -1,   -1,   -1,  270,
   -1,   -1,  273,  274,  275,  276,  335,  278,  279,  280,
  281,   -1,  283,  284,   -1,   -1,  287,  288,  289,  290,
   -1,   -1,   -1,  294,  295,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  303,  304,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,  319,  320,
  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,
   -1,   -1,   -1,  392,  393,  394,  395,  396,  397,  398,
  399,  400,  401,  402,  403,  404,  405,  406,  407,  408,
  409,   -1,   -1,  354,  413,  414,  415,  416,  417,  418,
  419,  420,  421,  422,  423,  424,  425,  426,  427,  428,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  444,  445,  446,  447,   -1,
  449,  450,  451,  452,   -1,   -1,  455,   -1,  457,   -1,
  459,  460,  461,  462,  260,  464,  465,  263,  467,  468,
  469,   -1,   -1,   -1,   -1,   -1,  272,   -1,   -1,   -1,
  260,  261,   -1,  263,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,   -1,   -1,
   -1,  291,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  318,  522,  523,   -1,  525,  526,  527,   -1,
  529,  530,  531,  532,  533,  534,  535,  536,  537,  319,
  539,  540,    0,  323,   -1,   -1,  326,  327,   -1,   -1,
  549,  331,  332,  333,  334,  335,  336,  337,  338,  339,
  340,  341,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349,
   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,  359,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395,
  396,  397,  398,  399,  400,  401,  402,  403,  404,  405,
  406,  407,  408,  409,  555,  556,   -1,  413,  414,  415,
  416,  417,  418,  419,  420,  421,  422,  423,  424,  425,
  426,  427,  428,  260,   -1,   -1,  263,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  272,   -1,   -1,  444,  445,
  446,  447,   -1,  449,  450,  451,  452,   -1,   -1,  455,
   -1,  457,   -1,   -1,  460,   -1,   -1,   -1,   -1,   -1,
   -1,  467,  468,  469,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  318,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  504,  505,
   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  522,  523,   -1,  525,
  526,  527,   -1,  529,  530,  531,  532,  533,  534,  535,
  536,  537,   -1,  539,  540,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  549,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395,  396,
  397,  398,  399,  400,  401,  402,  403,  404,  405,  406,
  407,  408,  409,   -1,   -1,   -1,  413,  414,  415,  416,
  417,  418,  419,  420,  421,  422,  423,  424,  425,  426,
  427,  428,  260,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  272,   -1,   -1,  444,  445,  446,
  447,   -1,  449,  450,  451,  452,   -1,   -1,  455,   -1,
  457,   -1,   -1,  460,   -1,   -1,   -1,   -1,   -1,   -1,
  467,  468,  469,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  318,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,
    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  522,  523,   -1,  525,  526,
  527,   -1,  529,  530,  531,  532,  533,  534,  535,  536,
  537,   -1,  539,  540,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  549,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  392,  393,  394,  395,  396,  397,
  398,  399,  400,  401,  402,  403,  404,  405,  406,  407,
  408,  409,   -1,   -1,   -1,  413,  414,  415,  416,  417,
  418,  419,  420,  421,  422,  423,  424,  425,  426,  427,
  428,  260,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  272,   -1,   -1,  444,  445,  446,  447,
   -1,  449,  450,  451,  452,   -1,   -1,  455,   -1,  457,
   -1,   -1,  460,   -1,   -1,   -1,   -1,   -1,   -1,  467,
  468,  469,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,    0,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  522,  523,   -1,  525,  526,  527,
   -1,  529,  530,  531,  532,  533,  534,  535,  536,  537,
   -1,  539,  540,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  549,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  392,  393,  394,  395,  396,  397,  398,
  399,  400,  401,  402,  403,  404,  405,  406,  407,  408,
  409,   -1,   -1,   -1,  413,  414,  415,  416,  417,  418,
  419,  420,  421,  422,  423,  424,  425,  426,  427,  428,
  260,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  272,   -1,   -1,  444,  445,  446,  447,   -1,
  449,  450,  451,  452,   -1,   -1,  455,   -1,  457,   -1,
   -1,  460,   -1,   -1,   -1,   -1,   -1,   -1,  467,  468,
  469,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  504,  505,   -1,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  522,  523,   -1,  525,  526,  527,   -1,
  529,  530,  531,  532,  533,  534,  535,  536,  537,   -1,
  539,  540,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  549,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  392,  393,  394,  395,  396,  397,  398,  399,
  400,  401,  402,  403,  404,  405,  406,  407,  408,  409,
   -1,   -1,   -1,  413,  414,  415,  416,  417,  418,  419,
  420,  421,  422,  423,  424,  425,  426,  427,  428,  260,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  272,   -1,   -1,  444,  445,  446,  447,   -1,  449,
  450,  451,  452,   -1,   -1,  455,   -1,  457,   -1,   -1,
  460,   -1,   -1,   -1,   -1,   -1,   -1,  467,  468,  469,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  504,  505,   -1,    0,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  522,  523,   -1,  525,  526,  527,   -1,  529,
  530,  531,  532,  533,  534,  535,  536,  537,   -1,  539,
  540,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  549,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  392,  393,  394,  395,  396,  397,  398,  399,  400,
  401,  402,  403,  404,  405,  406,  407,  408,  409,   -1,
   -1,   -1,  413,  414,  415,  416,  417,  418,  419,  420,
  421,  422,  423,  424,  425,  426,  427,  428,  260,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  272,   -1,   -1,  444,  445,  446,  447,   -1,  449,  450,
  451,  452,   -1,   -1,  455,   -1,  457,   -1,   -1,  460,
   -1,   -1,   -1,   -1,   -1,   -1,  467,  468,  469,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  318,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  522,  523,   -1,  525,  526,  527,   -1,  529,  530,
  531,  532,  533,  534,  535,  536,  537,   -1,  539,  540,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  392,  393,  394,  395,  396,  397,  398,  399,  400,  401,
  402,  403,  404,  405,  406,  407,  408,  409,   -1,   -1,
   -1,  413,  414,  415,  416,  417,  418,  419,  420,  421,
  422,  423,  424,  425,  426,  427,  428,  260,   -1,   -1,
  263,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  272,
   -1,   -1,  444,  445,  446,  447,   -1,  449,  450,  451,
  452,   -1,   -1,  455,   -1,  457,   -1,   -1,  460,   -1,
   -1,   -1,   -1,   -1,   -1,  467,  468,  469,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  318,   -1,    0,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  522,  523,   -1,  525,  526,  527,   -1,  529,  530,  531,
  532,  533,  534,  535,  536,  537,   -1,  539,  540,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,  405,  406,  407,  408,  409,   -1,   -1,   -1,
  413,  414,  415,  416,  417,  418,  419,  260,   -1,   -1,
  263,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,  272,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,  451,  452,
   -1,   -1,  455,   -1,  457,   -1,  459,  460,  461,   -1,
   -1,  464,  465,   -1,  467,  468,  469,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  318,   -1,    0,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,  405,  406,  407,  408,  409,   -1,   -1,   -1,
  413,  414,  415,  416,  417,  418,  419,  260,   -1,   -1,
  263,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,  272,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,  451,  452,
   -1,   -1,  455,   -1,  457,   -1,  459,  460,  461,   -1,
   -1,  464,  465,   -1,  467,  468,  469,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  318,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,  405,  406,  407,  408,  409,   -1,   -1,   -1,
  413,  414,  415,  416,  417,  418,  419,  260,   -1,   -1,
  263,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,  272,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,  451,  452,
   -1,   -1,  455,   -1,  457,   -1,   -1,  460,   -1,   -1,
  272,   -1,   -1,   -1,  467,  468,  469,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  318,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,
   -1,   -1,  545,   -1,   -1,   -1,  549,   -1,   -1,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,  405,  406,  407,  408,  409,   -1,   -1,   -1,
  413,  414,  415,  416,  417,  418,  419,   -1,   -1,   -1,
   -1,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  405,  406,  407,  408,  409,  272,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,  451,  452,
   -1,   -1,  455,   -1,  457,  427,  428,  460,   -1,   -1,
   -1,   -1,   -1,   -1,  467,  468,  469,   -1,   -1,  272,
   -1,   -1,  444,  445,  446,  447,   -1,   -1,   -1,  451,
  452,   -1,   -1,   -1,   -1,  457,   -1,  459,  460,   -1,
   -1,   -1,   -1,   -1,   -1,  467,  468,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,   -1,
  522,  523,   -1,  525,  526,  527,   -1,  529,  530,  531,
  532,  533,  534,  535,  536,  537,   -1,   -1,  540,   -1,
   -1,  405,  406,  407,  408,  409,   -1,  549,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  405,  406,  407,  408,  409,  272,   -1,   -1,
  444,  445,  446,  447,   -1,   -1,   -1,  451,  452,   -1,
   -1,   -1,   -1,  457,  427,  428,  460,   -1,   -1,   -1,
   -1,   -1,   -1,  467,  468,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,   -1,   -1,  451,  452,
   -1,   -1,   -1,   -1,  457,   -1,   -1,  460,   -1,   -1,
   -1,   -1,   -1,   -1,  467,  468,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  522,  523,
   -1,  525,  526,  527,   -1,  529,  530,  531,  532,  533,
  534,  535,  536,  537,   -1,   -1,  540,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,   -1,  522,
  523,   -1,  525,  526,  527,   -1,  529,  530,  531,  532,
  533,  534,  535,  536,  537,   -1,   -1,  540,   -1,   -1,
  405,  406,  407,  408,  409,   -1,  549,  260,  261,   -1,
  263,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  291,  444,
  445,  446,  447,   -1,   -1,   -1,  451,  452,   -1,   -1,
   -1,   -1,  457,   -1,   -1,  460,   -1,   -1,   -1,   -1,
   -1,   -1,  467,  468,   -1,   -1,  319,   -1,   -1,   -1,
  323,   -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,
  333,  334,  335,  336,  337,  338,  339,  340,  341,  342,
   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,   -1,  352,
   -1,   -1,   -1,   -1,   -1,   -1,  359,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  368,   -1,  522,  523,   -1,
  525,  526,  527,   -1,  529,  530,  531,  532,  533,  534,
  535,  536,  537,  260,  261,  540,  263,   -1,   -1,   -1,
  267,   -1,   -1,  270,  549,   -1,  273,  274,  275,  276,
   -1,  278,  279,  280,  281,   -1,  283,  284,   -1,   -1,
  287,  288,  289,  290,   -1,   -1,  293,  294,  295,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  303,  304,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  319,  320,  321,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,  356,
  357,  358,  260,  261,   -1,  263,   -1,   -1,   -1,  267,
   -1,   -1,  270,  370,  371,  273,  274,  275,  276,   -1,
  278,  279,  280,  281,   -1,  283,  284,   -1,   -1,  287,
  288,  289,  290,   -1,   -1,  293,  294,  295,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  303,  304,   -1,   -1,   -1,
   -1,   -1,   -1,  410,  411,  412,   -1,   -1,   -1,   -1,
   -1,  319,  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,  356,  357,
  358,   -1,   -1,   -1,   -1,   -1,   -1,  260,  261,   -1,
  263,   -1,  370,  371,  267,   -1,   -1,  270,   -1,   -1,
  273,  274,  275,  276,   -1,  278,  279,  280,  281,   -1,
  283,  284,   -1,   -1,  287,  288,  289,  290,   -1,   -1,
  293,  294,  295,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  303,  304,  410,  411,  412,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  319,  320,  321,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  541,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  551,  552,   -1,   -1,  555,  556,
   -1,  354,  559,  356,  357,  358,  260,  261,   -1,  263,
   -1,   -1,   -1,  267,   -1,   -1,  270,  370,  371,  273,
  274,  275,  276,   -1,  278,  279,  280,  281,   -1,  283,
  284,   -1,   -1,  287,  288,  289,  290,   -1,   -1,  293,
  294,  295,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  303,
  304,   -1,   -1,   -1,   -1,   -1,   -1,  410,  411,  412,
   -1,   -1,   -1,   -1,   -1,  319,  320,  321,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  541,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  551,  552,   -1,   -1,  555,  556,   -1,
  354,  559,  356,  357,  358,   -1,  260,  261,   -1,  263,
   -1,   -1,   -1,  267,   -1,   -1,  270,   -1,   -1,  273,
  274,  275,  276,   -1,  278,  279,  280,  281,   -1,  283,
  284,   -1,   -1,  287,  288,  289,  290,   -1,   -1,  293,
  294,  295,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  303,
  304,   -1,   -1,   -1,   -1,   -1,  410,  411,  412,   -1,
   -1,   -1,   -1,   -1,   -1,  319,  320,  321,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  541,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  551,  552,
  354,  355,  555,  556,   -1,   -1,  559,   -1,   -1,  260,
  261,   -1,  263,   -1,   -1,   -1,  267,   -1,   -1,  270,
   -1,   -1,  273,  274,  275,  276,   -1,  278,  279,  280,
  281,   -1,  283,  284,   -1,   -1,  287,  288,  289,  290,
   -1,   -1,  293,  294,  295,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  303,  304,   -1,   -1,  410,  411,  412,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  319,  320,
  321,   -1,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  541,   -1,   -1,
   -1,   -1,   -1,  447,   -1,   -1,   -1,  551,  552,   -1,
   -1,  555,  556,  354,   -1,  559,   -1,   -1,   -1,  260,
  261,   -1,  263,   -1,   -1,   -1,  267,  368,   -1,  270,
   -1,   -1,  273,  274,  275,  276,   -1,  278,  279,  280,
  281,   -1,  283,  284,   -1,   -1,  287,  288,  289,  290,
   -1,   -1,  293,  294,  295,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  303,  304,   -1,   -1,   -1,   -1,   -1,  410,
  411,  412,   -1,   -1,   -1,   -1,   -1,   -1,  319,  320,
  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  541,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  555,  556,  354,  355,  260,  261,   -1,  263,   -1,
   -1,   -1,  267,   -1,   -1,  270,   -1,   -1,  273,  274,
  275,  276,   -1,  278,  279,  280,  281,   -1,  283,  284,
   -1,   -1,  287,  288,  289,  290,   -1,   -1,  293,  294,
  295,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  303,  304,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  410,
  411,  412,   -1,   -1,  319,  320,  321,   -1,  260,  261,
   -1,  263,   -1,   -1,   -1,  267,   -1,   -1,  270,   -1,
   -1,  273,  274,  275,  276,   -1,  278,  279,  280,  281,
  541,  283,  284,   -1,   -1,  287,  288,  289,  290,  354,
   -1,  293,  294,  295,  555,  556,   -1,   -1,   -1,   -1,
   -1,  303,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  410,  411,  412,   -1,   -1,
   -1,   -1,  354,   -1,  260,  261,   -1,  263,   -1,   -1,
   -1,  267,   -1,   -1,  270,   -1,   -1,  273,  274,  275,
  276,   -1,  278,  279,  280,  281,   -1,  283,  284,   -1,
  541,  287,  288,  289,  290,   -1,   -1,  293,  294,  295,
   -1,   -1,   -1,  260,  555,  556,  263,  303,  304,   -1,
   -1,   -1,   -1,   -1,   -1,  272,   -1,   -1,  410,  411,
  412,   -1,   -1,  319,  320,  321,   -1,   -1,   -1,   -1,
   -1,   -1,  260,  261,   -1,  263,   -1,   -1,   -1,  267,
   -1,   -1,  270,   -1,   -1,  273,  274,  275,  276,   -1,
  278,  279,  280,  281,   -1,  283,  284,   -1,  354,  287,
  288,  289,  290,   -1,   -1,  293,  294,  295,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  303,  304,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  541,   -1,   -1,   -1,
   -1,  319,  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,
  555,  556,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  410,  411,  412,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,
  387,   -1,   -1,   -1,   -1,  392,  393,  394,  395,  396,
  397,  398,  399,  400,  401,  402,  403,  404,   -1,  541,
   -1,   -1,  409,   -1,   -1,   -1,  413,  414,  415,  416,
  417,  418,   -1,  555,  556,   -1,  260,   -1,   -1,  263,
  427,  428,   -1,   -1,   -1,   -1,   -1,   -1,  272,   -1,
   -1,   -1,  410,  411,  412,   -1,   -1,  444,  445,  446,
  447,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  455,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  469,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  541,   -1,  504,  505,  260,
   -1,   -1,  263,   -1,   -1,   -1,   -1,   -1,   -1,  555,
  556,  272,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  531,  532,  533,  534,  535,  536,
  537,   -1,  539,  540,   -1,   -1,   -1,  544,   -1,   -1,
  547,   -1,  549,   -1,   -1,   -1,   -1,  554,  392,  393,
  394,  395,  396,  397,  398,  399,  400,  401,  402,  403,
  404,   -1,   -1,  541,   -1,  409,   -1,   -1,   -1,  413,
  414,  415,  416,  417,  418,   -1,   -1,  555,  556,   -1,
   -1,   -1,  260,  427,  428,  263,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  272,   -1,   -1,   -1,   -1,   -1,
  444,  445,  446,  447,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  455,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  469,   -1,   -1,   -1,   -1,
   -1,  392,  393,  394,  395,  396,  397,  398,  399,  400,
  401,  402,  403,  404,   -1,   -1,   -1,   -1,  409,   -1,
   -1,   -1,  413,  414,  415,  416,  417,  418,   -1,   -1,
  504,  505,   -1,   -1,   -1,  260,  427,  428,  263,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  272,   -1,   -1,
   -1,   -1,   -1,  444,  445,  446,  447,  531,  532,  533,
  534,  535,  536,  537,  455,  539,  540,   -1,   -1,   -1,
   -1,   -1,   -1,  547,   -1,  549,   -1,   -1,  469,   -1,
  554,   -1,   -1,   -1,  392,  393,  394,  395,  396,  397,
  398,  399,  400,  401,  402,  403,  404,   -1,   -1,   -1,
   -1,  409,   -1,   -1,   -1,  413,  414,  415,  416,  417,
  418,   -1,   -1,  504,  505,   -1,   -1,   -1,  260,  427,
  428,  263,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  272,   -1,   -1,   -1,   -1,   -1,  444,  445,  446,  447,
  531,  532,  533,  534,  535,  536,  537,  455,  539,  540,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,
   -1,  469,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,
  395,  396,  397,  398,  399,  400,  401,  402,  403,  404,
   -1,   -1,   -1,   -1,  409,   -1,   -1,   -1,  413,  414,
  415,  416,  417,  418,   -1,   -1,  504,  505,   -1,   -1,
   -1,  260,  427,  428,  263,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  272,   -1,   -1,   -1,   -1,   -1,  444,
  445,  446,  447,  531,  532,  533,  534,  535,  536,  537,
  455,  539,  540,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  549,   -1,   -1,  469,   -1,   -1,   -1,   -1,   -1,
  392,  393,  394,  395,  396,  397,  398,  399,  400,  401,
  402,  403,  404,   -1,   -1,   -1,   -1,  409,   -1,   -1,
   -1,  413,  414,  415,  416,  417,  418,   -1,   -1,  504,
  505,   -1,   -1,   -1,  260,  427,  428,  263,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  272,   -1,   -1,   -1,
   -1,   -1,  444,  445,  446,  447,  531,  532,  533,  534,
  535,  536,  537,  455,  539,  540,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  549,   -1,   -1,  469,   -1,   -1,
   -1,   -1,   -1,  392,  393,  394,  395,  396,  397,  398,
  399,  400,  401,  402,  403,  404,   -1,   -1,   -1,   -1,
  409,   -1,   -1,   -1,  413,  414,  415,  416,  417,  418,
   -1,   -1,  504,  505,   -1,   -1,   -1,  260,  427,  428,
  263,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  272,
   -1,   -1,   -1,   -1,   -1,  444,  445,  446,  447,  531,
  532,  533,  534,  535,  536,  537,  455,  539,  540,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,
  469,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395,
  396,  397,  398,  399,  400,  401,  402,  403,  404,   -1,
   -1,   -1,   -1,  409,   -1,   -1,   -1,  413,  414,  415,
  416,  417,  418,   -1,   -1,  504,  505,   -1,   -1,   -1,
   -1,  427,  428,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  444,  445,
  446,  447,  531,  532,  533,  534,  535,  536,  537,  455,
  539,  540,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  549,   -1,   -1,  469,   -1,   -1,   -1,   -1,   -1,  392,
  393,  394,  395,  396,  397,  398,  399,  400,  401,  402,
  403,  404,   -1,   -1,   -1,   -1,  409,   -1,   -1,   -1,
  413,  414,  415,  416,  417,  418,   -1,   -1,  504,  505,
   -1,   -1,   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,  531,  532,  533,  534,  535,
  536,  537,  455,  539,  540,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  549,  270,   -1,  469,  273,  274,  275,
  276,   -1,  278,  279,  280,  281,   -1,  283,  284,   -1,
   -1,  287,  288,  289,  290,  291,   -1,   -1,  294,  295,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  303,  304,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  319,  320,  321,   -1,  323,   -1,  325,
  326,  327,  328,   -1,   -1,   -1,   -1,   -1,  531,  532,
  533,  534,  535,  536,  537,   -1,  539,  540,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  362,  363,  364,  365,
   -1,   -1,  368,   -1,   -1,   -1,  372,  373,  374,  270,
   -1,   -1,  273,  274,  275,  276,   -1,  278,  279,  280,
  281,   -1,  283,  284,   -1,   -1,  287,  288,  289,  290,
  291,   -1,   -1,  294,  295,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  303,  304,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  319,  320,
  321,   -1,  323,   -1,  325,  326,  327,  328,   -1,   -1,
   -1,   -1,  270,   -1,   -1,  273,  274,  275,  276,   -1,
  278,  279,  280,  281,   -1,  283,  284,   -1,   -1,  287,
  288,  289,  290,  354,   -1,   -1,  294,  295,   -1,   -1,
   -1,  362,  363,  364,  365,  303,  304,  368,   -1,   -1,
  476,  372,  373,  374,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  319,  320,  321,  270,   -1,   -1,  273,  274,  275,
  276,   -1,  278,  279,  280,  281,   -1,  283,  284,   -1,
   -1,  287,  288,  289,  290,   -1,   -1,   -1,  294,  295,
   -1,   -1,   -1,   -1,   -1,   -1,  354,  303,  304,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  319,  320,  321,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  555,
  556,  272,  270,   -1,   -1,  273,  274,  275,  276,   -1,
  278,  279,  280,  281,   -1,  283,  284,   -1,  354,  287,
  288,  289,  290,   -1,   -1,  476,  294,  295,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  303,  304,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  319,  320,  321,   -1,   -1,   -1,  270,   -1,   -1,
  273,  274,  275,  276,   -1,  278,  279,  280,  281,   -1,
  283,  284,   -1,   -1,  287,  288,  289,  290,   -1,   -1,
   -1,  294,  295,   -1,   -1,   -1,  354,   -1,   -1,   -1,
  303,  304,   -1,   -1,   -1,   -1,  257,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  555,  556,  319,  320,  321,  270,
   -1,   -1,  273,  274,   -1,  276,  277,  278,  279,  280,
  281,   -1,  283,  284,   -1,  286,  287,  288,  289,  290,
   -1,   -1,   -1,   -1,  405,  406,  407,  408,  409,   -1,
   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  541,   -1,   -1,  427,  428,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  555,  556,   -1,
  331,   -1,  333,  444,  445,  446,  447,  338,   -1,   -1,
  451,  452,   -1,   -1,   -1,   -1,  457,   -1,   -1,  460,
   -1,   -1,   -1,  354,   -1,   -1,  467,  468,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  541,   -1,   -1,   -1,   -1,
   -1,  272,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  555,
  556,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  522,  523,   -1,  525,  526,  527,   -1,  529,  530,
  531,  532,  533,  534,  535,  536,  537,   -1,   -1,  540,
   -1,   -1,   -1,  541,   -1,   -1,   -1,   -1,  549,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  555,  556,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  477,   -1,  479,  480,
  481,  482,  483,  484,  485,  486,  487,  488,  489,  490,
  491,  492,  493,  494,  495,   -1,   -1,   -1,  499,   -1,
   -1,   -1,  555,  556,  405,  406,  407,  408,  409,  272,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  427,  428,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  539,   -1,
   -1,   -1,   -1,  444,  445,  446,  447,   -1,   -1,   -1,
  451,  452,   -1,   -1,   -1,  318,  457,   -1,   -1,  460,
   -1,   -1,   -1,   -1,   -1,   -1,  467,  468,   -1,   -1,
   -1,   -1,   -1,  257,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  270,   -1,   -1,  273,
  274,   -1,  276,  277,  278,  279,  280,  281,   -1,  283,
  284,   -1,  286,  287,  288,  289,  290,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  522,  523,   -1,  525,  526,  527,   -1,  529,  530,
  531,  532,  533,  534,  535,  536,  537,   -1,   -1,   -1,
   -1,   -1,  405,   -1,  407,  408,  409,  331,  549,  333,
   -1,   -1,   -1,   -1,  338,   -1,  419,   -1,   -1,   -1,
   -1,  424,   -1,   -1,  427,  428,   -1,   -1,   -1,   -1,
  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  444,  445,  446,  447,   -1,  449,  450,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  387,   -1,   -1,  469,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  504,  505,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  531,  532,
  533,  534,  535,  536,  537,   -1,   -1,  540,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  549,   -1,   -1,   -1,
   -1,   -1,   -1,  477,   -1,  479,  480,  481,  482,  483,
  484,  485,  486,  487,  488,  489,  490,  491,  492,  493,
  494,  495,  291,  292,   -1,  499,   -1,   -1,  297,   -1,
  299,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  322,  323,   -1,  325,  326,  327,  328,
  329,   -1,   -1,   -1,   -1,  334,   -1,   -1,  337,   -1,
   -1,   -1,   -1,   -1,  343,   -1,   -1,   -1,   -1,  348,
   -1,  350,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  362,  363,  364,  365,  366,  367,  368,
  369,   -1,   -1,   -1,   -1,   -1,  375,
  };

					// line 1429 "grammar.jay"
}
					// line 4252
